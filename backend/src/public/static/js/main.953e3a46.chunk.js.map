{"version":3,"sources":["services/alert.service.ts","services/session-storage.service.ts","services/user.service.ts","store/actions/user.action.ts","store/actions/app-state.action.ts","assets/images/graphssvg.svg","pages/HomePage.tsx","services/local-storage.service.ts","services/util.service.ts","services/date.service.ts","components/MainAppMenu.tsx","components/MobileMenu.tsx","components/blocks/HeaderBlock.tsx","components/blocks/BalanceBlock.tsx","components/GetIcon.tsx","components/Loader.tsx","components/ActionPreview.tsx","components/blocks/SummeryBlock.tsx","components/blocks/GraphBlock.tsx","components/modals/SearchModal.tsx","components/modals/CategoryModal.tsx","components/modals/LabelModal.tsx","components/modals/ActionModal.tsx","components/modals/ConfirmModal.tsx","components/modals/SettingsModal.tsx","components/PaginationDots.tsx","pages/MainApp.tsx","App.tsx","store/reducers/user.reducer.ts","store/reducers/app-state.reducer.ts","store/store.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["alertMessage","message","type","duration","store","addNotification","insert","container","animationIn","animationOut","dismiss","onScreen","alertTitleMessage","title","sessionStorageService","load","key","obj","sessionStorage","getItem","JSON","parse","save","setItem","stringify","remove","removeItem","axios","Axios","create","withCredentials","userService","signup","login","logout","deleteUser","updateUser","updateData","getData","getUser","addAction","deleteAction","duplicateAction","addCategory","deleteCategory","addLabel","deleteLabel","uploadImg","BASE_URL","credentials","a","post","res","data","msg","console","error","delete","put","filterBy","startDate","endDate","get","action","actionId","category","categoryId","label","labelId","file","process","UPLOAD_URL","formData","FormData","append","fetch","method","body","then","json","url","catch","err","dispatch","user","updatedUser","updatedData","setBlocksIdx","blocksIdx","setPaginationDots","isPaginationDots","setLoader","loaderState","setCurrentViewMode","viewMode","setCurrentLabels","labels","setSelectedAction","setFilterBy","HomePage","useDispatch","navigate","useNavigate","loggedInUser","useSelector","state","userModule","useState","formState","setFormState","userName","firstName","lastName","password","isGoogle","setFormData","errors","setErrors","useEffect","_getUser","handleSignup","errorsCopy","passwordTests","isValidUserName","test","isValidPassword","every","isValid","className","src","graphSvg","alt","onClick","prevState","Box","onChange","ev","target","name","value","component","sx","m","width","autoComplete","TextField","helperText","Button","clientId","buttonText","onSuccess","responseGoogle","credendials","profileObj","email","givenName","familyName","googleId","picture","imageUrl","onFailure","cookiePolicy","localStorageService","localStorage","utilService","debounce","func","timeout","timer","args","clearTimeout","setTimeout","makeId","length","txt","possible","i","charAt","Math","floor","random","getFormatedDigits","num","getCurrencies","getSymbolFromCode","currencyCode","currencySymbol","getIcons","getColors","CURRENCY_API","currencies","results","log","dateService","getDayTimestampByHour","date","hour","now","Date","getMonth","getDate","getFullYear","getTime","getDaysTimeData","days","timePoints","timeStamps","push","getMonthsTimeData","firstDate","monthIdx","yearIdx","getShortYear","dateIdx","getNextMonth","getYearsTimeData","getMonthStartTimeStamp","getDayMaxHour","timeStamp","day","month","year","getDayMinHour","getRelativeDate","nowTimeStamp","dateTimeStamp","hours","getHours","minutes","getMinutes","getDateAsString","dateObj","calculatePeriodDays","rawResult","ceil","getDateFilterBy","thisYear","thisMonth","dateString","substr","MainAppMenu","isMenuOpen","setMenuOpen","setActionModalOpen","setSettingsModalOpen","currentViewMode","appStateModule","currentLabels","handleViewModeClick","style","backgroundImage","map","newLabels","includes","idx","findIndex","splice","newFilterBy","handleLabelClick","labelName","_id","searchTxt","categories","MobileMenu","HeaderBlock","setSearchModalOpen","startDateString","endDateString","BalanceBlock","rawData","balance","setBalance","balanceColor","setBalanceColor","actions","reduce","some","description","amount","color","round","toLocaleString","currency","sign","GetIcon","iconName","Loader","isLoader","opacity","pointerEvents","ActionPreview","selectedAction","onDelete","stopPropagation","onDuplicate","categoryData","find","currCat","findCategoryData","backgroundColor","bgColor","icon","createdAt","toString","transform","options","maintainAspectRatio","plugins","legend","display","scale","ticks","precision","aspectRatio","SummeryBlock","dataMap","setDataMap","pieData","setPieData","actionsData","setActionsData","sum","actionsObj","filter","sort","b","forEach","dateStr","Object","entries","backgroundColors","datasets","borderColor","values","borderWidth","expense","Fragment","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","responsive","GraphBlock","graphData","setGraphData","daysPeriod","expensesDataset","incomesDataset","investmentsDataset","timePoint","timeData","justifyContent","redraw","emptyFilterBy","SearchModal","closeModal","globalFilterBy","handleChange","handleDateChange","field","selectedTimeStamp","alert","variant","noValidate","LocalizationProvider","dateAdapter","AdapterDateFns","Stack","spacing","MobileDatePicker","inputFormat","onAccept","renderInput","params","FormControl","fullWidth","InputLabel","id","Select","multiple","placeholder","MenuItem","direction","setGlobalFilterBy","colors","icons","btnErrorStyle","border","CategoryModal","categoryToEdit","categoryName","setCategoryName","selectedIcon","setSelectedIcon","selectedColor","setSelectedColor","isColorsModalOpen","setColorsModal","isIconsModalOpen","setIconsModal","onSubmit","categoryFormatedName","toUpperCase","newCategory","isOpen","exitDimmer","zIndex","blur","saturate","selectColorHandle","selectIconHandle","LabelModal","labelToEdit","setLabel","setError","onSubmitLabel","formatedLabel","toLowerCase","split","char","join","newLabel","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","ActionModal","useTheme","addCategoryModal","setAddCategoryModal","addLabelModal","setAddLabelModal","MobileDateTimePicker","ampm","currentTimeStamp","formDataCopy","input","OutlinedInput","renderValue","selected","overflowX","gap","Chip","ConfirmModal","setAnswer","tabs","SettingsModal","currentTab","setCurrentTab","tab","borderBottom","AccountSettings","password1","password2","confirmModal","setConfirmModal","pictureRef","useRef","handlePictureUpload","files","handleSubmit","formToSubmit","handleConfirmModal","modalMessage","handleModalAnswer","answer","current","click","ref","PreferencesSettings","setCurrencies","minWidth","FormHelperText","code","currencyName","CategoriesSettings","selectedCategory","setSelectedCategory","handleDelete","LabelsSettings","selectedLabel","setSelectedLabel","PaginationDots","MainApp","isSearchModalOpen","isSettingsModalOpen","isActionModalOpen","blocksRef","_getData","updatePaginationDots","scrollingElement","scrollTop","window","scrollY","addEventListener","removeEventListener","handleBlocksScroll","scrollLeft","onScroll","App","path","element","initialState","currentLabel","rootReducer","combineReducers","createStore","applyMiddleware","thunk","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.953e3a46.chunk.js","sourcesContent":["import { store } from 'react-notifications-component';\r\n\r\nexport interface IAlertMessage{\r\n    message: string;\r\n    type: \"success\" | \"danger\" | \"info\" | \"default\" | \"warning\" | undefined;\r\n    duration: number;\r\n    title: string;\r\n}\r\n\r\nexport function alertMessage(message: string, type: IAlertMessage[\"type\"], duration: number = 3500) {\r\n    return store.addNotification({\r\n        message,\r\n        type,\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__backInRight\"],\r\n        animationOut: [\"animate__animated\", \"animate__backOutRight\"],\r\n        dismiss: {\r\n            duration,\r\n            onScreen: true\r\n        }\r\n    });\r\n}\r\n\r\nexport function alertTitleMessage(title: string, message: string, type: IAlertMessage[\"type\"], duration: number = 3500) {\r\n    return store.addNotification({\r\n        title,\r\n        message,\r\n        type,\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__backInRight\"],\r\n        animationOut: [\"animate__animated\", \"animate__backOutRight\"],\r\n        dismiss: {\r\n            duration,\r\n            onScreen: true\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\nexport function removeMessage(messageId: string) {\r\n    store.removeNotification(messageId)\r\n}","export const sessionStorageService = {\r\n    load,\r\n    save,\r\n    remove\r\n}\r\n\r\nfunction load(key: string): any {\r\n    const obj: any = sessionStorage.getItem(key)\r\n    return JSON.parse(obj)\r\n}\r\n\r\nfunction save(key: string, obj: any) {\r\n    sessionStorage.setItem(key, JSON.stringify(obj))\r\n}\r\n\r\nfunction remove(key: string) {\r\n    sessionStorage.removeItem(key)\r\n}","import { IAction, ICategory, ILabel, IDateFilterBy, IDataUpdateForm, IFilterBy } from \"../interfaces/dataInterfaces\"\r\nimport Axios from \"axios\"\r\nimport { sessionStorageService } from \"./session-storage.service\"\r\nimport { IUpdateForm } from \"../interfaces/userInterfaces\"\r\nimport { alertTitleMessage } from \"./alert.service\"\r\n\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const userService = {\r\n    signup,\r\n    login,\r\n    logout,\r\n    deleteUser,\r\n    updateUser,\r\n    updateData,\r\n    getData,\r\n    getUser,\r\n    addAction,\r\n    deleteAction,\r\n    duplicateAction,\r\n    addCategory,\r\n    deleteCategory,\r\n    addLabel,\r\n    deleteLabel,\r\n    uploadImg\r\n}\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '' : '//localhost:3030'\r\n\r\ninterface ICredentials {\r\n    userName: string,\r\n    password: string,\r\n    firstName?: string,\r\n    lastName?: string\r\n}\r\n\r\n// User Functions\r\n\r\nasync function signup(credentials: ICredentials) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/auth/signup`, credentials)\r\n        if (!res.data.msg) {\r\n            sessionStorageService.save('loggedInUser', res.data)\r\n        }\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function login(credentials: ICredentials) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/auth/login`, credentials)\r\n        if (!res.data.msg) {\r\n            sessionStorageService.save('loggedInUser', res.data)\r\n        }\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function logout() {\r\n    try {\r\n        await axios.post(`${BASE_URL}/api/auth/logout`)\r\n        sessionStorageService.remove('loggedInUser')\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n\r\nasync function deleteUser() {\r\n    try {\r\n        const res = await axios.delete(`${BASE_URL}/api/user`)\r\n        if(!res.data.msg){\r\n            sessionStorageService.remove('loggedInUser')\r\n        }\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function updateUser(data: IUpdateForm) {\r\n    try {\r\n        const res = await axios.put(`${BASE_URL}/api/user/user`, data)\r\n        if (!res.data.msg) {\r\n            sessionStorageService.save('loggedInUser', res.data)\r\n        }\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function updateData(data: IDataUpdateForm, filterBy: IFilterBy) {\r\n    try {\r\n        const res = await axios.put(`${BASE_URL}/api/user/data?startDate=${filterBy.startDate}&endDate=${filterBy.endDate}`, data)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n// CURD Functions\r\n\r\nasync function getData(filterBy: IDateFilterBy) {\r\n    try {\r\n        const res = await axios.get(`${BASE_URL}/api/user/data?startDate=${filterBy.startDate}&endDate=${filterBy.endDate}`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function getUser() {\r\n    try {\r\n        const res = await axios.get(`${BASE_URL}/api/user/user`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n\r\nasync function addAction(action: IAction, filterBy: IFilterBy) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/user/action?startDate=${filterBy.startDate}&endDate=${filterBy.endDate}`, action)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function deleteAction(actionId: string, filterBy: IFilterBy) {\r\n    try {\r\n        const res = await axios.delete(`${BASE_URL}/api/user/action/${actionId}?startDate=${filterBy.startDate}&endDate=${filterBy.endDate}`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function duplicateAction(actionId: string, filterBy: IFilterBy) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/user/action/${actionId}?startDate=${filterBy.startDate}&endDate=${filterBy.endDate}`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function addCategory(category: ICategory, filterBy: IFilterBy) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/user/category?startDate=${filterBy.startDate}&endDate=${filterBy.endDate}`, category)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function deleteCategory(categoryId: string, filterBy: IFilterBy) {\r\n    try {\r\n        const res = await axios.delete(`${BASE_URL}/api/user/category/${categoryId}?startDate=${filterBy.startDate}&endDate=${filterBy.endDate}`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function addLabel(label: ILabel, filterBy: IFilterBy) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/user/label?startDate=${filterBy.startDate}&endDate=${filterBy.endDate}`, label)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function deleteLabel(labelId: string, filterBy: IFilterBy) {\r\n    try {\r\n        const res = await axios.delete(`${BASE_URL}/api/user/label/${labelId}?startDate=${filterBy.startDate}&endDate=${filterBy.endDate}`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function uploadImg(file: File) {\r\n    try {\r\n        const CLOUD_NAME = process.env.REACT_APP_CLOUD_NAME\r\n        const UPLOAD_PRESET: any = process.env.REACT_APP_UPLOAD_PRESET\r\n        const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n        formData.append('upload_preset', UPLOAD_PRESET);\r\n\r\n        return fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                return res.url\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n                alertTitleMessage('Opps, an error occurred', 'Could not upload image, try again later', 'danger', 3500)\r\n                return null\r\n            })\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}","import { IAction, ICategory, ILabel, IDateFilterBy, IDataUpdateForm, IFilterBy } from \"../../interfaces/dataInterfaces\"\r\nimport { ICredentials, IUpdateForm } from \"../../interfaces/userInterfaces\"\r\nimport { alertTitleMessage } from \"../../services/alert.service\"\r\nimport { userService } from \"../../services/user.service\"\r\nimport { AppDispatch } from \"../store\"\r\n\r\nexport const signup = (credentials: ICredentials) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const user = await userService.signup(credentials)\r\n            dispatch({\r\n                type: \"SET_USER\",\r\n                user\r\n            })\r\n            return user\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (credentials: ICredentials) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({\r\n                type: \"SET_USER\",\r\n                user\r\n            })\r\n            return user\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            await userService.logout()\r\n            dispatch({\r\n                type: \"SET_USER\",\r\n                user: null\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUser = () => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.deleteUser()\r\n            if (data) {\r\n                if (!data.msg) {\r\n                    dispatch({\r\n                        type: \"SET_USER\",\r\n                        user: null\r\n                    })\r\n                } else {\r\n                    alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n                }\r\n            } else {\r\n                alertTitleMessage('Opps, an error occurred', 'Could not delete your account, try again later', 'danger', 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getData = (filterBy: IDateFilterBy) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.getData(filterBy)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUser = () => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.getUser()\r\n            if (!data?.msg) {\r\n                dispatch({\r\n                    type: \"SET_USER\",\r\n                    user: data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUser = (updatedUser: IUpdateForm) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.updateUser(updatedUser)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_USER\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateData = (updatedData: IDataUpdateForm, filterBy: IFilterBy) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.updateData(updatedData, filterBy)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const addAction = (action: IAction, filterBy: IFilterBy) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.addAction(action, filterBy)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteAction = (actionId: string, filterBy: IFilterBy) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.deleteAction(actionId, filterBy)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const duplicateAction = (actionId: string, filterBy: IFilterBy) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.duplicateAction(actionId, filterBy)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const addCategory = (category: ICategory, filterBy: IFilterBy) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.addCategory(category, filterBy)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCategory = (categoryId: string, filterBy: IFilterBy) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.deleteCategory(categoryId, filterBy)\r\n            if (data) {\r\n                if (!data.msg) {\r\n                    dispatch({\r\n                        type: \"SET_DATA\",\r\n                        data\r\n                    })\r\n                } else {\r\n                    alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n                }\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const addLabel = (label: ILabel, filterBy: IFilterBy) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.addLabel(label, filterBy)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n                return data\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n                return null\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteLabel = (labelId: string, filterBy: IFilterBy) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.deleteLabel(labelId, filterBy)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}","import { IAction, IFilterBy } from \"../../interfaces/dataInterfaces\"\r\nimport { AppDispatch } from \"../store\"\r\n\r\nexport const setBlocksIdx = (blocksIdx: number) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_BLOCKS_IDX\",\r\n            blocksIdx\r\n        })\r\n    }\r\n}\r\n\r\nexport const setPaginationDots = (isPaginationDots: boolean) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_PAGINATION_DOTS\",\r\n            isPaginationDots\r\n        })\r\n    }\r\n}\r\n\r\nexport const setLoader = (loaderState: boolean) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_LOADER\",\r\n            loaderState\r\n        })\r\n    }\r\n}\r\n\r\nexport const setCurrentViewMode = (viewMode: string) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_VIEWMODE\",\r\n            viewMode\r\n        })\r\n    }\r\n}\r\n\r\nexport const setCurrentLabels = (labels: string[]) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_LABELS\",\r\n            labels\r\n        })\r\n    }\r\n}\r\n\r\nexport const setSelectedAction = (action: IAction | null) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_SELECTED_ACTION\",\r\n            action\r\n        })\r\n    }\r\n}\r\n\r\nexport const setFilterBy = (filterBy: IFilterBy) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_FILTERBY\",\r\n            filterBy\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/graphssvg.5a5ce136.svg\";","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { signup, login, getUser } from '../store/actions/user.action'\r\nimport { setLoader } from '../store/actions/app-state.action'\r\nimport { RootState } from '../store/store'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { alertMessage, alertTitleMessage } from '../services/alert.service'\r\nimport graphSvg from '../assets/images/graphssvg.svg'\r\n\r\ninterface IErrors {\r\n    [key: string]: boolean\r\n}\r\n\r\nexport const HomePage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const loggedInUser = useSelector((state: RootState) => state.userModule.loggedInUser)\r\n\r\n    const [formState, setFormState] = useState('login')\r\n    const [formData, setFormData] = useState({\r\n        userName: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        password: '',\r\n        isGoogle: false\r\n    })\r\n\r\n    const [errors, setErrors] = useState<IErrors>({\r\n        userName: false,\r\n        firstName: false,\r\n        lastName: false,\r\n        password: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const _getUser = async () => {\r\n            await dispatch(getUser())\r\n        }\r\n        _getUser()\r\n\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (loggedInUser) {\r\n            navigate('/mydata')\r\n        }\r\n    }, [loggedInUser, navigate])\r\n\r\n    const handleChange = (ev: React.ChangeEvent<HTMLFormElement>) => {\r\n        setFormData(prevState => { return { ...prevState, [ev.target.name]: ev.target.value } })\r\n    }\r\n\r\n    const handleSignup = async () => {\r\n        const errorsCopy = { ...errors }\r\n\r\n        const userNameTest = /^[A-Za-z][A-Za-z0-9!@#$%^&*_]{5,30}$/ // First char is a letter, rest can be numbers, letters or symbols, 5-30 length\r\n        const passwordTests = [/^[A-Za-z0-9!@#$%^&*_].{8,}$/, /[A-Z]/, /[a-z]/, /[!@#$%^&*_]/] // At least on of each: uppercase letter, lowercase letter, digit, symbol, length of at least 8\r\n\r\n\r\n        const isValidUserName = userNameTest.test(formData.userName)\r\n        const isValidPassword = passwordTests.every(test => test.test(formData.password))\r\n\r\n        if(!isValidPassword) alertTitleMessage('Invalid password', 'Must include at least 8 characters: upper and lower case, symbols and numbers', 'danger', 12000)\r\n        if(!isValidUserName) alertTitleMessage('Invalid username', 'Must include at least 5 characters: letters, numbers and symbols', 'danger', 12000)\r\n\r\n        errorsCopy.userName = !formData.userName ? true : false\r\n\r\n        if (!formData.userName || !isValidUserName) {\r\n            errorsCopy.userName = true\r\n        } else {\r\n            errorsCopy.userName = false\r\n        }\r\n\r\n        if (!formData.password || !isValidPassword) {\r\n            errorsCopy.password = true\r\n        } else {\r\n            errorsCopy.password = false\r\n        }\r\n\r\n        errorsCopy.firstName = !formData.firstName ? true : false\r\n        errorsCopy.lastName = !formData.lastName ? true : false\r\n\r\n        let isValid = true\r\n\r\n        for (const key in errorsCopy) {\r\n            if (errorsCopy[key]) {\r\n                isValid = false\r\n                break\r\n            }\r\n        }\r\n\r\n        if (isValid) {\r\n            (async () => {\r\n                dispatch(setLoader(true))\r\n                const user: any = await dispatch(signup(formData))\r\n                dispatch(setLoader(false))\r\n                if (user) {\r\n                    navigate(`/mydata`)\r\n                } else {\r\n                    setErrors({ ...errors, userName: true, password: true })\r\n                }\r\n            })()\r\n\r\n        } else {\r\n            setErrors(errorsCopy)\r\n        }\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        const userName = formData.userName\r\n        const password = formData.password\r\n\r\n        const errorsCopy = { ...errors }\r\n\r\n        let isValid = true\r\n\r\n        if (!userName) {\r\n            isValid = false\r\n            errorsCopy.userName = true\r\n        }\r\n        if (!password) {\r\n            isValid = false\r\n            errorsCopy.password = true\r\n        }\r\n\r\n\r\n        if (isValid) {\r\n            (async () => {\r\n                dispatch(setLoader(true))\r\n                const user: any = await dispatch(login(formData))\r\n                dispatch(setLoader(false))\r\n                if (user) {\r\n                    navigate(`/mydata`)\r\n                } else {\r\n                    setErrors(prevState => { return { ...prevState, userName: true, password: true } })\r\n                }\r\n            })()\r\n        } else {\r\n            setErrors(errorsCopy)\r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = (responseGoogle: any) => {\r\n\r\n        const credendials = {\r\n            userName: responseGoogle.profileObj.email,\r\n            firstName: responseGoogle.profileObj.givenName,\r\n            lastName: responseGoogle.profileObj.familyName,\r\n            password: responseGoogle.profileObj.googleId,\r\n            picture: responseGoogle.profileObj.imageUrl,\r\n            isGoogle: true\r\n        };\r\n\r\n\r\n        (async () => {\r\n            dispatch(setLoader(true))\r\n            const user: any = await dispatch(login({ userName: credendials.userName, password: credendials.password, isGoogle: true }))\r\n            dispatch(setLoader(false))\r\n            if (user) {\r\n                navigate(`/mydata`)\r\n            } else {\r\n                dispatch(setLoader(true))\r\n                const user: any = await dispatch(signup(credendials))\r\n                dispatch(setLoader(false))\r\n                if (user) {\r\n                    navigate(`/mydata`)\r\n                } else {\r\n                    setErrors({ ...errors, userName: true, password: true })\r\n                }\r\n            }\r\n        })()\r\n\r\n    }\r\n\r\n    const handleGoogleFail = () => {\r\n        alertMessage('Something went wrong, try again later...', 'warning', 3500)\r\n    }\r\n\r\n    const switchFormState = () => {\r\n        if (formState === 'signup') setFormState('login')\r\n        else setFormState('signup')\r\n    }\r\n\r\n    const demoLogin = () => {\r\n        (async () => {\r\n            dispatch(setLoader(true))\r\n            const user: any = await dispatch(login({ userName: 'DemoUser', password: '1234', isGoogle: false }))\r\n            dispatch(setLoader(false))\r\n            if (user) {\r\n                navigate(`/mydata`)\r\n            } else {\r\n                setErrors(prevState => { return { ...prevState, userName: true, password: true } })\r\n            }\r\n        })()\r\n    }\r\n\r\n\r\n    const googleClientId: string = process.env.REACT_APP_GOOGLE_CLIENT_ID || ''\r\n\r\n    return (\r\n        <>\r\n            <div className=\"homepage\">\r\n                <div className=\"left-side\">\r\n                    <h2 className=\"app-logo\">MoneyPipe</h2>\r\n                    <div className=\"prase\">\r\n                        <h3>Tracking your money</h3>\r\n                        <h3>has never been so simple</h3>\r\n                    </div>\r\n                    <img src={graphSvg} alt=\"graph\" />\r\n                </div>\r\n                <div className=\"right-side\">\r\n                    <h4 className=\"demo-user-btn\">Watch the <span onClick={demoLogin}><b>demo</b></span></h4>\r\n                    <h2 className=\"app-logo\">MoneyPipe</h2>\r\n                    <h4 className=\"form-state-header\">{formState === 'signup' ? 'Have an account? ' : `Don't have an account? `}<span onClick={switchFormState}><b>{formState === 'signup' ? 'Login' : 'Signup'}</b></span></h4>\r\n                    <h2 className=\"form-title\">{formState === 'signup' ? 'Create account' : 'Login'}</h2>\r\n                    <Box onChange={handleChange} component=\"form\" sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' }, }} autoComplete=\"off\">\r\n                        <TextField autoComplete=\"off\" label=\"username\" error={errors.userName} name=\"userName\" value={formData.userName} helperText={errors.userName ? 'invalid username' : ''} />\r\n                        {formState === 'signup' && <div className=\"name-fields\">\r\n                            <TextField autoComplete=\"off\" label=\"first name\" error={errors.firstName} name=\"firstName\" value={formData.firstName} />\r\n                            <TextField autoComplete=\"off\" label=\"last name\" error={errors.lastName} name=\"lastName\" value={formData.lastName} />\r\n                        </div>\r\n                        }\r\n                        <TextField autoComplete=\"off\" type=\"password\" label=\"password\" error={errors.password} name=\"password\" value={formData.password} helperText={errors.password ? 'invalid password' : ''} />\r\n                        <Button onClick={formState === 'signup' ? handleSignup : handleLogin}>{formState === 'signup' ? 'Sign up' : 'Login'}</Button>\r\n                    </Box>\r\n                    <hr></hr>\r\n                    <GoogleLogin\r\n                        clientId={googleClientId}\r\n                        buttonText='Continue with Google'\r\n                        onSuccess={handleGoogleLogin}\r\n                        onFailure={handleGoogleFail}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"dimmer-screen\"></div>\r\n        </>\r\n    )\r\n}\r\n","export const localStorageService = {\r\n    load,\r\n    save,\r\n    remove\r\n}\r\n\r\nfunction load(key: string): any {\r\n    const obj: any = localStorage.getItem(key)\r\n    return JSON.parse(obj)\r\n}\r\n\r\nfunction save(key: string, obj: any) {\r\n    localStorage.setItem(key, JSON.stringify(obj))\r\n}\r\n\r\nfunction remove(key: string) {\r\n    localStorage.removeItem(key)\r\n}","import axios from \"axios\"\r\nimport { localStorageService } from \"./local-storage.service\"\r\n\r\nexport const utilService = {\r\n    debounce,\r\n    makeId,\r\n    getFormatedDigits,\r\n    getCurrencies,\r\n    getSymbolFromCode,\r\n    getIcons,\r\n    getColors\r\n}\r\n\r\nconst CURRENCY_API = process.env.REACT_APP_CURRENCY_API\r\n\r\nfunction debounce<Params extends any[]>(func: (...args: Params) => any, timeout: number,): (...args: Params) => void {\r\n    let timer: NodeJS.Timeout\r\n\r\n    return (...args: Params) => {\r\n        clearTimeout(timer)\r\n        timer = setTimeout(() => {\r\n            func(...args)\r\n        }, timeout)\r\n    }\r\n}\r\n\r\nfunction makeId(length: number = 6) {\r\n    let txt = '';\r\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction getFormatedDigits(num: number) {\r\n    return num < 10 ? '0' + num : num\r\n}\r\n\r\nasync function getCurrencies() {\r\n    try{\r\n        const currencies = localStorageService.load('currencies')\r\n        if(currencies){\r\n            return currencies\r\n        } else {\r\n            const res = await axios.get(`https://free.currconv.com/api/v7/currencies?apiKey=${CURRENCY_API}`)\r\n            localStorageService.save('currencies', res.data.results)\r\n            return res.data.results\r\n        }\r\n    } catch(err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nfunction getSymbolFromCode(currencyCode: string) {\r\n    const currencies = localStorageService.load('currencies')\r\n    return currencies[currencyCode].currencySymbol\r\n}\r\n\r\nfunction getIcons() {\r\n    return [\r\n        'shopping-cart',\r\n        'car',\r\n        'bus',\r\n        'train',\r\n        'food',\r\n        'motorcycle',\r\n        'bottles',\r\n        'code',\r\n        'laptop',\r\n        'smartphone',\r\n        'beer',\r\n        'cocktail',\r\n        'smoke',\r\n        'home',\r\n        'money',\r\n        'coins',\r\n        'leaf',\r\n        'travel',\r\n        'fire',\r\n        'music',\r\n        'baby',\r\n        'ball',\r\n        'bicycle',\r\n        'box',\r\n        'book',\r\n        'student',\r\n        'bone',\r\n        'dog',\r\n        'building',\r\n        'camping',\r\n        'camera',\r\n        'capsules',\r\n        'pie-graph',\r\n        'industry',\r\n        'church',\r\n        'exclamation',\r\n        'water',\r\n        'warning',\r\n        'movie',\r\n        'gas',\r\n        'guitar',\r\n        'hamburger',\r\n        'hammer',\r\n        'heart',\r\n        'information',\r\n        'carry',\r\n        'bank',\r\n        'cube',\r\n        'old-phone',\r\n        'text',\r\n        'apple',\r\n        'globe',\r\n        'gym',\r\n        'clothes',\r\n        'plane'\r\n    ]\r\n}\r\n\r\nfunction getColors() {\r\n    return [\r\n        '#a8071a',\r\n        '#cf1322',\r\n        '#f5222d',\r\n        '#ff4d4f',\r\n        '#ad2102',\r\n        '#d4380d',\r\n        '#fa541c',\r\n        '#ff7a45',\r\n        '#ad4e00',\r\n        '#d46b08',\r\n        '#fa8c16',\r\n        '#ffa940',\r\n        '#ad6800',\r\n        '#d48806',\r\n        '#faad14',\r\n        '#ffc53d',\r\n        '#ad8b00',\r\n        '#d4b106',\r\n        '#fadb14',\r\n        '#ffec3d',\r\n        '#5b8c00',\r\n        '#7cb305',\r\n        '#a0d911',\r\n        '#bae637',\r\n        '#237804',\r\n        '#389e0d',\r\n        '#52c41a',\r\n        '#73d13d',\r\n        '#006d75',\r\n        '#08979c',\r\n        '#13c2c2',\r\n        '#36cfc9',\r\n        '#0050b3',\r\n        '#096dd9',\r\n        '#1890ff',\r\n        '#40a9ff',\r\n        '#10239e',\r\n        '#1d39c4',\r\n        '#2f54eb',\r\n        '#597ef7',\r\n        '#391085',\r\n        '#531dab',\r\n        '#722ed1',\r\n        '#9254de',\r\n        '#9e1068',\r\n        '#c41d7f',\r\n        '#eb2f96',\r\n        '#f759ab',\r\n        '#000000',\r\n        '#141414',\r\n        '#1f1f1f',\r\n        '#262626'\r\n    ]\r\n\r\n}","import { IFilterBy } from \"../interfaces/dataInterfaces\"\r\nimport { utilService } from \"./util.service\"\r\n\r\nexport const dateService = {\r\n    getDayTimestampByHour,\r\n    getDaysTimeData,\r\n    getMonthsTimeData,\r\n    getYearsTimeData,\r\n    getNextMonth,\r\n    getMonthStartTimeStamp,\r\n    getDayMaxHour,\r\n    getDayMinHour,\r\n    getRelativeDate,\r\n    getDateAsString,\r\n    getShortYear,\r\n    calculatePeriodDays,\r\n    getDateFilterBy\r\n}\r\n\r\nfunction getDayTimestampByHour(date: number, hour: string) {\r\n    const now = new Date(date)\r\n\r\n    return new Date(`${now.getMonth() + 1}/${now.getDate()}/${now.getFullYear()} ${hour}`).getTime()\r\n}\r\n\r\nfunction getDaysTimeData(days: number, filterBy: IFilterBy) {\r\n    let timePoints: string[] = []\r\n    let timeStamps: number[] = []\r\n\r\n    for (let i = 0; i < days; i++) {\r\n        const date = new Date(filterBy.startDate + (86400000 * i))\r\n        timePoints.push(`${date.getDate()}/${date.getMonth() + 1}`)\r\n        timeStamps.push(date.getTime())\r\n    }\r\n\r\n    return { timePoints, timeStamps }\r\n}\r\n\r\nfunction getMonthsTimeData(filterBy: IFilterBy) {\r\n    const firstDate = new Date(filterBy.startDate)\r\n\r\n    let monthIdx = firstDate.getMonth() + 1\r\n    let yearIdx = getShortYear(firstDate.getFullYear())\r\n\r\n    const firstTimePoint = `${utilService.getFormatedDigits(monthIdx)}/${yearIdx}`\r\n\r\n    let timePoints: string[] = [firstTimePoint]\r\n    let timeStamps: number[] = [filterBy.startDate]\r\n\r\n    let dateIdx = getNextMonth(monthIdx, yearIdx)\r\n\r\n    while (dateIdx < filterBy.endDate) {\r\n        const date = new Date(dateIdx)\r\n        monthIdx = date.getMonth() + 1\r\n        yearIdx = getShortYear(date.getFullYear())\r\n\r\n        timePoints.push(`${utilService.getFormatedDigits(monthIdx)}/${yearIdx}`)\r\n        timeStamps.push(date.getTime() - 1000)\r\n\r\n        dateIdx = getNextMonth(monthIdx, yearIdx)\r\n    }\r\n\r\n    timeStamps.push(filterBy.endDate)\r\n\r\n    return { timePoints, timeStamps }\r\n}\r\n\r\nfunction getYearsTimeData(filterBy: IFilterBy) {\r\n    let yearIdx = new Date(filterBy.startDate).getFullYear()\r\n\r\n    let timePoints: string[] = []\r\n    let timeStamps: number[] = [filterBy.startDate]\r\n\r\n    while(yearIdx < new Date().getFullYear()){\r\n        timePoints.push(`${yearIdx}`)\r\n        timeStamps.push(new Date(`01/01/${yearIdx + 1}`).getTime() - 1000)\r\n\r\n        yearIdx++\r\n    }\r\n    timePoints.push(`${new Date().getFullYear()}`)\r\n    timeStamps.push(filterBy.endDate)\r\n    \r\n    return { timePoints, timeStamps }\r\n}\r\n\r\nfunction getNextMonth(month: number, year: number) {\r\n    month++\r\n    if (month > 12) {\r\n        month = 1\r\n        year++\r\n    }\r\n\r\n    return getMonthStartTimeStamp(new Date(`${month}/01/${year}`))\r\n}\r\n\r\nfunction getMonthStartTimeStamp(date: Date = new Date()) {\r\n    const thisYear = date.getFullYear()\r\n    const thisMonth = date.getMonth() + 1\r\n\r\n    const dateString = new Date(`${thisMonth}/01/${thisYear}`)\r\n\r\n    return dateString.getTime()\r\n}\r\n\r\nfunction getDayMaxHour(timeStamp: number) {\r\n    const date = new Date(timeStamp)\r\n\r\n    const day = date.getDate()\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear()\r\n\r\n    return new Date(year, month, day, 23, 59, 59).getTime()\r\n}\r\n\r\nfunction getDayMinHour(timeStamp: number) {\r\n    const date = new Date(timeStamp)\r\n\r\n    const day = date.getDate()\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear()\r\n\r\n    return new Date(year, month, day, 0, 0, 0).getTime()\r\n}\r\n\r\nfunction getRelativeDate(timeStamp: number) {\r\n    const nowTimeStamp = new Date()\r\n    const dateTimeStamp = new Date(timeStamp)\r\n\r\n    const now = {\r\n        day: utilService.getFormatedDigits(nowTimeStamp.getDate()),\r\n        month: utilService.getFormatedDigits(nowTimeStamp.getMonth() + 1),\r\n        year: nowTimeStamp.getFullYear(),\r\n        hours: utilService.getFormatedDigits(nowTimeStamp.getHours()),\r\n        minutes: utilService.getFormatedDigits(nowTimeStamp.getMinutes()),\r\n    }\r\n\r\n    const date = {\r\n        day: utilService.getFormatedDigits(dateTimeStamp.getDate()),\r\n        month: utilService.getFormatedDigits(dateTimeStamp.getMonth() + 1),\r\n        year: dateTimeStamp.getFullYear(),\r\n        hours: utilService.getFormatedDigits(dateTimeStamp.getHours()),\r\n        minutes: utilService.getFormatedDigits(dateTimeStamp.getMinutes()),\r\n    }\r\n\r\n    // Today\r\n    if (now.day === date.day && now.year === date.year && now.month === date.month) {\r\n        return `Today ${date.hours}:${date.minutes}`\r\n        // Yesterday\r\n    } else if (now.day === utilService.getFormatedDigits(+date.day + 1) && now.year === date.year && now.month === date.month) {\r\n        return `Yesterday ${date.hours}:${date.minutes}`\r\n    // Some Date\r\n    } else {\r\n        return `${date.day}/${date.month} ${date.hours}:${date.minutes}`\r\n    }\r\n}\r\n\r\nfunction getDateAsString(date: number) {\r\n    const dateObj = new Date(date)\r\n    const day = dateObj.getDate()\r\n    const month = dateObj.getMonth() + 1\r\n\r\n    return `${utilService.getFormatedDigits(day)}/${utilService.getFormatedDigits(month)}/${dateObj.getFullYear()}`\r\n}\r\n\r\nfunction getShortYear(year: number) {\r\n    return +(year + '').substr(2,3)\r\n}\r\n\r\nfunction calculatePeriodDays(startDate: number, endDate: number){\r\n    const rawResult = endDate - startDate\r\n\r\n    return Math.ceil(rawResult / 86400000)\r\n}\r\n\r\nfunction getDateFilterBy(filterBy: IFilterBy){\r\n    return {\r\n        startDate: filterBy.startDate,\r\n        endDate: filterBy.endDate\r\n    }\r\n}","import React from 'react'\r\nimport { IoMdExit, IoMdSettings } from 'react-icons/io'\r\nimport { MdAddCircle } from 'react-icons/md'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../store/store'\r\nimport { setCurrentViewMode, setCurrentLabels, setLoader } from '../store/actions/app-state.action'\r\nimport { logout } from '../store/actions/user.action'\r\nimport { IDataObject } from '../interfaces/dataInterfaces'\r\nimport { setFilterBy } from '../store/actions/app-state.action'\r\nimport { useNavigate } from 'react-router'\r\nimport { IUser } from '../interfaces/userInterfaces'\r\nimport { sessionStorageService } from '../services/session-storage.service'\r\nimport { dateService } from '../services/date.service'\r\n\r\ninterface IMainAppMenuProps {\r\n    isMenuOpen: boolean;\r\n    setMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setActionModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setSettingsModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const MainAppMenu = ({ isMenuOpen, setMenuOpen, setActionModalOpen, setSettingsModalOpen }: IMainAppMenuProps) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const currentViewMode = useSelector((state: RootState) => state.appStateModule.currentViewMode)\r\n    const currentLabels = useSelector((state: RootState) => state.appStateModule.currentLabels)\r\n    const filterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n    const user: IUser = useSelector((state: RootState) => state.userModule.loggedInUser) || sessionStorageService.load('loggedInUser')\r\n    const data: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleViewModeClick = (value: string) => {\r\n        dispatch(setCurrentViewMode(value))\r\n        setMenuOpen(false)\r\n    }\r\n\r\n    const handleLabelClick = (value: string) => {\r\n        const newLabels = [...currentLabels]\r\n\r\n        if (newLabels.includes(value)) {\r\n            const idx = newLabels.findIndex((label: string) => label === value)\r\n            newLabels.splice(idx, 1)\r\n        } else {\r\n            newLabels.push(value)\r\n        }\r\n\r\n        const newFilterBy = { ...filterBy, labels: newLabels }\r\n        dispatch(setCurrentLabels(newLabels))\r\n        dispatch(setFilterBy(newFilterBy))\r\n        setMenuOpen(false)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        (async () => {\r\n            dispatch(setLoader(true))\r\n            await dispatch(logout())\r\n            dispatch(setLoader(false))\r\n\r\n            // Reset the global filterBy\r\n            dispatch(setFilterBy({\r\n                searchTxt: '',\r\n                startDate: dateService.getMonthStartTimeStamp(),\r\n                endDate: dateService.getDayMaxHour(Date.now()),\r\n                labels: [],\r\n                categories: []\r\n            }))\r\n            dispatch(setCurrentViewMode('Summery'))\r\n            navigate('/')\r\n        })()\r\n    }\r\n\r\n    const _getUserImage = () => {\r\n        if (user && user.picture) {\r\n            return user.picture\r\n        } else {\r\n            return 'https://res.cloudinary.com/dfj4zd14o/image/upload/v1638993249/MoneyPipe_Users_assets/user_xco1rj.png'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`main-app-menu ${isMenuOpen ? 'open-menu' : ''}`}>\r\n            <h1 className=\"app-logo\">MoneyPipe</h1>\r\n            <div className=\"user-details\">\r\n                <div className=\"image\" style={{ backgroundImage: `url(${_getUserImage()})` }}></div>\r\n                <h3>{user && user.firstName} {user && user.lastName}</h3>\r\n            </div>\r\n            <div className=\"main-menu\">\r\n                <div className=\"inner-menu\">\r\n                    <h2>View mode</h2>\r\n                    <ul>\r\n                        <li className={`${currentViewMode === 'Summery' ? 'menu-li-active' : ''}`}\r\n                            onClick={() => { handleViewModeClick('Summery') }}>\r\n                            Summary\r\n                        </li>\r\n                        <li className={`${currentViewMode === 'Graph' ? 'menu-li-active' : ''}`}\r\n                            onClick={() => { handleViewModeClick('Graph') }}>\r\n                            Graph\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <hr />\r\n                <div className=\"inner-menu labels-menu\">\r\n                    <h2>My labels</h2>\r\n                    <ul>\r\n                        {data && data.labels.map(label => {\r\n                            return <li onClick={() => { handleLabelClick(label.labelName) }}\r\n                                className={`${currentLabels.includes(label.labelName) ? 'menu-li-active' : ''}`}\r\n                                key={label._id}>\r\n                                {label.title}\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"actions-bar\">\r\n                <div className=\"account-actions\">\r\n                    <IoMdExit className=\"logout-btn\" onClick={handleLogout} />\r\n                    <IoMdSettings onClick={() => { setSettingsModalOpen(true); setMenuOpen(false) }} />\r\n                </div>\r\n                <div className=\"quick-actions\">\r\n                    <MdAddCircle onClick={() => { setActionModalOpen(true); setMenuOpen(false) }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { GiHamburgerMenu } from 'react-icons/gi'\r\nimport { MdAddCircle } from 'react-icons/md'\r\n\r\ninterface IMobileMenuProps{\r\n    setMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setActionModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const MobileMenu = ({setMenuOpen, setActionModalOpen}: IMobileMenuProps) => {\r\n    return (\r\n        <div className=\"mobile-menu\">\r\n            <div className=\"mobile-menu-icon\">\r\n                <GiHamburgerMenu onClick={() => {setMenuOpen(prevState => !prevState)}}/>\r\n            </div>\r\n            <h1 className=\"app-logo\">MoneyPipe</h1>\r\n            <div className=\"mobile-menu-icon\">\r\n                <MdAddCircle onClick={() => {setActionModalOpen(true)}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../store/store'\r\nimport { BiSearchAlt } from 'react-icons/bi'\r\nimport { dateService } from '../../services/date.service'\r\n\r\ninterface IHeaderProps {\r\n    setSearchModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const HeaderBlock = ({setSearchModalOpen}: IHeaderProps) => {\r\n\r\n    const currentViewMode = useSelector((state: RootState) => state.appStateModule.currentViewMode)\r\n    const currentLabels: string[] = useSelector((state: RootState) => state.appStateModule.currentLabels)\r\n    const filterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const startDateString = dateService.getDateAsString(filterBy.startDate)\r\n    const endDateString = dateService.getDateAsString(filterBy.endDate)\r\n\r\n    return (\r\n        <div className=\"header-block\">\r\n            <div className=\"header-block-content\">\r\n                {!!currentLabels?.length && <h2><span className=\"labels\">{currentLabels.map((label: string) => <span key={label} className=\"label\">{label}</span>)}</span><p>-</p><span className=\"dates\">{startDateString} - {endDateString}</span></h2>}\r\n                {(!currentLabels?.length && currentViewMode) && <h2>{currentViewMode === 'Summery' ? 'Summary' : 'Graph'}<p>-</p><span>{startDateString} - {endDateString}</span></h2>}\r\n                <p>{currentViewMode === 'Summery' ? 'Summary' : 'Graph'} of incomes and expenses</p>\r\n            </div>\r\n            <div className=\"filter-btn\">\r\n                <BiSearchAlt onClick={() => {setSearchModalOpen(true)}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { IDataObject } from '../../interfaces/dataInterfaces'\r\nimport { RootState } from '../../store/store'\r\n\r\nexport const BalanceBlock = () => {\r\n\r\n    const filterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n\r\n    const [balance, setBalance] = useState(0)\r\n    const [balanceColor, setBalanceColor] = useState('#000000')\r\n\r\n\r\n    useEffect(() => {\r\n        if(rawData){\r\n            const balance = rawData.actions.reduce((balance, action) => {\r\n                if (!!filterBy.categories?.length && filterBy.categories.every((category: string) => category !== action.category)) return balance\r\n                if (!!filterBy.labels?.length && !action.labels.some((label: string) => filterBy.labels.includes(label))) return balance\r\n                if (!action.description.includes(filterBy.searchTxt)) return balance\r\n                \r\n                if (action.type === 'income') balance += +action.amount\r\n                if (action.type === 'expense') balance -= +action.amount\r\n                return balance\r\n            }, 0)\r\n            \r\n            setBalance(balance)\r\n            if(balance === 0){\r\n                setBalanceColor('#000000')\r\n            } else{\r\n                setBalanceColor(balance > 0 ? '#00600F' : '#8A0000')\r\n            }\r\n        }\r\n    }, [rawData, filterBy])\r\n\r\n    return (\r\n        <div className=\"header-block\">\r\n            <div className=\"header-block-content\">\r\n                <h2>Balance</h2>\r\n                <p>Total balance</p>\r\n            </div>\r\n            <div className=\"balance-amount\" style={{color: balanceColor}}>{balance ? Math.round(balance).toLocaleString() : '0'}{rawData && rawData.currency.sign}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IoIosWarning } from 'react-icons/io'\r\n\r\nimport { HiShoppingCart } from 'react-icons/hi'\r\nimport { MdDirectionsCar, MdFastfood } from 'react-icons/md'\r\nimport { FaMotorcycle, FaBeer, FaEnvira, FaFly, FaHotjar, FaItunesNote, FaUntappd, FaBabyCarriage, FaBasketballBall, FaBicycle, FaBoxOpen, FaBook, FaBone, FaBus, FaBuilding, FaCampground, FaCamera, FaCapsules, FaCity, FaChartPie, FaChurch, FaCocktail, FaCode, FaCoins, FaDog, FaExclamationCircle, FaFaucet, FaExclamationTriangle, FaFilm, FaGasPump, FaGuitar, FaHamburger, FaHammer, FaHeart, FaInfoCircle, FaLaptop, FaMobileAlt, FaPeopleCarry, FaSmoking, FaSubway, FaUserGraduate, FaPlane } from 'react-icons/fa'\r\nimport { BsFillHouseDoorFill } from 'react-icons/bs'\r\nimport { GiClothes, GiMoneyStack } from 'react-icons/gi'\r\nimport { CgGym } from 'react-icons/cg'\r\nimport { AiFillBank, AiFillCodeSandboxCircle, AiFillPhone,AiOutlineAlignLeft, AiOutlineApple, AiOutlineGlobal } from 'react-icons/ai'\r\n\r\n\r\ninterface IconProps {\r\n    iconName: string;\r\n}\r\n\r\nexport const GetIcon = ({ iconName }: IconProps) => {\r\n    return <>\r\n        {iconName === 'shopping-cart' && <HiShoppingCart />}\r\n        {iconName === 'car' && <MdDirectionsCar />}\r\n        {iconName === 'bus' && <FaBus />}\r\n        {iconName === 'train' && <FaSubway />}\r\n        {iconName === 'food' && <MdFastfood />}\r\n        {iconName === 'motorcycle' && <FaMotorcycle />}\r\n        {iconName === 'code' && <FaCode />}\r\n        {iconName === 'beer' && <FaBeer />}\r\n        {iconName === 'cocktail' && <FaCocktail />}\r\n        {iconName === 'home' && <BsFillHouseDoorFill />}\r\n        {iconName === 'money' && <GiMoneyStack />}\r\n        {iconName === 'coins' && <FaCoins />}\r\n        {iconName === 'leaf' && <FaEnvira />}\r\n        {iconName === 'travel' && <FaFly />}\r\n        {iconName === 'fire' && <FaHotjar />}\r\n        {iconName === 'music' && <FaItunesNote />}\r\n        {iconName === 'bottles' && <FaUntappd />}\r\n        {iconName === 'baby' && <FaBabyCarriage />}\r\n        {iconName === 'ball' && <FaBasketballBall />}\r\n        {iconName === 'bicycle' && <FaBicycle />}\r\n        {iconName === 'plane' && <FaPlane />}\r\n        {iconName === 'box' && <FaBoxOpen />}\r\n        {iconName === 'book' && <FaBook />}\r\n        {iconName === 'student' && <FaUserGraduate />}\r\n        {iconName === 'bone' && <FaBone />}\r\n        {iconName === 'dog' && <FaDog />}\r\n        {iconName === 'building' && <FaBuilding />}\r\n        {iconName === 'camping' && <FaCampground />}\r\n        {iconName === 'camera' && <FaCamera />}\r\n        {iconName === 'capsules' && <FaCapsules />}\r\n        {iconName === 'pie-graph' && <FaChartPie />}\r\n        {iconName === 'industry' && <FaCity />}\r\n        {iconName === 'church' && <FaChurch />}\r\n        {iconName === 'exclamation' && <FaExclamationCircle />}\r\n        {iconName === 'water' && <FaFaucet />}\r\n        {iconName === 'warning' && <FaExclamationTriangle />}\r\n        {iconName === 'movie' && <FaFilm />}\r\n        {iconName === 'gas' && <FaGasPump />}\r\n        {iconName === 'guitar' && <FaGuitar />}\r\n        {iconName === 'hamburger' && <FaHamburger />}\r\n        {iconName === 'hammer' && <FaHammer />}\r\n        {iconName === 'heart' && <FaHeart />}\r\n        {iconName === 'information' && <FaInfoCircle />}\r\n        {iconName === 'laptop' && <FaLaptop />}\r\n        {iconName === 'smartphone' && <FaMobileAlt />}\r\n        {iconName === 'carry' && <FaPeopleCarry />}\r\n        {iconName === 'smoke' && <FaSmoking />}\r\n        {iconName === 'bank' && <AiFillBank />}\r\n        {iconName === 'cube' && <AiFillCodeSandboxCircle />}\r\n        {iconName === 'old-phone' && <AiFillPhone />}\r\n        {iconName === 'text' && <AiOutlineAlignLeft />}\r\n        {iconName === 'apple' && <AiOutlineApple />}\r\n        {iconName === 'globe' && <AiOutlineGlobal />}\r\n        {iconName === 'gym' && <CgGym />}\r\n        {iconName === 'clothes' && <GiClothes />}\r\n\r\n        {!iconName && <IoIosWarning />}\r\n    </>\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../store/store'\r\n\r\nexport const Loader = () => {\r\n\r\n    const isLoader = useSelector((state: RootState) => state.appStateModule.loaderState)\r\n\r\n    return (\r\n        <div className=\"loader-container\" style={isLoader ? {opacity: '1', pointerEvents: 'visible'} : {}}>\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport { IAction, IDataObject, IFilterBy } from '../interfaces/dataInterfaces'\r\nimport { RootState } from '../store/store'\r\nimport { GetIcon } from './GetIcon'\r\nimport { FaRegEdit } from 'react-icons/fa'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { CgDuplicate } from 'react-icons/cg'\r\nimport { setLoader, setSelectedAction } from '../store/actions/app-state.action'\r\nimport { deleteAction, duplicateAction } from '../store/actions/user.action'\r\nimport { dateService } from '../services/date.service'\r\nimport { Loader } from './Loader'\r\n\r\n\r\ninterface IActionProps {\r\n    action: IAction;\r\n    setActionModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\n\r\nexport const ActionPreview = ({ action, setActionModalOpen }: IActionProps) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const selectedAction: IAction | null = useSelector((state: RootState) => state.appStateModule.selectedAction)\r\n    const filterBy: IFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const findCategoryData = (category: string) => {\r\n        if (rawData) {\r\n            const currCat = rawData.categories.find(currCat => currCat.title === category)\r\n            return currCat\r\n        }\r\n    }\r\n\r\n    const onDelete = async (ev: React.MouseEvent<HTMLElement>) => {\r\n        ev.stopPropagation()\r\n        dispatch(setLoader(true))\r\n        await dispatch(deleteAction(action._id, filterBy))\r\n        dispatch(setLoader(false))\r\n        dispatch(setSelectedAction(null))\r\n    }\r\n    \r\n    const onEdit = (ev: React.MouseEvent<HTMLElement>) => {\r\n        ev.stopPropagation()\r\n        setActionModalOpen(true)\r\n    }\r\n    \r\n    const onDuplicate = async (ev: React.MouseEvent<HTMLElement>) => {\r\n        ev.stopPropagation()\r\n        dispatch(setLoader(true))\r\n        await dispatch(duplicateAction(action._id, filterBy))\r\n        dispatch(setLoader(false))\r\n        dispatch(setSelectedAction(null))\r\n    }\r\n\r\n    const handleActionClick = () => {\r\n        if (!selectedAction) {\r\n            dispatch(setSelectedAction(action))\r\n        } else {\r\n            if (selectedAction._id !== action._id) {\r\n                dispatch(setSelectedAction(action))\r\n            } else {\r\n                dispatch(setSelectedAction(null))\r\n            }\r\n        }\r\n    }\r\n\r\n    const categoryData = findCategoryData(action.category)\r\n\r\n    if (!categoryData) return <Loader />\r\n    return (\r\n        <div className={`action-preview ${selectedAction?._id === action._id ? 'selected-action' : ''}`} onClick={handleActionClick}>\r\n            <div className=\"left-side \">\r\n                <div className=\"action-details-icon\" style={{ backgroundColor: categoryData.bgColor }}>\r\n                    <GetIcon iconName={categoryData.icon} />\r\n                </div>\r\n                <div className=\"action-data \">\r\n                    <p className=\"action-date \">{dateService.getRelativeDate(action.createdAt)}</p>\r\n                    <h3>{action.description}</h3>\r\n                    <p className=\"action-labels \">{action.labels?.length ? action.labels.map(label => {\r\n                        return <span key={`label-${action.createdAt}-${label}`}>{label}</span>\r\n                    }) : <span></span> }</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-side \">\r\n                <h3>{(+action.amount.toString()).toLocaleString()}{rawData.currency.sign}</h3>\r\n            </div>\r\n            <div className=\"action-preview-actions \" style={{ transform: selectedAction?._id === action._id ? 'translateX(0%)' : 'translateX(100%)' }}>\r\n                <button onClick={onDuplicate}><CgDuplicate /></button>\r\n                <button onClick={onEdit}><FaRegEdit /></button>\r\n                <button onClick={onDelete}><VscTrash /></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { IActionsData, IDataMap, IDataObject, IPieData } from '../../interfaces/dataInterfaces'\r\nimport { RootState } from '../../store/store'\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { ActionPreview } from '../ActionPreview';\r\nimport { utilService } from '../../services/util.service';\r\nimport { dateService } from '../../services/date.service';\r\nimport { Loader } from '../Loader';\r\n\r\ninterface ISummeryBlockProps {\r\n    type: string;\r\n    setActionModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst options = {\r\n    maintainAspectRatio: true,\r\n    plugins: {\r\n        legend: {\r\n            display: false\r\n        }\r\n    },\r\n    scale: {\r\n        ticks: {\r\n            precision: 0\r\n        },\r\n    },\r\n    aspectRatio: 1,\r\n}\r\n\r\nexport const SummeryBlock = ({ type, setActionModalOpen }: ISummeryBlockProps) => {\r\n\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const currentViewMode = useSelector((state: RootState) => state.appStateModule.currentViewMode)\r\n    const filterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const [dataMap, setDataMap] = useState<IDataMap | null>(null)\r\n    const [pieData, setPieData] = useState<IPieData | null>(null)\r\n    const [actionsData, setActionsData] = useState<IActionsData | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (rawData) {\r\n            let acc: IDataMap = {}\r\n\r\n            setDataMap(rawData.actions.reduce((dataMap, action) => {\r\n                if (action.type !== type) return dataMap\r\n                if (!!filterBy.categories?.length && filterBy.categories.every((category: string) => category !== action.category)) return dataMap\r\n                if (!!filterBy.labels?.length && !action.labels.some((label: string) => filterBy.labels.includes(label))) return dataMap\r\n                if (!action.description.includes(filterBy.searchTxt)) return dataMap\r\n\r\n                if (dataMap[action.category]) {\r\n                    dataMap[action.category].sum += +action.amount\r\n                } else {\r\n                    dataMap[action.category] = {\r\n                        sum: +action.amount,\r\n                        color: rawData.categories.find(category => category.title === action.category)?.bgColor || \"#ffffff\"\r\n                    }\r\n                }\r\n\r\n                return dataMap\r\n            }, acc))\r\n\r\n\r\n            const actionsObj: any = {}\r\n\r\n            rawData.actions.filter(action => {\r\n                if (action.type !== type) return false\r\n                if (!!filterBy.categories?.length && filterBy.categories.every((category: string) => category !== action.category)) return false\r\n                if (!!filterBy.labels?.length && !action.labels.some((label: string) => filterBy.labels.includes(label))) return false\r\n                if (!action.description.includes(filterBy.searchTxt)) return false\r\n                return true\r\n            }).sort((a, b) => b.createdAt - a.createdAt).forEach(action => {\r\n                const date = new Date(action.createdAt)\r\n                const dateStr = `${utilService.getFormatedDigits(date.getMonth() + 1)}/${dateService.getShortYear(date.getFullYear())}`\r\n                if (actionsObj[dateStr]) actionsObj[dateStr].push(action)\r\n                else {\r\n                    actionsObj[dateStr] = [action]\r\n                }\r\n            })\r\n            setActionsData(actionsObj)\r\n        }\r\n    }, [rawData, filterBy, type])\r\n\r\n    useEffect(() => {\r\n        if (dataMap) {\r\n            const labels = Object.entries(dataMap).sort((a,b) => b[1].sum - a[1].sum).map((data: any) => data[0])\r\n            const data = Object.entries(dataMap).sort((a,b) => b[1].sum - a[1].sum).map((data: any) => data[1].sum)\r\n            const backgroundColors = Object.entries(dataMap).sort((a,b) => b[1].sum - a[1].sum).map((data: any) => data[1].color)\r\n            \r\n            setPieData({\r\n                labels: labels,\r\n                datasets: [\r\n                    {\r\n                        label: '',\r\n                        data: data,\r\n                        backgroundColor: backgroundColors,\r\n                        borderColor: Object.values(dataMap).map(() => 'rgba(0, 0, 0, 1)'),\r\n                        borderWidth: 1,\r\n                    },\r\n                ],\r\n            })\r\n        }\r\n    }, [dataMap])\r\n\r\n    if (!rawData) return <Loader />\r\n\r\n    return (\r\n        <div className=\"summery-blocks\">\r\n            {currentViewMode === 'Summery' &&\r\n                <div className=\"summery-block\">\r\n                    <h2 className=\"summery-block-title\">{type}</h2>\r\n                    {(pieData && pieData.labels.length === 0) && <h2 className=\"no-data-title\">No data to display</h2>}\r\n                    {pieData && <div className=\"pie\"><Pie data={pieData} options={options} /></div> }\r\n\r\n                    <div className=\"summery-block-details\">\r\n                        {dataMap && Object.entries(dataMap).sort((a, b) => b[1].sum - a[1].sum).map(action => {\r\n                            return <div key={action[0] + action[1].sum + Math.random()} className=\"action-details\">\r\n                                <div className=\"action-color-dot\" style={{ backgroundColor: action[1].color }}></div>\r\n                                <h2 className=\"category\">{action[0]}</h2>\r\n                                <div className=\"sum\"><h2>{Math.round(action[1].sum).toLocaleString()}{rawData.currency.sign}</h2></div>\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    {pieData && <h2 className={`summery-block-total ${type}`}>\r\n                        {Math.round(pieData?.datasets[0].data.reduce((sum, expense) => {\r\n                            sum += expense\r\n                            return sum\r\n                        }, 0)).toLocaleString()}{rawData.currency.sign}\r\n                    </h2>\r\n                    }\r\n                </div>\r\n            }\r\n            <div className=\"actions-block\">\r\n                {(actionsData && Object.entries(actionsData).length === 0) && <h2 className=\"no-data-title\">No data to display</h2>}\r\n                {actionsData && Object.entries(actionsData).map(month => {\r\n                    return (\r\n                        <React.Fragment key={`${month[0]}-${type}`}>\r\n                            <h3 className=\"actions-month\">{`${month[0]} - ${Math.round(month[1].reduce((sum, action) => { sum += +action.amount; return sum }, 0)).toLocaleString()}${rawData.currency.sign}`}</h3>\r\n                            {\r\n                                month[1].sort((a, b) => b.createdAt - a.createdAt).map(action => <ActionPreview key={action._id} action={action} setActionModalOpen={setActionModalOpen} />)\r\n                            }\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport { IDataObject, IFilterBy } from '../../interfaces/dataInterfaces';\r\nimport { dateService } from '../../services/date.service';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst options = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            display: false,\r\n        }\r\n    }\r\n};\r\n\r\nexport const GraphBlock = () => {\r\n\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const filterBy: IFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const [graphData, setGraphData] = useState<any>(null)\r\n\r\n    useEffect(() => {\r\n        if (!rawData) return\r\n\r\n        // Get the amount of days => endDate - startDate\r\n        const daysPeriod = dateService.calculatePeriodDays(filterBy.startDate, filterBy.endDate)\r\n\r\n        // Initializing the graph's Data\r\n        const expensesDataset: any = {\r\n            data: [],\r\n            borderColor: '#c41f02',\r\n            backgroundColor: '#eb2300',\r\n        }\r\n\r\n        const incomesDataset: any = {\r\n            data: [],\r\n            borderColor: '#18b50d',\r\n            backgroundColor: '#0ecf00',\r\n        }\r\n\r\n        const investmentsDataset: any = {\r\n            data: [],\r\n            borderColor: '#f78b08',\r\n            backgroundColor: '#f78b08',\r\n        }\r\n\r\n        let timePoints: string[] = []\r\n        let timeStamps: number[] = []\r\n\r\n        // Calculating the graph's timePoints (X axis) and timeStamps according to them\r\n        // For different days periods, the calculations and data is shown differently\r\n        if (daysPeriod <= 1) {\r\n            timePoints = ['00:00', '06:00', '12:00', '18:00', '23:59']\r\n            timeStamps = timePoints.map(timePoint => dateService.getDayTimestampByHour(filterBy.startDate, timePoint))\r\n\r\n        } else if (daysPeriod <= 31) {\r\n            const timeData = dateService.getDaysTimeData(daysPeriod, filterBy)\r\n            timePoints = timeData.timePoints\r\n            timeStamps = timeData.timeStamps\r\n\r\n        } else if (daysPeriod <= 3650) {\r\n            const timeData = dateService.getMonthsTimeData(filterBy)\r\n            timePoints = timeData.timePoints\r\n            timeStamps = timeData.timeStamps\r\n\r\n        } else if (daysPeriod > 3650) {\r\n            const timeData = dateService.getYearsTimeData(filterBy)\r\n            timePoints = timeData.timePoints\r\n            timeStamps = timeData.timeStamps\r\n\r\n        }\r\n\r\n        // No Data\r\n        if (timePoints.length === 0) {\r\n            setGraphData(null)\r\n        } else {\r\n            // Initialize with amounts of 0 for each time point in the graph\r\n            expensesDataset.data = timeStamps.map(timeStamp => 0)\r\n            incomesDataset.data = [...expensesDataset.data]\r\n            investmentsDataset.data = [...expensesDataset.data]\r\n\r\n            rawData.actions.filter(action => {\r\n                if (!!filterBy.categories?.length && filterBy.categories.every((category: string) => category !== action.category)) return false\r\n                if (!!filterBy.labels?.length && !action.labels.some((label: string) => filterBy.labels.includes(label))) return false\r\n                if (!action.description.includes(filterBy.searchTxt)) return false\r\n                return true\r\n            }).forEach(action => {\r\n                timeStamps.forEach((timeStamp, idx, timeStamps) => {\r\n                    if (action.createdAt >= timeStamp) {\r\n                        if (idx === timeStamps.length - 1) {\r\n                            if (action.createdAt <= Date.now()) {\r\n                                switch (action.type) {\r\n                                    case 'expense':\r\n                                        expensesDataset.data[idx] += +action.amount\r\n                                        break;\r\n                                    case 'income':\r\n                                        incomesDataset.data[idx] += +action.amount\r\n                                        break;\r\n                                    case 'investment':\r\n                                        investmentsDataset.data[idx] += +action.amount\r\n                                        break;\r\n                                }\r\n                            }\r\n                        } else if (action.createdAt <= (timeStamps[idx + 1])) {\r\n                            switch (action.type) {\r\n                                case 'expense':\r\n                                    expensesDataset.data[idx] += +action.amount\r\n                                    break;\r\n                                case 'income':\r\n                                    incomesDataset.data[idx] += +action.amount\r\n                                    break;\r\n                                case 'investment':\r\n                                    investmentsDataset.data[idx] += +action.amount\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n\r\n            setGraphData({\r\n                labels: timePoints,\r\n                datasets: [expensesDataset, incomesDataset, investmentsDataset]\r\n            })\r\n        }\r\n\r\n    }, [rawData, filterBy])\r\n\r\n    return (\r\n        <div className=\"graph-block\" style={{ justifyContent: !graphData ? 'center' : '' }}>\r\n            {graphData && <Line redraw className=\"graph\" options={options} data={graphData} />}\r\n            {!graphData && <h2>No data to display</h2>}\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent } from '@mui/material';\r\nimport { IDataObject } from '../../interfaces/dataInterfaces';\r\nimport { setFilterBy as setGlobalFilterBy } from '../../store/actions/app-state.action'\r\nimport { setCurrentLabels } from '../../store/actions/app-state.action';\r\nimport { dateService } from '../../services/date.service';\r\n\r\ninterface IModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst emptyFilterBy = {\r\n    categories: [],\r\n    startDate: dateService.getMonthStartTimeStamp(),\r\n    endDate: dateService.getDayMaxHour(Date.now()),\r\n    labels: [],\r\n    searchTxt: \"\"\r\n}\r\n\r\nexport const SearchModal = ({ closeModal }: IModalProps) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const globalFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n\r\n    const [filterBy, setFilterBy] = useState(globalFilterBy)\r\n\r\n\r\n    const handleChange = (ev: SelectChangeEvent | any) => {\r\n        setFilterBy({ ...filterBy, [ev.target.name]: ev.target.value })\r\n    };\r\n\r\n    const handleDateChange = (date: number | null, field: string) => {\r\n        if (date) {\r\n            const selectedTimeStamp = new Date(date).getTime();\r\n\r\n            if(field === \"startDate\"){\r\n                if(selectedTimeStamp > filterBy.endDate){\r\n                    alert(\"Start date cannot be greater than the end date\")\r\n                    return\r\n                }\r\n            } else if(field === \"endDate\") {\r\n                // if(dateService.getDayMinHour(selectedTimeStamp) > Date.now()){\r\n                //     alert(\"End date cannot be greater than the current time\")\r\n                //     return\r\n                // }\r\n                if(selectedTimeStamp < filterBy.startDate){\r\n                    alert(\"End date cannot be smaller than the start date\")\r\n                    return\r\n                }\r\n            }\r\n\r\n            setFilterBy({ ...filterBy, [field]: field === 'endDate' ? dateService.getDayMaxHour(selectedTimeStamp) : selectedTimeStamp })\r\n        }\r\n    }\r\n\r\n    const handleApply = () => {\r\n        dispatch(setGlobalFilterBy(filterBy))\r\n        dispatch(setCurrentLabels(filterBy.labels))\r\n        closeModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal search-modal\">\r\n            <div className=\"modal-header\">\r\n                <h3>Search</h3>\r\n                <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false) }} />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <TextField autoComplete=\"off\" className=\"txt-input\" value={filterBy.searchTxt} name=\"searchTxt\" onChange={handleChange} label=\"Search by text\" variant=\"outlined\" />\r\n                <Box className=\"modal-form\" component=\"form\" noValidate autoComplete=\"off\" onChange={handleChange}>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <Stack spacing={3} className=\"date-filters\">\r\n                            <MobileDatePicker label=\"Start date\" inputFormat=\"dd/MM/yyyy\" value={filterBy.startDate} onAccept={(date) => { handleDateChange(date, 'startDate') }} onChange={(date) => { }} renderInput={(params) => <TextField autoComplete=\"off\" className=\"input-field\" {...params} />} />\r\n                            <MobileDatePicker label=\"End date\" inputFormat=\"dd/MM/yyyy\" value={filterBy.endDate} onAccept={(date) => { handleDateChange(date, 'endDate') }} onChange={(date) => { }} renderInput={(params) => <TextField autoComplete=\"off\" className=\"input-field\" {...params} />} />\r\n                        </Stack>\r\n                    </LocalizationProvider>\r\n                    <div className=\"input-selectors\">\r\n                        <div className=\"input-select\">\r\n                            <FormControl className=\"input-field\" fullWidth>\r\n                                <InputLabel id=\"category\">Category</InputLabel>\r\n                                <Select fullWidth labelId=\"category\" id=\"category\" multiple={true} placeholder='Select Categories' value={filterBy.categories} label=\"Category\" name=\"categories\" onChange={handleChange}>\r\n                                    {/* <MenuItem key={`cat-filter-none-option`} value={\"\"}>None</MenuItem> */}\r\n                                    {rawData && rawData.categories.map(category => <MenuItem key={`cat-filter-${category.title}`} value={category.title}>{category.title}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"input-select\">\r\n                            <FormControl className=\"input-field\" fullWidth>\r\n                                <InputLabel id=\"label\">Label</InputLabel>\r\n                                <Select fullWidth labelId=\"label\" id=\"label\" placeholder='Select Labels' multiple={true} value={filterBy.labels} label=\"Label\" name=\"labels\" onChange={handleChange}>\r\n                                    {/* <MenuItem key={`lab-filter-none-option`} value={\"\"}>None</MenuItem> */}\r\n                                    {rawData && rawData.labels.map(label => <MenuItem key={`lab-filter-${label._id}`} value={label.labelName}>{label.title}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </Box>\r\n                <Stack className=\"form-buttons\" spacing={2} direction=\"row\">\r\n                    <Button variant=\"contained\" onClick={() => { setFilterBy(emptyFilterBy) }}>Clear</Button>\r\n                    <Button variant=\"contained\" onClick={() => { handleApply() }}>Apply</Button>\r\n                </Stack>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Stack, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React, { useState } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { GetIcon } from '../GetIcon'\r\nimport { BsApp } from 'react-icons/bs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addCategory } from '../../store/actions/user.action'\r\nimport { IAction, ICategory, IFilterBy } from '../../interfaces/dataInterfaces'\r\nimport { utilService } from '../../services/util.service'\r\nimport { setLoader } from '../../store/actions/app-state.action'\r\nimport { ReactDimmer } from 'react-dimmer'\r\nimport { RootState } from '../../store/store'\r\n\r\ninterface IModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setFormData?: React.Dispatch<React.SetStateAction<IAction>>;\r\n    categoryToEdit?: ICategory | null;\r\n}\r\n\r\nconst colors = utilService.getColors()\r\nconst icons = utilService.getIcons()\r\n\r\nconst btnErrorStyle = {\r\n    border: '2px #E34C4C solid'\r\n}\r\n\r\nexport const CategoryModal = ({ closeModal, setFormData, categoryToEdit }: IModalProps) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const filterBy: IFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const [categoryName, setCategoryName] = useState(categoryToEdit?.title || '')\r\n    const [selectedIcon, setSelectedIcon] = useState(categoryToEdit?.icon || '')\r\n    const [selectedColor, setSelectedColor] = useState(categoryToEdit?.bgColor || 'gray')\r\n\r\n    const [isColorsModalOpen, setColorsModal] = useState(false)\r\n    const [isIconsModalOpen, setIconsModal] = useState(false)\r\n\r\n    const [errors, setErrors] = useState({\r\n        categoryName: false,\r\n        selectedIcon: false\r\n    })\r\n\r\n    const categoryNameChange = (ev: React.ChangeEvent<HTMLFormElement>) => {\r\n        setCategoryName(ev.target.value)\r\n    }\r\n\r\n    const selectColorHandle = (color: string) => {\r\n        setSelectedColor(color)\r\n        setColorsModal(false)\r\n    }\r\n\r\n    const selectIconHandle = (icon: string) => {\r\n        setSelectedIcon(icon)\r\n        setIconsModal(false)\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        const errorsCopy = { ...errors }\r\n\r\n        errorsCopy.categoryName = categoryName ? false : true\r\n        errorsCopy.selectedIcon = selectedIcon ? false : true\r\n\r\n\r\n        if (errorsCopy.categoryName || errorsCopy.selectedIcon) {\r\n            setErrors(errorsCopy)\r\n            return\r\n        } else {\r\n            const categoryFormatedName = categoryName[0].toUpperCase() + categoryName.substr(1)\r\n\r\n            const newCategory = {\r\n                _id: categoryToEdit?._id || '',\r\n                title: categoryFormatedName,\r\n                icon: selectedIcon,\r\n                bgColor: selectedColor\r\n            }\r\n            dispatch(setLoader(true))\r\n            await dispatch(addCategory(newCategory, filterBy))\r\n            dispatch(setLoader(false))\r\n            if(!categoryToEdit && setFormData){\r\n                setFormData(formData => { return { ...formData, category: categoryFormatedName } })\r\n            }\r\n            closeModal(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"category-add-modal modal\">\r\n                <div className=\"modal-header\">\r\n                    <h3>{categoryToEdit ? 'Edit category' : 'Add new category'}</h3>\r\n                    <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false) }} />\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Box className=\"modal-form\" component=\"form\" noValidate autoComplete=\"off\" onChange={categoryNameChange}>\r\n                        <TextField autoComplete=\"off\" className=\"txt-input\" error={errors.categoryName} value={categoryName} name=\"category\" label=\"category name\" variant=\"outlined\" />\r\n                    </Box>\r\n                    <Button variant=\"contained\" style={errors.selectedIcon ? btnErrorStyle : {}} onClick={() => { setIconsModal(true) }}>Pick icon</Button>\r\n                    <Button variant=\"contained\" onClick={() => { setColorsModal(true) }}>Pick color</Button>\r\n                    <div className=\"icon-preview\" style={{ backgroundColor: selectedColor }}>\r\n                        {!selectedIcon && <BsApp />}\r\n                        {selectedIcon && <GetIcon iconName={selectedIcon} />}\r\n                    </div>\r\n                    <Stack className=\"form-buttons\" spacing={2} direction=\"row\">\r\n                        <Button variant=\"contained\" onClick={onSubmit}>{categoryToEdit ? 'submit' : 'Add'}</Button>\r\n                    </Stack>\r\n                </div>\r\n            </div>\r\n            <ReactDimmer isOpen={isColorsModalOpen} exitDimmer={setColorsModal} zIndex={120} blur={1.5} saturate={85} />\r\n            <ReactDimmer isOpen={isIconsModalOpen} exitDimmer={setIconsModal} zIndex={120} blur={1.5} saturate={85} />\r\n\r\n            {isColorsModalOpen && <div className=\"colors-pick-modal pick-modal\">\r\n                {colors.map(color => <div key={color} onClick={() => { selectColorHandle(color) }} className=\"color\" style={{ backgroundColor: color }}></div>)}\r\n            </div>}\r\n\r\n            {isIconsModalOpen && <div className=\"icon-pick-modal pick-modal\">\r\n                {icons.map(icon => <div key={`cat-pick-${icon}`} onClick={() => { selectIconHandle(icon) }}><GetIcon iconName={icon} /></div>)}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { Button, Stack, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React, { useState } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IAction, IFilterBy, ILabel } from '../../interfaces/dataInterfaces'\r\nimport { setLoader } from '../../store/actions/app-state.action'\r\nimport { addLabel } from '../../store/actions/user.action'\r\nimport { RootState } from '../../store/store'\r\n\r\ninterface IModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setFormData?: React.Dispatch<React.SetStateAction<IAction>>;\r\n    labelToEdit?: ILabel | null;\r\n}\r\n\r\nexport const LabelModal = ({ closeModal, setFormData, labelToEdit }: IModalProps) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const filterBy: IFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n    const [label, setLabel] = useState(labelToEdit?.title || '')\r\n    const [error, setError] = useState(false)\r\n\r\n    const handleLabelChange = (ev: React.ChangeEvent<HTMLFormElement>) => {\r\n        setLabel(ev.target.value)\r\n    }\r\n\r\n    const onSubmitLabel = async () => {\r\n        if (!label) {\r\n            setError(true)\r\n            return\r\n        } else {\r\n            const formatedLabel = '#' + label.toLowerCase().split('').filter(char => char !== ' ').join('')\r\n\r\n            const newLabel = {\r\n                _id: labelToEdit?._id || '',\r\n                title: label,\r\n                labelName: formatedLabel\r\n            }\r\n            dispatch(setLoader(true))\r\n            const res = await dispatch(addLabel(newLabel, filterBy))\r\n            dispatch(setLoader(false))\r\n            if(!labelToEdit && setFormData && res){\r\n                setFormData(formData => { return { ...formData, labels: [...formData.labels, formatedLabel] } })\r\n            }\r\n            closeModal(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-add-modal modal\">\r\n            <div className=\"modal-header\">\r\n                <h3>{labelToEdit ? 'Edit label' : 'Add new label'}</h3>\r\n                <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false) }} />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <Box className=\"modal-form\" component=\"form\" noValidate autoComplete=\"off\" onChange={handleLabelChange}>\r\n                    <TextField autoComplete=\"off\" className=\"txt-input\" error={error} value={label} name=\"label\" label=\"label name\" variant=\"outlined\" />\r\n                </Box>\r\n                <Stack className=\"form-buttons\" spacing={2} direction=\"row\">\r\n                    <Button variant=\"contained\" onClick={onSubmitLabel}>{labelToEdit ? 'Submit' : 'Add'}</Button>\r\n                </Stack>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Theme, useTheme } from '@mui/material/styles';\r\nimport { Button, Chip, FormControl, InputLabel, MenuItem, OutlinedInput, Select, Stack, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React, { useState } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IAction, IDataObject, IFilterBy } from '../../interfaces/dataInterfaces'\r\nimport { RootState } from '../../store/store'\r\nimport { addAction } from '../../store/actions/user.action';\r\nimport { CategoryModal } from './CategoryModal';\r\nimport { LabelModal } from './LabelModal';\r\nimport { MobileDateTimePicker, LocalizationProvider } from '@mui/lab';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport { setLoader } from '../../store/actions/app-state.action';\r\nimport { ReactDimmer } from 'react-dimmer';\r\n\r\ninterface IActionModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\ninterface IErrors {\r\n    description: boolean,\r\n    category: boolean,\r\n    amount: boolean\r\n}\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction getStyles(title: string, labels: readonly string[], theme: Theme) {\r\n    return {\r\n        fontWeight:\r\n            labels.indexOf(title) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nexport const ActionModal = ({ closeModal }: IActionModalProps) => {\r\n\r\n    const selectedAction: IAction | null = useSelector((state: RootState) => state.appStateModule.selectedAction)\r\n    const data: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const filterBy: IFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n    const dispatch = useDispatch()\r\n    const theme = useTheme();\r\n\r\n    const [formData, setFormData] = useState<IAction>(selectedAction || {\r\n        _id: '',\r\n        type: 'expense',\r\n        labels: [],\r\n        category: '',\r\n        description: '',\r\n        amount: 0,\r\n        createdAt: Date.now()\r\n    })\r\n\r\n    const [errors, setErrors] = useState({\r\n        description: false,\r\n        category: false,\r\n        amount: false\r\n    })\r\n\r\n    const [addCategoryModal, setAddCategoryModal] = useState(false)\r\n    const [addLabelModal, setAddLabelModal] = useState(false)\r\n\r\n    const handleChange = (ev: any) => {\r\n        setFormData({ ...formData, [ev.target.name]: ev.target.value })\r\n    }\r\n\r\n    const handleLabelsChange = (ev: any) => {\r\n        const labels = ev.target.value\r\n        const formDataCopy = { ...formData, labels: typeof labels === 'string' ? labels.split(',') : labels }\r\n        setFormData(formDataCopy)\r\n    }\r\n\r\n    const handleDateChange = (date: number | null) => {\r\n        if (date) {\r\n            const currentTimeStamp = new Date(date).getTime();\r\n            setFormData({...formData, createdAt: currentTimeStamp})\r\n            // if (timeStamp > Date.now()) {\r\n            //     alert(\"Date cannot be greater than the current date\")\r\n            //     return\r\n            // } else{\r\n            //     setFormData({...formData, createdAt: timeStamp})\r\n            // }\r\n        }\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        let isValid = true\r\n\r\n        const errorsCopy = { ...errors }\r\n        for (const key in errors) {\r\n            if (!formData[key as keyof IAction]) {\r\n                isValid = false\r\n                errorsCopy[key as keyof IErrors] = true\r\n            } else if (key === 'amount' && formData.amount <= 0) {\r\n                isValid = false\r\n                errorsCopy.amount = true\r\n            } else {\r\n                errorsCopy[key as keyof IErrors] = false\r\n            }\r\n        }\r\n\r\n        if (!isValid) {\r\n            setErrors(errorsCopy)\r\n            return\r\n        } else {\r\n            dispatch(setLoader(true))\r\n            await dispatch(addAction(formData, filterBy))\r\n            dispatch(setLoader(false))\r\n            closeModal(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"modal action-add-edit-modal\">\r\n                <div className=\"modal-header\">\r\n                    <h3>{selectedAction ? 'Edit action' : 'Add new action'}</h3>\r\n                    <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false) }} />\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <TextField autoComplete=\"off\" className=\"txt-input\" error={errors.description} value={formData.description} name=\"description\" onChange={handleChange} label=\"Description\" variant=\"outlined\" />\r\n                    <Box className=\"modal-form\" component=\"form\" noValidate autoComplete=\"off\" onChange={handleChange}>\r\n                        <div className=\"input-selectors\">\r\n                            <div className=\"input-select\">\r\n                                <FormControl className=\"input-field\" fullWidth>\r\n                                    <InputLabel id=\"type\">Type</InputLabel>\r\n                                    <Select fullWidth labelId=\"type\" id=\"type\" value={formData.type} label=\"Type\" name=\"type\" onChange={handleChange}>\r\n                                        <MenuItem key=\"type-expense\" value={'expense'}>Expense</MenuItem>\r\n                                        <MenuItem key=\"type-income\" value={'income'}>Income</MenuItem>\r\n                                        <MenuItem key=\"type-investment\" value={'investment'}>Investment</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"input-select\">\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                    <Stack spacing={3}>\r\n                                        <MobileDateTimePicker label=\"Date & Time\" ampm={false} inputFormat=\"dd/MM/yyyy HH:mm\" value={formData.createdAt} onAccept={(date) => {handleDateChange(date)}} onChange={(date) => { }} renderInput={(params) => <TextField autoComplete=\"off\" className=\"input-field\" {...params} />} />\r\n                                    </Stack>\r\n                                </LocalizationProvider>\r\n\r\n                            </div>\r\n                            <div className=\"inner-group\">\r\n                                <div className=\"input-select\">\r\n                                    <FormControl className=\"input-field\" fullWidth>\r\n                                        <InputLabel id=\"category\">Category</InputLabel>\r\n                                        <Select fullWidth labelId=\"category\" id=\"category\" error={errors.category} value={formData.category} label=\"Category\" name=\"category\" onChange={handleChange}>\r\n                                            {data && data.categories.map(category => <MenuItem key={category._id} value={category.title}>{category.title}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <Button variant=\"contained\" onClick={() => { setAddCategoryModal(true) }}>Add</Button>\r\n                                </div>\r\n                                <div className=\"input-select\">\r\n                                    <FormControl className=\"input-field\" fullWidth>\r\n                                        <InputLabel id=\"label\">Labels</InputLabel>\r\n                                        <Select id=\"multiple-labels\" multiple value={formData.labels} onChange={handleLabelsChange}\r\n                                            input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\r\n                                            renderValue={(selected) => (\r\n                                                <Box sx={{ display: 'flex', overflowX: 'auto', gap: 0.5 }}>\r\n                                                    {selected.map((value) => (\r\n                                                        <Chip key={value} label={value} />\r\n                                                    ))}\r\n                                                </Box>\r\n                                            )}\r\n                                            MenuProps={MenuProps}\r\n                                        >\r\n                                            {data.labels.map((label) => (\r\n                                                <MenuItem\r\n                                                    key={'options-' + label._id}\r\n                                                    value={label.labelName}\r\n                                                    style={getStyles(label.title, formData.labels, theme)}\r\n                                                >\r\n                                                    {label.title}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <Button variant=\"contained\" onClick={() => { setAddLabelModal(true) }}>Add</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <TextField autoComplete=\"off\" className=\"txt-input amount-input\" type=\"number\" error={errors.amount} value={formData.amount} name=\"amount\" label=\"Amount\" variant=\"outlined\" />\r\n                    </Box>\r\n                    <Stack className=\"form-buttons\" spacing={2} direction=\"row\">\r\n                        <Button variant=\"contained\" onClick={onSubmit}>{selectedAction ? 'Submit' : 'Add new action'}</Button>\r\n                    </Stack>\r\n                </div>\r\n            </div>\r\n\r\n            <ReactDimmer isOpen={addCategoryModal} exitDimmer={setAddCategoryModal} zIndex={105} blur={1.5} saturate={85} />\r\n            <ReactDimmer isOpen={addLabelModal} exitDimmer={setAddLabelModal} zIndex={105} blur={1.5} saturate={85} />\r\n            {addCategoryModal && <CategoryModal closeModal={setAddCategoryModal} setFormData={setFormData} />}\r\n            {addLabelModal && <LabelModal closeModal={setAddLabelModal} setFormData={setFormData} />}\r\n        </>\r\n    )\r\n}\r\n","import { Button } from '@mui/material'\r\nimport React, { ReactElement } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\n\r\ninterface IModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n    title: string;\r\n    message: ReactElement<HTMLDivElement>;\r\n    setAnswer: (answer: boolean) => void;\r\n}\r\n\r\nexport const ConfirmModal = ({ closeModal, title, message, setAnswer }: IModalProps) => {\r\n\r\n    return (\r\n        <div className=\"confirm-modal modal\">\r\n            <div className=\"modal-header\">\r\n                <h3>{title}</h3>\r\n                <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false); setAnswer(false)}} />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                {message}\r\n                <div className=\"buttons\">\r\n                    <Button onClick={() => {closeModal(false); setAnswer(true)}}>confirm</Button>\r\n                    <Button onClick={() => {closeModal(false); setAnswer(false)}}>cancel</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, FormControl, FormHelperText, MenuItem, Select, SelectChangeEvent, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { ReactDimmer } from 'react-dimmer'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { FaRegEdit } from 'react-icons/fa'\r\nimport { FiUpload } from 'react-icons/fi'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { ICategory, IDataObject, IDataUpdateForm, IFilterBy, ILabel } from '../../interfaces/dataInterfaces'\r\nimport { IUpdateForm } from '../../interfaces/userInterfaces'\r\nimport { alertMessage, alertTitleMessage } from '../../services/alert.service'\r\nimport { sessionStorageService } from '../../services/session-storage.service'\r\nimport { userService } from '../../services/user.service'\r\nimport { utilService } from '../../services/util.service'\r\nimport { setLoader } from '../../store/actions/app-state.action'\r\nimport { deleteCategory, deleteLabel, deleteUser, updateData, updateUser } from '../../store/actions/user.action'\r\nimport { RootState } from '../../store/store'\r\nimport { GetIcon } from '../GetIcon'\r\nimport { Loader } from '../Loader'\r\nimport { CategoryModal } from './CategoryModal'\r\nimport { ConfirmModal } from './ConfirmModal'\r\nimport { LabelModal } from './LabelModal'\r\n\r\ninterface IModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst tabs = ['Account', 'Preferences', 'Categories', 'Labels']\r\n\r\nexport const SettingsModal = ({ closeModal }: IModalProps) => {\r\n\r\n    const [currentTab, setCurrentTab] = useState('Account')\r\n\r\n    return (\r\n        <div className=\"settings-modal modal\">\r\n            <div className=\"modal-header\">\r\n                <h3>Settings</h3>\r\n                <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false) }} />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <div className=\"tabs\">\r\n                    {tabs.map(tab => <h2 key={tab} onClick={() => { setCurrentTab(tab) }} style={currentTab === tab ? { color: 'black', fontWeight: '600', borderBottom: '3px black solid' } : {}}>{tab}</h2>)}\r\n                </div>\r\n                <div className=\"settings-body\">\r\n                    {currentTab === 'Account' && <AccountSettings closeModal={closeModal} />}\r\n                    {currentTab === 'Preferences' && <PreferencesSettings closeModal={closeModal} />}\r\n                    {currentTab === 'Categories' && <CategoriesSettings />}\r\n                    {currentTab === 'Labels' && <LabelsSettings />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AccountSettings = ({ closeModal }: IModalProps) => {\r\n\r\n    interface IForm {\r\n        firstName: string,\r\n        lastName: string,\r\n        password1: string,\r\n        password2: string,\r\n        picture: string | null\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const user = useSelector((state: RootState) => state.userModule.loggedInUser) || sessionStorageService.load('loggedInUser')\r\n\r\n    const [formData, setFormData] = useState<IForm>({\r\n        firstName: user?.firstName || '',\r\n        lastName: user?.lastName || '',\r\n        password1: '',\r\n        password2: '',\r\n        picture: null\r\n    })\r\n\r\n    const [confirmModal, setConfirmModal] = useState(false)\r\n\r\n    const [errors, setErrors] = useState({\r\n        password: false\r\n    })\r\n\r\n    const pictureRef = useRef(null)\r\n\r\n    const handleChange = (ev: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setFormData({ ...formData, [ev.target.name]: ev.target.value })\r\n    }\r\n\r\n    const handleUploadClick = () => {\r\n        if (user.userName === 'DemoUser') {\r\n            alertTitleMessage('Opps...', 'Changes cannot be made on demo user', 'warning', 3500)\r\n            return\r\n        }\r\n        if (pictureRef.current) {\r\n            const element: HTMLInputElement = pictureRef.current\r\n            element.click()\r\n        }\r\n    }\r\n\r\n    const handlePictureUpload = async (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (ev.target.files && ev.target.files.length > 0) {\r\n            dispatch(setLoader(true))\r\n            alertMessage('Uploading image to cloud...', 'info', 3500)\r\n            const url = await userService.uploadImg(ev.target.files[0])\r\n            if (url) {\r\n                setFormData({ ...formData, picture: url })\r\n                alertMessage('Image uploaded to cloud...', 'success', 3500)\r\n            } else {\r\n                alertMessage('Something went wrong, try again later...', 'warning', 3500)\r\n            }\r\n            dispatch(setLoader(false))\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const formToSubmit: IUpdateForm = {}\r\n\r\n        if (formData.password1 || formData.password2) {\r\n            if (formData.password1 !== formData.password2) {\r\n                setErrors({ ...errors, password: true })\r\n                return\r\n            } else {\r\n                formToSubmit.password = formData.password1\r\n            }\r\n        }\r\n\r\n        if (formData.firstName && formData.firstName !== user.firstName) {\r\n            formToSubmit.firstName = formData.firstName\r\n        }\r\n\r\n        if (formData.lastName && formData.lastName !== user.lastName) {\r\n            formToSubmit.lastName = formData.lastName\r\n        }\r\n\r\n        if (formData.picture) {\r\n            formToSubmit.picture = formData.picture\r\n        }\r\n\r\n        dispatch(setLoader(true))\r\n        await dispatch(updateUser(formToSubmit))\r\n        dispatch(setLoader(false))\r\n        closeModal(false)\r\n    }\r\n\r\n    const handleConfirmModal = async () => {\r\n        setConfirmModal(true)\r\n    }\r\n\r\n    const modalMessage = (\r\n        <div>\r\n            <h3>This is irreversible.</h3>\r\n            <h3>Deleting your account will delete all of it's data forever.</h3>\r\n        </div>\r\n    )\r\n\r\n    const handleModalAnswer = async (answer: boolean) => {\r\n        if (answer) {\r\n            dispatch(setLoader(true))\r\n            const res = await dispatch(deleteUser())\r\n            dispatch(setLoader(false))\r\n            if (!res) {\r\n                console.log('could not delete user')\r\n            } else {\r\n                navigate('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!user) return <Loader />\r\n\r\n    return (\r\n        <>\r\n            <div className=\"account-settings\">\r\n                <div className=\"inputs\">\r\n                    <TextField autoComplete=\"off\" value={formData.firstName} name=\"firstName\" onChange={handleChange} label=\"first name\" variant=\"outlined\" />\r\n                    <TextField autoComplete=\"off\" value={formData.lastName} name=\"lastName\" onChange={handleChange} label=\"last name\" variant=\"outlined\" />\r\n                    {!user.isGoogle &&\r\n                        <>\r\n                            <TextField autoComplete=\"off\" value={formData.password1} name=\"password1\" onChange={handleChange} label=\"new password\" type=\"password\" error={errors.password} variant=\"outlined\" />\r\n                            <TextField autoComplete=\"off\" value={formData.password2} name=\"password2\" onChange={handleChange} label=\"verify password\" type=\"password\" error={errors.password} variant=\"outlined\" />\r\n                        </>\r\n                    }\r\n                    <Button onClick={handleUploadClick}>upload new picture<FiUpload /></Button>\r\n                    <input ref={pictureRef} type=\"file\" onChange={handlePictureUpload} style={{ display: 'none' }} />\r\n                    <p>*change only what's needed</p>\r\n                </div>\r\n                <Button onClick={handleSubmit}>submit</Button>\r\n                <Button className=\"delete-account-btn\" onClick={handleConfirmModal}>delete account</Button>\r\n            </div>\r\n            <ReactDimmer isOpen={confirmModal} exitDimmer={setConfirmModal} zIndex={120} blur={1.5} saturate={85} />\r\n            {confirmModal && <ConfirmModal title=\"Warning\" message={modalMessage} setAnswer={handleModalAnswer} closeModal={setConfirmModal} />}\r\n        </>\r\n    )\r\n}\r\n\r\nconst PreferencesSettings = ({ closeModal }: IModalProps) => {\r\n\r\n    interface ICurrencyObj {\r\n        id: string,\r\n        currencySymbol?: string,\r\n        currencyName: string\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const filterBy: IFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const [formData, setFormData] = useState<IDataUpdateForm>({\r\n        currency: rawData.currency\r\n    })\r\n    const [currencies, setCurrencies] = useState<ICurrencyObj[] | null>(null)\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const data = await utilService.getCurrencies()\r\n            const currencies = Object.entries(data).filter((currency: any) => { return currency[1].currencySymbol ? true : false }).map((currency: any) => currency[1])\r\n            setCurrencies(currencies)\r\n        })()\r\n    }, [])\r\n\r\n    const handleChange = (ev: SelectChangeEvent<string>) => {\r\n        if (ev.target.name === 'currency') {\r\n            const currency = {\r\n                code: ev.target.value,\r\n                sign: utilService.getSymbolFromCode(ev.target.value)\r\n            }\r\n            setFormData({ ...formData, [ev.target.name]: currency })\r\n        } else {\r\n            // If other fields come in the future...\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        dispatch(setLoader(true))\r\n        await dispatch(updateData(formData, filterBy))\r\n        dispatch(setLoader(false))\r\n        closeModal(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"preferences-settings\">\r\n            <div className=\"inputs\">\r\n                {formData.currency &&\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <FormHelperText>Currency sign</FormHelperText>\r\n                            <Select value={formData.currency.code} name=\"currency\" onChange={handleChange}>\r\n                                {currencies && currencies.map((currency: ICurrencyObj) => <MenuItem key={currency.id} value={currency.id}>{currency.currencyName} {currency.currencySymbol}</MenuItem>)}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                }\r\n            </div>\r\n            <Button onClick={handleSubmit}>submit</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CategoriesSettings = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const filterBy: IFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const [addCategoryModal, setAddCategoryModal] = useState(false)\r\n    const [selectedCategory, setSelectedCategory] = useState<ICategory | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (!addCategoryModal) {\r\n            setSelectedCategory(null)\r\n        }\r\n    }, [addCategoryModal])\r\n\r\n    const handleDelete = async (categoryId: string) => {\r\n        dispatch(setLoader(true))\r\n        const res = await dispatch(deleteCategory(categoryId, filterBy))\r\n        dispatch(setLoader(false))\r\n        if (!res) {\r\n            alertMessage(\"Cannot delete a category while it's in use\", 'danger', 3500)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"categories-settings\">\r\n                <div className=\"select-modal\">\r\n                    {rawData.categories.length === 0 && <h2 className=\"empty-msg\">No categories to show</h2>}\r\n                    {rawData && rawData.categories.map((category: ICategory) => {\r\n                        return (\r\n                            <div key={category._id} className=\"category-preview\">\r\n                                <div className=\"left-side\">\r\n                                    <div className=\"icon\" style={{ backgroundColor: category.bgColor }}>\r\n                                        <GetIcon iconName={category.icon} />\r\n                                    </div>\r\n                                    <p>{category.title}</p>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <div onClick={() => { setSelectedCategory(category); setAddCategoryModal(true) }}><FaRegEdit /></div>\r\n                                    <div className=\"delete-btn\" onClick={() => { handleDelete(category._id) }}><VscTrash /></div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <Button onClick={() => { setAddCategoryModal(true) }}>add new</Button>\r\n            </div>\r\n\r\n            {addCategoryModal &&\r\n                <>\r\n                    {addCategoryModal && <CategoryModal closeModal={setAddCategoryModal} categoryToEdit={selectedCategory} />}\r\n                </>\r\n            }\r\n            <ReactDimmer isOpen={addCategoryModal} exitDimmer={setAddCategoryModal} zIndex={100} blur={1.5} saturate={85} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst LabelsSettings = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const filterBy: IFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const [addLabelModal, setAddLabelModal] = useState(false)\r\n    const [selectedLabel, setSelectedLabel] = useState<ILabel | null>(null)\r\n\r\n    const [confirmModal, setConfirmModal] = useState(false)\r\n\r\n    const handleModalAnswer = async (answer: boolean) => {\r\n        if (answer && selectedLabel) {\r\n            dispatch(setLoader(true))\r\n            await dispatch(deleteLabel(selectedLabel._id, filterBy))\r\n            dispatch(setLoader(false))\r\n        }\r\n        setSelectedLabel(null)\r\n    }\r\n\r\n    const handleConfirmModal = async (label: ILabel) => {\r\n        setSelectedLabel(label)\r\n        setConfirmModal(true)\r\n    }\r\n\r\n    const modalMessage = (\r\n        <div>\r\n            <h3>This is irreversible.</h3>\r\n            <h3>Deleting a label will remove it from all of it's occurrences forever.</h3>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div className=\"labels-settings\">\r\n                <div className=\"select-modal\">\r\n                    {rawData.labels.length === 0 && <h2 className=\"empty-msg\">No labels to show</h2>}\r\n                    {rawData && rawData.labels.map((label: ILabel) => {\r\n                        return (\r\n                            <div key={label._id} className=\"label-preview\">\r\n                                <div className=\"left-side\">\r\n                                    <h2 className=\"label\">{label.labelName}</h2>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <div onClick={() => { setSelectedLabel(label); setAddLabelModal(true) }}><FaRegEdit /></div>\r\n                                    <div className=\"delete-btn\" onClick={() => { handleConfirmModal(label) }}><VscTrash /></div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <Button onClick={() => { setAddLabelModal(true) }}>add new</Button>\r\n            </div>\r\n            {addLabelModal &&\r\n                <>\r\n                    {addLabelModal && <LabelModal closeModal={setAddLabelModal} labelToEdit={selectedLabel} />}\r\n                </>\r\n            }\r\n            <ReactDimmer isOpen={addLabelModal} exitDimmer={setAddLabelModal} zIndex={100} blur={1.5} saturate={85} />\r\n            <ReactDimmer isOpen={confirmModal} exitDimmer={setConfirmModal} zIndex={120} blur={1.5} saturate={85} />\r\n            {confirmModal && <ConfirmModal title=\"Warning\" message={modalMessage} setAnswer={handleModalAnswer} closeModal={setConfirmModal} />}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { GoPrimitiveDot as MobileIdx } from 'react-icons/go'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../store/store'\r\n\r\nexport const PaginationDots = () => {\r\n\r\n    const blocksIdx = useSelector((state: RootState) => state.appStateModule.blocksIdx)\r\n    const isPaginationDots = useSelector((state: RootState) => state.appStateModule.isPaginationDots)\r\n\r\n    return (\r\n        <div className=\"pagination-dots\" style={{opacity: isPaginationDots ? '1' : '0'}}>\r\n            <MobileIdx className={`${blocksIdx ? 'fade-dot' : ''}`} />\r\n            <MobileIdx className={`${!blocksIdx ? 'fade-dot' : ''}`} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { MainAppMenu } from '../components/MainAppMenu'\r\nimport { MobileMenu } from '../components/MobileMenu'\r\nimport { HeaderBlock } from '../components/blocks/HeaderBlock'\r\nimport { getData, getUser } from '../store/actions/user.action'\r\nimport { BalanceBlock } from '../components/blocks/BalanceBlock'\r\nimport { SummeryBlock } from '../components/blocks/SummeryBlock'\r\nimport { RootState } from '../store/store'\r\nimport { GraphBlock } from '../components/blocks/GraphBlock'\r\nimport { SearchModal } from '../components/modals/SearchModal'\r\nimport { ActionModal } from '../components/modals/ActionModal'\r\nimport { setBlocksIdx, setLoader, setPaginationDots, setSelectedAction } from '../store/actions/app-state.action'\r\nimport { sessionStorageService } from '../services/session-storage.service'\r\nimport { dateService } from '../services/date.service'\r\nimport { SettingsModal } from '../components/modals/SettingsModal'\r\nimport { useNavigate } from 'react-router'\r\nimport { utilService } from '../services/util.service'\r\nimport { PaginationDots } from '../components/PaginationDots'\r\nimport { ReactDimmer } from 'react-dimmer'\r\n\r\nexport const MainApp = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const currentViewMode = useSelector((state: RootState) => state.appStateModule.currentViewMode)\r\n    const user = useSelector((state: RootState) => state.userModule.loggedInUser) || sessionStorageService.load('loggedInUser')\r\n    const filterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n    \r\n\r\n    const [isMenuOpen, setMenuOpen] = useState(false)\r\n    const [isSearchModalOpen, setSearchModalOpen] = useState(false)\r\n    const [isSettingsModalOpen, setSettingsModalOpen] = useState(false)\r\n    const [isActionModalOpen, setActionModalOpen] = useState(false)\r\n\r\n    const blocksRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const _getData = async () => {\r\n            dispatch(setLoader(true))\r\n            await dispatch(getData(dateService.getDateFilterBy(filterBy)))\r\n            dispatch(setLoader(false))\r\n        }\r\n\r\n        const _getUser = async () => {\r\n            return await dispatch(getUser())\r\n        }\r\n\r\n        if(user){\r\n            _getData()\r\n        } else {\r\n            const fetchedUser = _getUser()\r\n            if(!fetchedUser){\r\n                navigate('/')\r\n            }\r\n        }\r\n    }, [dispatch, user, filterBy, navigate])\r\n\r\n    useEffect(() => {\r\n        if (!isActionModalOpen || isMenuOpen || isSettingsModalOpen) dispatch(setSelectedAction(null))\r\n    }, [dispatch, isActionModalOpen, isMenuOpen, isSettingsModalOpen])\r\n\r\n    useEffect(() => {\r\n        const updatePaginationDots = utilService.debounce((ev: any) => {\r\n            if(ev.target.scrollingElement.scrollTop > 0) {\r\n                dispatch(setPaginationDots(true))\r\n            } else {\r\n                dispatch(setPaginationDots(false))\r\n            }\r\n        }, 100)\r\n        \r\n        if(currentViewMode === 'Graph'){\r\n            if(window.scrollY > 0){\r\n                dispatch(setPaginationDots(true))\r\n            } else {\r\n                dispatch(setPaginationDots(false))\r\n            }\r\n            window.addEventListener('scroll', updatePaginationDots)\r\n        } else {\r\n            dispatch(setPaginationDots(true))\r\n            window.removeEventListener('scroll', updatePaginationDots)\r\n        }\r\n        \r\n        return () => {\r\n            window.removeEventListener('scroll', updatePaginationDots)\r\n        }\r\n    }, [dispatch, currentViewMode])\r\n\r\n\r\n    const _handleScroll = (ev: any) => {\r\n        if(ev.target.scrollLeft > 0) {\r\n            dispatch(setBlocksIdx(1))\r\n        } else {\r\n            dispatch(setBlocksIdx(0))\r\n        }\r\n    }\r\n\r\n    const handleBlocksScroll = utilService.debounce(_handleScroll, 100)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-app\">\r\n                <MainAppMenu isMenuOpen={isMenuOpen} setMenuOpen={setMenuOpen} setActionModalOpen={setActionModalOpen} setSettingsModalOpen={setSettingsModalOpen} />\r\n                <div className=\"app-content\">\r\n                    <div className=\"full-screen-content\">\r\n                        <MobileMenu setMenuOpen={setMenuOpen} setActionModalOpen={setActionModalOpen} />\r\n                        <HeaderBlock setSearchModalOpen={setSearchModalOpen} />\r\n                        <BalanceBlock />\r\n                        {currentViewMode === 'Graph' && <GraphBlock />}\r\n                        <div ref={blocksRef} onScroll={handleBlocksScroll} className=\"main-content-blocks\">\r\n                            <SummeryBlock type=\"expense\" setActionModalOpen={setActionModalOpen} />\r\n                            <SummeryBlock type=\"income\" setActionModalOpen={setActionModalOpen} />\r\n                            <SummeryBlock type=\"investment\" setActionModalOpen={setActionModalOpen} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <PaginationDots />\r\n\r\n            <ReactDimmer isOpen={isMenuOpen} exitDimmer={setMenuOpen} blur={1.5} saturate={85} />\r\n            <ReactDimmer isOpen={isSearchModalOpen} exitDimmer={setSearchModalOpen} blur={1.5} saturate={85} />\r\n            <ReactDimmer isOpen={isActionModalOpen} exitDimmer={setActionModalOpen} blur={1.5} saturate={85} />\r\n            <ReactDimmer isOpen={isSettingsModalOpen} exitDimmer={setSettingsModalOpen} blur={1.5} saturate={85} />\r\n\r\n            {isSearchModalOpen && <SearchModal closeModal={setSearchModalOpen} />}\r\n            {isActionModalOpen && <ActionModal closeModal={setActionModalOpen} />}\r\n            {isSettingsModalOpen && <SettingsModal closeModal={setSettingsModalOpen} />}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Route, Routes } from 'react-router'\r\nimport { HomePage } from './pages/HomePage';\r\nimport { MainApp } from './pages/MainApp';\r\nimport { Loader } from './components/Loader';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Loader />\r\n      <Routes>\r\n        <Route path='/mydata' element={<MainApp />} />\r\n        <Route path='/' element={<HomePage />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { IDataObject } from \"../../interfaces/dataInterfaces\"\r\nimport { IUser } from \"../../interfaces/userInterfaces\"\r\n\r\ninterface IState {\r\n    loggedInUser: IUser | null,\r\n    currentViewMode: string\r\n    currentLabel: string | null\r\n    data: IDataObject | null\r\n}\r\n\r\ninterface IReducerAction {\r\n    type: string,\r\n    [key: string]: any\r\n}\r\n\r\nconst initialState: IState = {\r\n    loggedInUser: null,\r\n    currentViewMode: 'Summery',\r\n    currentLabel: null,\r\n    data: null\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: IReducerAction) => {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return state = { ...state, loggedInUser: action.user }\r\n        case 'SET_DATA':\r\n            return state = { ...state, data: action.data }\r\n        default:\r\n            return state\r\n    }\r\n}","import { IAction, IFilterBy } from \"../../interfaces/dataInterfaces\"\r\nimport { dateService } from \"../../services/date.service\"\r\n\r\ninterface IState {\r\n    blocksIdx: number,\r\n    isPaginationDots: boolean,\r\n    loaderState: boolean;\r\n    currentViewMode: string;\r\n    currentLabels: string[];\r\n    selectedAction: IAction | null;\r\n    filterBy: IFilterBy;\r\n}\r\n\r\ninterface IReducerAction {\r\n    type: string;\r\n    [key: string]: any;\r\n}\r\n\r\nconst initialState: IState = {\r\n    blocksIdx: 0,\r\n    isPaginationDots: false,\r\n    loaderState: false,\r\n    currentViewMode: 'Summery',\r\n    currentLabels: [],\r\n    selectedAction: null,\r\n    filterBy: {\r\n        searchTxt: '',\r\n        startDate: dateService.getMonthStartTimeStamp(),\r\n        endDate: dateService.getDayMaxHour(Date.now()),\r\n        labels: [],\r\n        categories: []\r\n    }\r\n}\r\n\r\nexport const appStateReducer = (state = initialState, action: IReducerAction) => {\r\n    switch (action.type) {\r\n        case 'SET_BLOCKS_IDX':\r\n            return state = { ...state, blocksIdx: action.blocksIdx }\r\n        case 'SET_PAGINATION_DOTS':\r\n            return state = { ...state, isPaginationDots: action.isPaginationDots }\r\n        case 'SET_LOADER':\r\n            return state = { ...state, loaderState: action.loaderState }\r\n        case 'SET_VIEWMODE':\r\n            return state = { ...state, currentViewMode: action.viewMode }\r\n        case 'SET_LABELS':\r\n            return state = { ...state, currentLabels: action.labels }\r\n        case 'SET_SELECTED_ACTION':\r\n            return state = { ...state, selectedAction: action.action }\r\n        case 'SET_FILTERBY':\r\n            return state = { ...state, filterBy: action.filterBy }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { userReducer } from './reducers/user.reducer'\r\nimport { appStateReducer } from './reducers/app-state.reducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    userModule: userReducer,\r\n    appStateModule: appStateReducer\r\n})\r\n\r\n\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__();\r\n// Lets wire up thunk and also redux-dev-tools:\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// export const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n// Store types\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  type Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n  };\r\n  \r\n  export function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './store/store';\r\nimport './styles/style.scss'\r\n\r\nimport ReactNotification from 'react-notifications-component'\r\nimport \"animate.css\"\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ReactNotification />\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();"],"sourceRoot":""}