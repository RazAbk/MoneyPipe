{"version":3,"sources":["services/alert.service.ts","services/session-storage.service.ts","services/user.service.ts","store/actions/user.action.ts","store/actions/app-state.action.ts","assets/images/graphssvg.svg","pages/HomePage.tsx","services/local-storage.service.ts","services/util.service.ts","services/date.service.ts","components/MainAppMenu.tsx","components/MobileMenu.tsx","components/Screen.tsx","components/blocks/HeaderBlock.tsx","components/blocks/BalanceBlock.tsx","components/GetIcon.tsx","components/Loader.tsx","components/ActionPreview.tsx","components/blocks/SummeryBlock.tsx","components/blocks/GraphBlock.tsx","components/modals/SearchModal.tsx","components/modals/CategoryModal.tsx","components/modals/LabelModal.tsx","components/modals/ActionModal.tsx","components/modals/ConfirmModal.tsx","components/modals/SettingsModal.tsx","pages/MainApp.tsx","App.tsx","store/reducers/user.reducer.ts","store/reducers/app-state.reducer.ts","store/store.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["alertMessage","message","type","duration","store","addNotification","insert","container","animationIn","animationOut","dismiss","onScreen","alertTitleMessage","title","sessionStorageService","load","key","obj","sessionStorage","getItem","JSON","parse","save","setItem","stringify","remove","removeItem","axios","Axios","create","withCredentials","userService","signup","login","logout","deleteUser","updateUser","updateData","getData","getUser","addAction","deleteAction","addCategory","deleteCategory","addLabel","deleteLabel","uploadImg","BASE_URL","credentials","a","post","res","data","msg","console","error","delete","put","filterBy","get","startDate","endDate","action","actionId","category","categoryId","label","labelId","file","process","UPLOAD_URL","formData","FormData","append","fetch","method","body","then","json","url","catch","err","dispatch","user","updatedUser","updatedData","setLoader","loaderState","setCurrentLabel","setSelectedAction","setFilterBy","HomePage","useDispatch","navigate","useNavigate","loggedInUser","useSelector","state","userModule","useState","formState","setFormState","userName","firstName","lastName","password","isGoogle","setFormData","errors","setErrors","useEffect","_getUser","handleSignup","errorsCopy","passwordTest","userNameTest","test","isValid","className","src","graphSvg","alt","onClick","prevState","Box","onChange","ev","target","name","value","component","sx","m","width","autoComplete","TextField","helperText","Button","clientId","buttonText","onSuccess","responseGoogle","credendials","profileObj","email","givenName","familyName","googleId","picture","imageUrl","onFailure","cookiePolicy","localStorageService","localStorage","utilService","debounce","func","timeout","timer","args","clearTimeout","setTimeout","makeId","length","txt","possible","i","charAt","Math","floor","random","getFormatedDigits","num","getCurrencies","getSymbolFromCode","currencyCode","currencySymbol","getIcons","getColors","CURRENCY_API","currencies","results","log","dateService","getDayTimestampByHour","date","hour","now","Date","getMonth","getDate","getFullYear","getTime","getDaysTimeData","days","timePoints","timeStamps","push","getMonthsTimeData","firstDate","monthIdx","yearIdx","getShortYear","dateIdx","getNextMonth","getYearsTimeData","getMonthStartTimeStamp","getDayMaxHour","timeStamp","day","month","year","getRelativeDate","nowTimeStamp","dateTimeStamp","hours","getHours","minutes","getMinutes","getDateAsString","dateObj","calculatePeriodDays","rawResult","ceil","getDateFilterBy","thisYear","thisMonth","dateString","substr","MainAppMenu","isMenuOpen","setMenuOpen","setActionModalOpen","setSettingsModalOpen","currentViewMode","appStateModule","currentLabel","handleViewModeClick","viewMode","style","backgroundImage","labels","map","newFilterBy","handleLabelClick","labelName","_id","searchTxt","MobileMenu","Screen","isOpen","exitScreen","zIndex","backdropFilter","HeaderBlock","setSearchModalOpen","startDateString","endDateString","BalanceBlock","rawData","balance","setBalance","balanceColor","setBalanceColor","actions","reduce","includes","description","amount","color","toLocaleString","currency","sign","GetIcon","iconName","Loader","isLoader","opacity","pointerEvents","ActionPreview","selectedAction","onDelete","stopPropagation","categoryData","categories","find","currCat","findCategoryData","backgroundColor","bgColor","icon","createdAt","transform","options","maintainAspectRatio","plugins","legend","display","scale","ticks","precision","aspectRatio","SummeryBlock","dataMap","setDataMap","pieData","setPieData","actionsData","setActionsData","sum","actionsObj","filter","sort","b","forEach","dateStr","Object","keys","datasets","values","borderColor","borderWidth","entries","expense","Fragment","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","responsive","GraphBlock","graphData","setGraphData","daysPeriod","expensesDataset","incomesDataset","timePoint","timeData","idx","justifyContent","redraw","emptyFilterBy","SearchModal","closeModal","globalFilterBy","handleChange","handleDateChange","field","alert","variant","noValidate","LocalizationProvider","dateAdapter","AdapterDateFns","Stack","spacing","MobileDatePicker","inputFormat","onAccept","renderInput","params","FormControl","fullWidth","InputLabel","id","Select","MenuItem","direction","setGlobalFilterBy","colors","icons","btnErrorStyle","border","CategoryModal","categoryToEdit","categoryName","setCategoryName","selectedIcon","setSelectedIcon","selectedColor","setSelectedColor","isColorsModalOpen","setColorsModal","isIconsModalOpen","setIconsModal","onSubmit","categoryFormatedName","toUpperCase","newCategory","selectColorHandle","selectIconHandle","LabelModal","labelToEdit","setLabel","setError","onSubmitLabel","formatedLabel","toLowerCase","split","char","join","newLabel","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","ActionModal","useTheme","addCategoryModal","setAddCategoryModal","addLabelModal","setAddLabelModal","MobileDateTimePicker","ampm","multiple","formDataCopy","input","OutlinedInput","renderValue","selected","overflowX","gap","Chip","ConfirmModal","setAnswer","tabs","SettingsModal","currentTab","setCurrentTab","tab","borderBottom","AccountSettings","password1","password2","confirmModal","setConfirmModal","pictureRef","useRef","handlePictureUpload","files","handleSubmit","formToSubmit","handleConfirmModal","modalMessage","handleModalAnswer","answer","current","click","ref","PreferencesSettings","setCurrencies","minWidth","FormHelperText","code","currencyName","CategoriesSettings","selectedCategory","setSelectedCategory","handleDelete","LabelsSettings","selectedLabel","setSelectedLabel","MainApp","isSearchModalOpen","isSettingsModalOpen","isActionModalOpen","_getData","App","path","element","initialState","rootReducer","combineReducers","createStore","applyMiddleware","thunk","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f8f574ca.chunk.js","sourcesContent":["import { store } from 'react-notifications-component';\r\n\r\nexport interface IAlertMessage{\r\n    message: string;\r\n    type: \"success\" | \"danger\" | \"info\" | \"default\" | \"warning\" | undefined;\r\n    duration: number;\r\n    title: string;\r\n}\r\n\r\nexport function alertMessage(message: string, type: IAlertMessage[\"type\"], duration: number = 3500) {\r\n    return store.addNotification({\r\n        message,\r\n        type,\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__backInRight\"],\r\n        animationOut: [\"animate__animated\", \"animate__backOutRight\"],\r\n        dismiss: {\r\n            duration,\r\n            onScreen: true\r\n        }\r\n    });\r\n}\r\n\r\nexport function alertTitleMessage(title: string, message: string, type: IAlertMessage[\"type\"], duration: number = 3500) {\r\n    return store.addNotification({\r\n        title,\r\n        message,\r\n        type,\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__backInRight\"],\r\n        animationOut: [\"animate__animated\", \"animate__backOutRight\"],\r\n        dismiss: {\r\n            duration,\r\n            onScreen: true\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\nexport function removeMessage(messageId: string) {\r\n    store.removeNotification(messageId)\r\n}","export const sessionStorageService = {\r\n    load,\r\n    save,\r\n    remove\r\n}\r\n\r\nfunction load(key: string): any {\r\n    const obj: any = sessionStorage.getItem(key)\r\n    return JSON.parse(obj)\r\n}\r\n\r\nfunction save(key: string, obj: any) {\r\n    sessionStorage.setItem(key, JSON.stringify(obj))\r\n}\r\n\r\nfunction remove(key: string) {\r\n    sessionStorage.removeItem(key)\r\n}","import { IAction, ICategory, ILabel, IDateFilterBy, IDataUpdateForm } from \"../interfaces/dataInterfaces\"\r\nimport Axios from \"axios\"\r\nimport { sessionStorageService } from \"./session-storage.service\"\r\nimport { IUpdateForm } from \"../interfaces/userInterfaces\"\r\nimport { alertTitleMessage } from \"./alert.service\"\r\n\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const userService = {\r\n    signup,\r\n    login,\r\n    logout,\r\n    deleteUser,\r\n    updateUser,\r\n    updateData,\r\n    getData,\r\n    getUser,\r\n    addAction,\r\n    deleteAction,\r\n    addCategory,\r\n    deleteCategory,\r\n    addLabel,\r\n    deleteLabel,\r\n    uploadImg\r\n}\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '' : '//localhost:3030'\r\n\r\ninterface ICredentials {\r\n    userName: string,\r\n    password: string,\r\n    firstName?: string,\r\n    lastName?: string\r\n}\r\n\r\n// User Functions\r\n\r\nasync function signup(credentials: ICredentials) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/auth/signup`, credentials)\r\n        if (!res.data.msg) {\r\n            sessionStorageService.save('loggedInUser', res.data)\r\n        }\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function login(credentials: ICredentials) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/auth/login`, credentials)\r\n        if (!res.data.msg) {\r\n            sessionStorageService.save('loggedInUser', res.data)\r\n        }\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function logout() {\r\n    try {\r\n        await axios.post(`${BASE_URL}/api/auth/logout`)\r\n        sessionStorageService.remove('loggedInUser')\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n\r\nasync function deleteUser() {\r\n    try {\r\n        const res = await axios.delete(`${BASE_URL}/api/user`)\r\n        if(!res.data.msg){\r\n            sessionStorageService.remove('loggedInUser')\r\n        }\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function updateUser(data: IUpdateForm) {\r\n    try {\r\n        const res = await axios.put(`${BASE_URL}/api/user/user`, data)\r\n        if (!res.data.msg) {\r\n            sessionStorageService.save('loggedInUser', res.data)\r\n        }\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function updateData(data: IDataUpdateForm) {\r\n    try {\r\n        const res = await axios.put(`${BASE_URL}/api/user/data`, data)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n// CURD Functions\r\n\r\nasync function getData(filterBy: IDateFilterBy) {\r\n    try {\r\n        const res = await axios.get(`${BASE_URL}/api/user/data?startDate=${filterBy.startDate}&endDate=${filterBy.endDate}`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function getUser() {\r\n    try {\r\n        const res = await axios.get(`${BASE_URL}/api/user/user`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n\r\nasync function addAction(action: IAction) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/user/action`, action)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function deleteAction(actionId: string) {\r\n    try {\r\n        const res = await axios.delete(`${BASE_URL}/api/user/action/${actionId}`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function addCategory(category: ICategory) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/user/category`, category)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function deleteCategory(categoryId: string) {\r\n    try {\r\n        const res = await axios.delete(`${BASE_URL}/api/user/category/${categoryId}`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function addLabel(label: ILabel) {\r\n    try {\r\n        const res = await axios.post(`${BASE_URL}/api/user/label`, label)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function deleteLabel(labelId: string) {\r\n    try {\r\n        const res = await axios.delete(`${BASE_URL}/api/user/label/${labelId}`)\r\n        return res.data\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nasync function uploadImg(file: File) {\r\n    try {\r\n        const CLOUD_NAME = process.env.REACT_APP_CLOUD_NAME\r\n        const UPLOAD_PRESET: any = process.env.REACT_APP_UPLOAD_PRESET\r\n        const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n        formData.append('upload_preset', UPLOAD_PRESET);\r\n\r\n        return fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                return res.url\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n                alertTitleMessage('Opps, an error occurred', 'Could not upload image, try again later', 'danger', 3500)\r\n                return null\r\n            })\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}","import { IAction, ICategory, ILabel, IDateFilterBy, IDataUpdateForm } from \"../../interfaces/dataInterfaces\"\r\nimport { ICredentials, IUpdateForm } from \"../../interfaces/userInterfaces\"\r\nimport { alertTitleMessage } from \"../../services/alert.service\"\r\nimport { userService } from \"../../services/user.service\"\r\nimport { AppDispatch } from \"../store\"\r\n\r\nexport const signup = (credentials: ICredentials) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const user = await userService.signup(credentials)\r\n            dispatch({\r\n                type: \"SET_USER\",\r\n                user\r\n            })\r\n            return user\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (credentials: ICredentials) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({\r\n                type: \"SET_USER\",\r\n                user\r\n            })\r\n            return user\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            await userService.logout()\r\n            dispatch({\r\n                type: \"SET_USER\",\r\n                user: null\r\n            })\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUser = () => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.deleteUser()\r\n            if (data) {\r\n                if(!data.msg){\r\n                    dispatch({\r\n                        type: \"SET_USER\",\r\n                        user: null\r\n                    })\r\n                } else {\r\n                    alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n                }\r\n            } else {\r\n                alertTitleMessage('Opps, an error occurred', 'Could not delete your account, try again later', 'danger', 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getData = (filterBy: IDateFilterBy) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.getData(filterBy)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUser = () => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.getUser()\r\n            if (!data?.msg) {\r\n                dispatch({\r\n                    type: \"SET_USER\",\r\n                    user: data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUser = (updatedUser: IUpdateForm) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.updateUser(updatedUser)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_USER\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateData = (updatedData: IDataUpdateForm) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.updateData(updatedData)\r\n            if (!data.msg) {\r\n\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const addAction = (action: IAction) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.addAction(action)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteAction = (actionId: string) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.deleteAction(actionId)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const addCategory = (category: ICategory) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.addCategory(category)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCategory = (categoryId: string) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.deleteCategory(categoryId)\r\n            if (data) {\r\n                if (!data.msg) {\r\n                    dispatch({\r\n                        type: \"SET_DATA\",\r\n                        data\r\n                    })\r\n                } else {\r\n                    alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n                }\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const addLabel = (label: ILabel) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.addLabel(label)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n                return data\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n                return null\r\n            }\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteLabel = (labelId: string) => {\r\n    return async (dispatch: AppDispatch) => {\r\n        try {\r\n            const data = await userService.deleteLabel(labelId)\r\n            if (!data.msg) {\r\n                dispatch({\r\n                    type: \"SET_DATA\",\r\n                    data\r\n                })\r\n            } else {\r\n                alertTitleMessage(data.title, data.msg, data.type, 3500)\r\n            }\r\n            return data\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n}","import { IAction, IFilterBy } from \"../../interfaces/dataInterfaces\"\r\nimport { AppDispatch } from \"../store\"\r\n\r\nexport const setLoader = (loaderState: boolean) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_LOADER\",\r\n            loaderState\r\n        })\r\n    }\r\n}\r\n\r\nexport const setCurrentViewMode = (viewMode: string) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_VIEWMODE\",\r\n            viewMode\r\n        })\r\n    }\r\n}\r\n\r\nexport const setCurrentLabel = (label: string | null) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_LABEL\",\r\n            label\r\n        })\r\n    }\r\n}\r\n\r\nexport const setSelectedAction = (action: IAction | null) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_SELECTED_ACTION\",\r\n            action\r\n        })\r\n    }\r\n}\r\n\r\nexport const setFilterBy = (filterBy: IFilterBy) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({\r\n            type: \"SET_FILTERBY\",\r\n            filterBy\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/graphssvg.5a5ce136.svg\";","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { signup, login, getUser } from '../store/actions/user.action'\r\nimport { setLoader } from '../store/actions/app-state.action'\r\nimport { RootState } from '../store/store'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { alertMessage } from '../services/alert.service'\r\nimport graphSvg from '../assets/images/graphssvg.svg'\r\n\r\ninterface IErrors {\r\n    [key: string]: boolean\r\n}\r\n\r\nexport const HomePage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const loggedInUser = useSelector((state: RootState) => state.userModule.loggedInUser)\r\n\r\n    const [formState, setFormState] = useState('login')\r\n    const [formData, setFormData] = useState({\r\n        userName: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        password: '',\r\n        isGoogle: false\r\n    })\r\n\r\n    const [errors, setErrors] = useState<IErrors>({\r\n        userName: false,\r\n        firstName: false,\r\n        lastName: false,\r\n        password: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        const _getUser = async () => {\r\n            await dispatch(getUser())\r\n        }\r\n        _getUser()\r\n\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (loggedInUser) {\r\n            navigate('/mydata')\r\n        }\r\n    }, [loggedInUser, navigate])\r\n\r\n    const handleChange = (ev: React.ChangeEvent<HTMLFormElement>) => {\r\n        setFormData(prevState => { return { ...prevState, [ev.target.name]: ev.target.value } })\r\n    }\r\n\r\n    const handleSignup = async () => {\r\n        const errorsCopy = { ...errors }\r\n\r\n        const passwordTest = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/\r\n        const userNameTest = /^(?=[a-zA-Z0-9._]{4,25}$)(?!.*[_.]{2})[^_.].*[^_.]$/\r\n\r\n        errorsCopy.userName = !formData.userName ? true : false\r\n\r\n        if(!formData.userName || !userNameTest.test(formData.userName)){\r\n            errorsCopy.userName = true\r\n        } else {\r\n            errorsCopy.userName = false\r\n        }\r\n\r\n        if(!formData.password || !passwordTest.test(formData.password)){\r\n            errorsCopy.password = true\r\n        } else {\r\n            errorsCopy.password = false\r\n        }\r\n\r\n        errorsCopy.firstName = !formData.firstName ? true : false\r\n        errorsCopy.lastName = !formData.lastName ? true : false\r\n\r\n        let isValid = true\r\n\r\n        for (const key in errorsCopy) {\r\n            if (errorsCopy[key]) {\r\n                isValid = false\r\n                break\r\n            }\r\n        }\r\n\r\n        if (isValid) {\r\n            (async () => {\r\n                dispatch(setLoader(true))\r\n                const user: any = await dispatch(signup(formData))\r\n                dispatch(setLoader(false))\r\n                if (user) {\r\n                    navigate(`/mydata`)\r\n                } else {\r\n                    setErrors({ ...errors, userName: true, password: true })\r\n                }\r\n            })()\r\n\r\n        } else {\r\n            setErrors(errorsCopy)\r\n        }\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        const userName = formData.userName\r\n        const password = formData.password\r\n\r\n        const errorsCopy = { ...errors }\r\n\r\n        let isValid = true\r\n\r\n        if (!userName) {\r\n            isValid = false\r\n            errorsCopy.userName = true\r\n        }\r\n        if (!password) {\r\n            isValid = false\r\n            errorsCopy.password = true\r\n        }\r\n\r\n\r\n        if (isValid) {\r\n            (async () => {\r\n                dispatch(setLoader(true))\r\n                const user: any = await dispatch(login(formData))\r\n                dispatch(setLoader(false))\r\n                if (user) {\r\n                    navigate(`/mydata`)\r\n                } else {\r\n                    setErrors(prevState => { return { ...prevState, userName: true, password: true } })\r\n                }\r\n            })()\r\n        } else {\r\n            setErrors(errorsCopy)\r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = (responseGoogle: any) => {\r\n\r\n        const credendials = {\r\n            userName: responseGoogle.profileObj.email,\r\n            firstName: responseGoogle.profileObj.givenName,\r\n            lastName: responseGoogle.profileObj.familyName,\r\n            password: responseGoogle.profileObj.googleId,\r\n            picture: responseGoogle.profileObj.imageUrl,\r\n            isGoogle: true\r\n        };\r\n\r\n\r\n        (async () => {\r\n            dispatch(setLoader(true))\r\n            const user: any = await dispatch(login({ userName: credendials.userName, password: credendials.password, isGoogle: true }))\r\n            dispatch(setLoader(false))\r\n            if (user) {\r\n                navigate(`/mydata`)\r\n            } else {\r\n                dispatch(setLoader(true))\r\n                const user: any = await dispatch(signup(credendials))\r\n                dispatch(setLoader(false))\r\n                if (user) {\r\n                    navigate(`/mydata`)\r\n                } else {\r\n                    setErrors({ ...errors, userName: true, password: true })\r\n                }\r\n            }\r\n        })()\r\n\r\n    }\r\n\r\n    const handleGoogleFail = () => {\r\n        alertMessage('Something went wrong, try again later...', 'warning', 3500)\r\n    }\r\n\r\n    const switchFormState = () => {\r\n        if (formState === 'signup') setFormState('login')\r\n        else setFormState('signup')\r\n    }\r\n\r\n    const demoLogin = () => {\r\n        (async () => {\r\n            dispatch(setLoader(true))\r\n            const user: any = await dispatch(login({userName: 'DemoUser', password: '1234', isGoogle: false}))\r\n            dispatch(setLoader(false))\r\n            if (user) {\r\n                navigate(`/mydata`)\r\n            } else {\r\n                setErrors(prevState => { return { ...prevState, userName: true, password: true } })\r\n            }\r\n        })()\r\n    }\r\n\r\n\r\n    const googleClientId: string = process.env.REACT_APP_GOOGLE_CLIENT_ID || ''\r\n\r\n    return (\r\n        <>\r\n            <div className=\"homepage\">\r\n                <div className=\"left-side\">\r\n                    <h2 className=\"app-logo\">MoneyPipe</h2>\r\n                    <div className=\"prase\">\r\n                        <h3>Tracking your money</h3>\r\n                        <h3>has never been so simple</h3>\r\n                    </div>\r\n                    <img src={graphSvg} alt=\"graph\" />\r\n                </div>\r\n                <div className=\"right-side\">\r\n                    <h4 className=\"demo-user-btn\">Watch the <span onClick={demoLogin}><b>demo</b></span></h4>\r\n                    <h2 className=\"app-logo\">MoneyPipe</h2>\r\n                    <h4 className=\"form-state-header\">{formState === 'signup' ? 'Have an account? ' : `Don't have an account? `}<span onClick={switchFormState}><b>{formState === 'signup' ? 'Login' : 'Signup'}</b></span></h4>\r\n                    <h2>{formState === 'signup' ? 'Create account' : 'Login'}</h2>\r\n                    <Box onChange={handleChange} component=\"form\" sx={{ '& .MuiTextField-root': { m: 1, width: '25ch' }, }} autoComplete=\"off\">\r\n                        <TextField autoComplete=\"off\" label=\"username\" error={errors.userName} name=\"userName\" value={formData.userName} helperText={errors.userName ? 'invalid user name' : ''} />\r\n                        {formState === 'signup' && <div className=\"name-fields\">\r\n                            <TextField autoComplete=\"off\" label=\"first name\" error={errors.firstName} name=\"firstName\" value={formData.firstName} />\r\n                            <TextField autoComplete=\"off\" label=\"last name\" error={errors.lastName} name=\"lastName\" value={formData.lastName} />\r\n                        </div>\r\n                        }\r\n                        <TextField autoComplete=\"off\" type=\"password\" label=\"password\" error={errors.password} name=\"password\" value={formData.password} helperText={errors.password ? 'invalid password' : ''} />\r\n                        <Button onClick={formState === 'signup' ? handleSignup : handleLogin}>{formState === 'signup' ? 'Sign up' : 'Login'}</Button>\r\n                    </Box>\r\n                    <hr></hr>\r\n                    <GoogleLogin\r\n                        clientId={googleClientId}\r\n                        buttonText='Continue with Google'\r\n                        onSuccess={handleGoogleLogin}\r\n                        onFailure={handleGoogleFail}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"dimmer-screen\"></div>\r\n        </>\r\n    )\r\n}\r\n","export const localStorageService = {\r\n    load,\r\n    save,\r\n    remove\r\n}\r\n\r\nfunction load(key: string): any {\r\n    const obj: any = localStorage.getItem(key)\r\n    return JSON.parse(obj)\r\n}\r\n\r\nfunction save(key: string, obj: any) {\r\n    localStorage.setItem(key, JSON.stringify(obj))\r\n}\r\n\r\nfunction remove(key: string) {\r\n    localStorage.removeItem(key)\r\n}","import axios from \"axios\"\r\nimport { localStorageService } from \"./local-storage.service\"\r\n\r\nexport const utilService = {\r\n    debounce,\r\n    makeId,\r\n    getFormatedDigits,\r\n    getCurrencies,\r\n    getSymbolFromCode,\r\n    getIcons,\r\n    getColors\r\n}\r\n\r\nconst CURRENCY_API = process.env.REACT_APP_CURRENCY_API\r\n\r\nfunction debounce<Params extends any[]>(func: (...args: Params) => any, timeout: number,): (...args: Params) => void {\r\n    let timer: NodeJS.Timeout\r\n\r\n    return (...args: Params) => {\r\n        clearTimeout(timer)\r\n        timer = setTimeout(() => {\r\n            func(...args)\r\n        }, timeout)\r\n    }\r\n}\r\n\r\nfunction makeId(length: number = 6) {\r\n    let txt = '';\r\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction getFormatedDigits(num: number) {\r\n    return num < 10 ? '0' + num : num\r\n}\r\n\r\nasync function getCurrencies() {\r\n    try{\r\n        const currencies = localStorageService.load('currencies')\r\n        if(currencies){\r\n            return currencies\r\n        } else {\r\n            const res = await axios.get(`https://free.currconv.com/api/v7/currencies?apiKey=${CURRENCY_API}`)\r\n            localStorageService.save('currencies', res.data.results)\r\n            return res.data.results\r\n        }\r\n    } catch(err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nfunction getSymbolFromCode(currencyCode: string) {\r\n    const currencies = localStorageService.load('currencies')\r\n    return currencies[currencyCode].currencySymbol\r\n}\r\n\r\nfunction getIcons() {\r\n    return [\r\n        'shopping-cart',\r\n        'car',\r\n        'bus',\r\n        'train',\r\n        'food',\r\n        'motorcycle',\r\n        'bottles',\r\n        'code',\r\n        'laptop',\r\n        'smartphone',\r\n        'beer',\r\n        'cocktail',\r\n        'smoke',\r\n        'home',\r\n        'money',\r\n        'coins',\r\n        'leaf',\r\n        'travel',\r\n        'fire',\r\n        'music',\r\n        'baby',\r\n        'ball',\r\n        'bicycle',\r\n        'box',\r\n        'book',\r\n        'student',\r\n        'bone',\r\n        'dog',\r\n        'building',\r\n        'camping',\r\n        'camera',\r\n        'capsules',\r\n        'pie-graph',\r\n        'industry',\r\n        'church',\r\n        'exclamation',\r\n        'water',\r\n        'warning',\r\n        'movie',\r\n        'gas',\r\n        'guitar',\r\n        'hamburger',\r\n        'hammer',\r\n        'heart',\r\n        'information',\r\n        'carry',\r\n        'bank',\r\n        'cube',\r\n        'old-phone',\r\n        'text',\r\n        'apple',\r\n        'globe'\r\n    ]\r\n}\r\n\r\nfunction getColors() {\r\n    return [\r\n        '#a8071a',\r\n        '#cf1322',\r\n        '#f5222d',\r\n        '#ff4d4f',\r\n        '#ad2102',\r\n        '#d4380d',\r\n        '#fa541c',\r\n        '#ff7a45',\r\n        '#ad4e00',\r\n        '#d46b08',\r\n        '#fa8c16',\r\n        '#ffa940',\r\n        '#ad6800',\r\n        '#d48806',\r\n        '#faad14',\r\n        '#ffc53d',\r\n        '#ad8b00',\r\n        '#d4b106',\r\n        '#fadb14',\r\n        '#ffec3d',\r\n        '#5b8c00',\r\n        '#7cb305',\r\n        '#a0d911',\r\n        '#bae637',\r\n        '#237804',\r\n        '#389e0d',\r\n        '#52c41a',\r\n        '#73d13d',\r\n        '#006d75',\r\n        '#08979c',\r\n        '#13c2c2',\r\n        '#36cfc9',\r\n        '#0050b3',\r\n        '#096dd9',\r\n        '#1890ff',\r\n        '#40a9ff',\r\n        '#10239e',\r\n        '#1d39c4',\r\n        '#2f54eb',\r\n        '#597ef7',\r\n        '#391085',\r\n        '#531dab',\r\n        '#722ed1',\r\n        '#9254de',\r\n        '#9e1068',\r\n        '#c41d7f',\r\n        '#eb2f96',\r\n        '#f759ab',\r\n        '#000000',\r\n        '#141414',\r\n        '#1f1f1f',\r\n        '#262626'\r\n    ]\r\n\r\n}","import { IFilterBy } from \"../interfaces/dataInterfaces\"\r\nimport { utilService } from \"./util.service\"\r\n\r\nexport const dateService = {\r\n    getDayTimestampByHour,\r\n    getDaysTimeData,\r\n    getMonthsTimeData,\r\n    getYearsTimeData,\r\n    getNextMonth,\r\n    getMonthStartTimeStamp,\r\n    getDayMaxHour,\r\n    getRelativeDate,\r\n    getDateAsString,\r\n    getShortYear,\r\n    calculatePeriodDays,\r\n    getDateFilterBy\r\n}\r\n\r\nfunction getDayTimestampByHour(date: number, hour: string) {\r\n    const now = new Date(date)\r\n\r\n    return new Date(`${now.getMonth() + 1}/${now.getDate()}/${now.getFullYear()} ${hour}`).getTime()\r\n}\r\n\r\nfunction getDaysTimeData(days: number, filterBy: IFilterBy) {\r\n    let timePoints: string[] = []\r\n    let timeStamps: number[] = []\r\n\r\n    for (let i = 0; i < days; i++) {\r\n        const date = new Date(filterBy.startDate + (86400000 * i))\r\n        timePoints.push(`${date.getDate()}/${date.getMonth() + 1}`)\r\n        timeStamps.push(date.getTime())\r\n    }\r\n\r\n    return { timePoints, timeStamps }\r\n}\r\n\r\nfunction getMonthsTimeData(filterBy: IFilterBy) {\r\n    const firstDate = new Date(filterBy.startDate)\r\n\r\n    let monthIdx = firstDate.getMonth() + 1\r\n    let yearIdx = getShortYear(firstDate.getFullYear())\r\n\r\n    const firstTimePoint = `${utilService.getFormatedDigits(monthIdx)}/${yearIdx}`\r\n\r\n    let timePoints: string[] = [firstTimePoint]\r\n    let timeStamps: number[] = [filterBy.startDate]\r\n\r\n    let dateIdx = getNextMonth(monthIdx, yearIdx)\r\n\r\n    while (dateIdx < filterBy.endDate) {\r\n        const date = new Date(dateIdx)\r\n        monthIdx = date.getMonth() + 1\r\n        yearIdx = getShortYear(date.getFullYear())\r\n\r\n        timePoints.push(`${utilService.getFormatedDigits(monthIdx)}/${yearIdx}`)\r\n        timeStamps.push(date.getTime() - 1000)\r\n\r\n        dateIdx = getNextMonth(monthIdx, yearIdx)\r\n    }\r\n\r\n    timeStamps.push(filterBy.endDate)\r\n\r\n    return { timePoints, timeStamps }\r\n}\r\n\r\nfunction getYearsTimeData(filterBy: IFilterBy) {\r\n    let yearIdx = new Date(filterBy.startDate).getFullYear()\r\n\r\n    let timePoints: string[] = []\r\n    let timeStamps: number[] = [filterBy.startDate]\r\n\r\n    while(yearIdx < new Date().getFullYear()){\r\n        timePoints.push(`${yearIdx}`)\r\n        timeStamps.push(new Date(`01/01/${yearIdx + 1}`).getTime() - 1000)\r\n\r\n        yearIdx++\r\n    }\r\n    timePoints.push(`${new Date().getFullYear()}`)\r\n    timeStamps.push(filterBy.endDate)\r\n    \r\n    return { timePoints, timeStamps }\r\n}\r\n\r\nfunction getNextMonth(month: number, year: number) {\r\n    month++\r\n    if (month > 12) {\r\n        month = 1\r\n        year++\r\n    }\r\n\r\n    return getMonthStartTimeStamp(new Date(`${month}/01/${year}`))\r\n}\r\n\r\nfunction getMonthStartTimeStamp(date: Date = new Date()) {\r\n    const thisYear = date.getFullYear()\r\n    const thisMonth = date.getMonth() + 1\r\n\r\n    const dateString = new Date(`${thisMonth}/01/${thisYear}`)\r\n\r\n    return dateString.getTime()\r\n}\r\n\r\nfunction getDayMaxHour(timeStamp: number) {\r\n    const date = new Date(timeStamp)\r\n\r\n    const day = date.getDate()\r\n    const month = date.getMonth()\r\n    const year = date.getFullYear()\r\n\r\n    return new Date(year, month, day, 23, 59, 59).getTime()\r\n}\r\n\r\nfunction getRelativeDate(timeStamp: number) {\r\n    const nowTimeStamp = new Date()\r\n    const dateTimeStamp = new Date(timeStamp)\r\n\r\n    const now = {\r\n        day: utilService.getFormatedDigits(nowTimeStamp.getDate()),\r\n        month: utilService.getFormatedDigits(nowTimeStamp.getMonth() + 1),\r\n        year: nowTimeStamp.getFullYear(),\r\n        hours: utilService.getFormatedDigits(nowTimeStamp.getHours()),\r\n        minutes: utilService.getFormatedDigits(nowTimeStamp.getMinutes()),\r\n    }\r\n\r\n    const date = {\r\n        day: utilService.getFormatedDigits(dateTimeStamp.getDate()),\r\n        month: utilService.getFormatedDigits(dateTimeStamp.getMonth() + 1),\r\n        year: dateTimeStamp.getFullYear(),\r\n        hours: utilService.getFormatedDigits(dateTimeStamp.getHours()),\r\n        minutes: utilService.getFormatedDigits(dateTimeStamp.getMinutes()),\r\n    }\r\n\r\n    // Today\r\n    if (now.day === date.day && now.year === date.year && now.month === date.month) {\r\n        return `Today ${date.hours}:${date.minutes}`\r\n        // Yesterday\r\n    } else if (now.day === utilService.getFormatedDigits(+date.day + 1) && now.year === date.year && now.month === date.month) {\r\n        return `Yesterday ${date.hours}:${date.minutes}`\r\n    // Some Date\r\n    } else {\r\n        return `${date.day}/${date.month} ${date.hours}:${date.minutes}`\r\n    }\r\n}\r\n\r\nfunction getDateAsString(date: number) {\r\n    const dateObj = new Date(date)\r\n    const day = dateObj.getDate()\r\n    const month = dateObj.getMonth() + 1\r\n\r\n    return `${utilService.getFormatedDigits(day)}/${utilService.getFormatedDigits(month)}/${dateObj.getFullYear()}`\r\n}\r\n\r\nfunction getShortYear(year: number) {\r\n    return +(year + '').substr(2,3)\r\n}\r\n\r\nfunction calculatePeriodDays(startDate: number, endDate: number){\r\n    const rawResult = endDate - startDate\r\n\r\n    return Math.ceil(rawResult / 86400000)\r\n}\r\n\r\nfunction getDateFilterBy(filterBy: IFilterBy){\r\n    return {\r\n        startDate: filterBy.startDate,\r\n        endDate: filterBy.endDate\r\n    }\r\n}","import React from 'react'\r\nimport { IoMdExit, IoMdSettings } from 'react-icons/io'\r\nimport { MdAddCircle } from 'react-icons/md'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../store/store'\r\nimport { setCurrentViewMode, setCurrentLabel, setLoader } from '../store/actions/app-state.action'\r\nimport { logout } from '../store/actions/user.action'\r\nimport { IDataObject } from '../interfaces/dataInterfaces'\r\nimport { setFilterBy } from '../store/actions/app-state.action'\r\nimport { useNavigate } from 'react-router'\r\nimport { IUser } from '../interfaces/userInterfaces'\r\nimport { sessionStorageService } from '../services/session-storage.service'\r\nimport { dateService } from '../services/date.service'\r\n\r\ninterface IMainAppMenuProps {\r\n    isMenuOpen: boolean;\r\n    setMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setActionModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setSettingsModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const MainAppMenu = ({ isMenuOpen, setMenuOpen, setActionModalOpen, setSettingsModalOpen }: IMainAppMenuProps) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const currentViewMode = useSelector((state: RootState) => state.appStateModule.currentViewMode)\r\n    const currentLabel = useSelector((state: RootState) => state.appStateModule.currentLabel)\r\n    const filterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n    const user: IUser = useSelector((state: RootState) => state.userModule.loggedInUser) || sessionStorageService.load('loggedInUser')\r\n    const data: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleViewModeClick = (value: string) => {\r\n        dispatch(setCurrentViewMode(value))\r\n        setMenuOpen(false)\r\n    }\r\n\r\n    const handleLabelClick = (value: string) => {\r\n        const label = currentLabel === value ? '' : value\r\n        const newFilterBy = { ...filterBy, label }\r\n        dispatch(setCurrentLabel(label))\r\n        dispatch(setFilterBy(newFilterBy))\r\n        setMenuOpen(false)\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        (async () => {\r\n            dispatch(setLoader(true))\r\n            await dispatch(logout())\r\n            dispatch(setLoader(false))\r\n\r\n            // Reset the global filterBy\r\n            dispatch(setFilterBy({\r\n                searchTxt: '',\r\n                startDate: dateService.getMonthStartTimeStamp(),\r\n                endDate: dateService.getDayMaxHour(Date.now()),\r\n                label: '',\r\n                category: ''\r\n            }))\r\n            navigate('/')\r\n        })()\r\n    }\r\n\r\n    const _getUserImage = () => {\r\n        if (user && user.picture) {\r\n            return user.picture\r\n        } else {\r\n            return 'https://res.cloudinary.com/dfj4zd14o/image/upload/v1638993249/MoneyPipe_Users_assets/user_xco1rj.png'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`main-app-menu ${isMenuOpen ? 'open-menu' : ''}`}>\r\n            <h1 className=\"app-logo\">MoneyPipe</h1>\r\n            <div className=\"user-details\">\r\n                <div className=\"image\" style={{ backgroundImage: `url(${_getUserImage()})` }}></div>\r\n                <h3>{user && user.firstName} {user && user.lastName}</h3>\r\n            </div>\r\n            <div className=\"main-menu\">\r\n                <div className=\"inner-menu\">\r\n                    <h2>View mode</h2>\r\n                    <ul>\r\n                        <li className={`${currentViewMode === 'Summery' ? 'menu-li-active' : ''}`}\r\n                            onClick={() => { handleViewModeClick('Summery') }}>\r\n                            Summery\r\n                        </li>\r\n                        <li className={`${currentViewMode === 'Graph' ? 'menu-li-active' : ''}`}\r\n                            onClick={() => { handleViewModeClick('Graph') }}>\r\n                            Graph\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <hr />\r\n                <div className=\"inner-menu labels-menu\">\r\n                    <h2>My labels</h2>\r\n                    <ul>\r\n                        {data && data.labels.map(label => {\r\n                            return <li onClick={() => { handleLabelClick(label.labelName) }}\r\n                                className={`${currentLabel === label.labelName ? 'menu-li-active' : ''}`}\r\n                                key={label._id}>\r\n                                {label.title}\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"actions-bar\">\r\n                <div className=\"account-actions\">\r\n                    <IoMdExit className=\"logout-btn\" onClick={handleLogout} />\r\n                    <IoMdSettings onClick={() => { setSettingsModalOpen(true); setMenuOpen(false) }} />\r\n                </div>\r\n                <div className=\"quick-actions\">\r\n                    <MdAddCircle onClick={() => { setActionModalOpen(true); setMenuOpen(false) }} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { GiHamburgerMenu } from 'react-icons/gi'\r\nimport { MdAddCircle } from 'react-icons/md'\r\n\r\ninterface IMobileMenuProps{\r\n    setMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setActionModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const MobileMenu = ({setMenuOpen, setActionModalOpen}: IMobileMenuProps) => {\r\n    return (\r\n        <div className=\"mobile-menu\">\r\n            <div className=\"mobile-menu-icon\">\r\n                <GiHamburgerMenu onClick={() => {setMenuOpen(prevState => !prevState)}}/>\r\n            </div>\r\n            <h1 className=\"app-logo\">MoneyPipe</h1>\r\n            <div className=\"mobile-menu-icon\">\r\n                <MdAddCircle onClick={() => {setActionModalOpen(true)}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","interface IScreenProps {\r\n    isOpen: boolean;\r\n    exitScreen: (action: boolean) => void;\r\n    zIndex?: string;\r\n}\r\n\r\nexport const Screen = ({ isOpen, exitScreen, zIndex }: IScreenProps) => {\r\n    return (\r\n        <div onClick={() => {exitScreen(false)}} style={{zIndex: zIndex, backdropFilter: isOpen ? 'blur(1.5px) saturate(85%)' : ''}} className={`screen ${isOpen ? 'screen-active' : ''}`}>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../store/store'\r\nimport { BiSearchAlt } from 'react-icons/bi'\r\nimport { dateService } from '../../services/date.service'\r\n\r\ninterface IHeaderProps {\r\n    setSearchModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const HeaderBlock = ({setSearchModalOpen}: IHeaderProps) => {\r\n\r\n    const currentViewMode = useSelector((state: RootState) => state.appStateModule.currentViewMode)\r\n    const currentLabel = useSelector((state: RootState) => state.appStateModule.currentLabel)\r\n    const filterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const startDateString = dateService.getDateAsString(filterBy.startDate)\r\n    const endDateString = dateService.getDateAsString(filterBy.endDate)\r\n\r\n    return (\r\n        <div className=\"header-block\">\r\n            <div className=\"header-block-content\">\r\n                {currentLabel && <h2>{currentLabel}<p>-</p><span>{startDateString} - {endDateString}</span></h2>}\r\n                {(!currentLabel && currentViewMode) && <h2>{currentViewMode}<p>-</p><span>{startDateString} - {endDateString}</span></h2>}\r\n                <p>{currentViewMode} of incomes and expenses</p>\r\n            </div>\r\n            <div className=\"filter-btn\">\r\n                <BiSearchAlt onClick={() => {setSearchModalOpen(true)}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { IDataObject } from '../../interfaces/dataInterfaces'\r\nimport { RootState } from '../../store/store'\r\n\r\nexport const BalanceBlock = () => {\r\n\r\n    const filterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n\r\n    const [balance, setBalance] = useState(0)\r\n    const [balanceColor, setBalanceColor] = useState('#000000')\r\n\r\n\r\n    useEffect(() => {\r\n        if(rawData){\r\n            const balance = rawData.actions.reduce((balance, action) => {\r\n                if (filterBy.category && action.category !== filterBy.category) return balance\r\n                if (filterBy.label && !action.labels.includes(filterBy.label)) return balance\r\n                if (!action.description.includes(filterBy.searchTxt)) return balance\r\n                \r\n                if (action.type === 'income') balance += +action.amount\r\n                if (action.type === 'expense') balance -= +action.amount\r\n                return balance\r\n            }, 0)\r\n            \r\n            setBalance(balance)\r\n            if(balance === 0){\r\n                setBalanceColor('#000000')\r\n            } else{\r\n                setBalanceColor(balance > 0 ? '#00600F' : '#8A0000')\r\n            }\r\n        }\r\n    }, [rawData, filterBy])\r\n\r\n    return (\r\n        <div className=\"header-block\">\r\n            <div className=\"header-block-content\">\r\n                <h2>Balance</h2>\r\n                <p>Total balance</p>\r\n            </div>\r\n            <div className=\"balance-amount\" style={{color: balanceColor}}>{balance ? balance.toLocaleString() : '0'}{rawData && rawData.currency.sign}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IoIosWarning } from 'react-icons/io'\r\n\r\nimport { HiShoppingCart } from 'react-icons/hi'\r\nimport { MdDirectionsCar, MdFastfood } from 'react-icons/md'\r\nimport { FaMotorcycle, FaBeer, FaEnvira, FaFly, FaHotjar, FaItunesNote, FaUntappd, FaBabyCarriage, FaBasketballBall, FaBicycle, FaBoxOpen, FaBook, FaBone, FaBus, FaBuilding, FaCampground, FaCamera, FaCapsules, FaCity, FaChartPie, FaChurch, FaCocktail, FaCode, FaCoins, FaDog, FaExclamationCircle, FaFaucet, FaExclamationTriangle, FaFilm, FaGasPump, FaGuitar, FaHamburger, FaHammer, FaHeart, FaInfoCircle, FaLaptop, FaMobileAlt, FaPeopleCarry, FaSmoking, FaSubway, FaUserGraduate } from 'react-icons/fa'\r\nimport { BsFillHouseDoorFill } from 'react-icons/bs'\r\nimport { GiMoneyStack } from 'react-icons/gi'\r\nimport { AiFillBank, AiFillCodeSandboxCircle, AiFillPhone,AiOutlineAlignLeft, AiOutlineApple, AiOutlineGlobal } from 'react-icons/ai'\r\n\r\n\r\ninterface IconProps {\r\n    iconName: string;\r\n}\r\n\r\nexport const GetIcon = ({ iconName }: IconProps) => {\r\n    return <>\r\n        {iconName === 'shopping-cart' && <HiShoppingCart />}\r\n        {iconName === 'car' && <MdDirectionsCar />}\r\n        {iconName === 'bus' && <FaBus />}\r\n        {iconName === 'train' && <FaSubway />}\r\n        {iconName === 'food' && <MdFastfood />}\r\n        {iconName === 'motorcycle' && <FaMotorcycle />}\r\n        {iconName === 'code' && <FaCode />}\r\n        {iconName === 'beer' && <FaBeer />}\r\n        {iconName === 'cocktail' && <FaCocktail />}\r\n        {iconName === 'home' && <BsFillHouseDoorFill />}\r\n        {iconName === 'money' && <GiMoneyStack />}\r\n        {iconName === 'coins' && <FaCoins />}\r\n        {iconName === 'leaf' && <FaEnvira />}\r\n        {iconName === 'travel' && <FaFly />}\r\n        {iconName === 'fire' && <FaHotjar />}\r\n        {iconName === 'music' && <FaItunesNote />}\r\n        {iconName === 'bottles' && <FaUntappd />}\r\n        {iconName === 'baby' && <FaBabyCarriage />}\r\n        {iconName === 'ball' && <FaBasketballBall />}\r\n        {iconName === 'bicycle' && <FaBicycle />}\r\n        {iconName === 'box' && <FaBoxOpen />}\r\n        {iconName === 'book' && <FaBook />}\r\n        {iconName === 'student' && <FaUserGraduate />}\r\n        {iconName === 'bone' && <FaBone />}\r\n        {iconName === 'dog' && <FaDog />}\r\n        {iconName === 'building' && <FaBuilding />}\r\n        {iconName === 'camping' && <FaCampground />}\r\n        {iconName === 'camera' && <FaCamera />}\r\n        {iconName === 'capsules' && <FaCapsules />}\r\n        {iconName === 'pie-graph' && <FaChartPie />}\r\n        {iconName === 'industry' && <FaCity />}\r\n        {iconName === 'church' && <FaChurch />}\r\n        {iconName === 'exclamation' && <FaExclamationCircle />}\r\n        {iconName === 'water' && <FaFaucet />}\r\n        {iconName === 'warning' && <FaExclamationTriangle />}\r\n        {iconName === 'movie' && <FaFilm />}\r\n        {iconName === 'gas' && <FaGasPump />}\r\n        {iconName === 'guitar' && <FaGuitar />}\r\n        {iconName === 'hamburger' && <FaHamburger />}\r\n        {iconName === 'hammer' && <FaHammer />}\r\n        {iconName === 'heart' && <FaHeart />}\r\n        {iconName === 'information' && <FaInfoCircle />}\r\n        {iconName === 'laptop' && <FaLaptop />}\r\n        {iconName === 'smartphone' && <FaMobileAlt />}\r\n        {iconName === 'carry' && <FaPeopleCarry />}\r\n        {iconName === 'smoke' && <FaSmoking />}\r\n        {iconName === 'bank' && <AiFillBank />}\r\n        {iconName === 'cube' && <AiFillCodeSandboxCircle />}\r\n        {iconName === 'old-phone' && <AiFillPhone />}\r\n        {iconName === 'text' && <AiOutlineAlignLeft />}\r\n        {iconName === 'apple' && <AiOutlineApple />}\r\n        {iconName === 'globe' && <AiOutlineGlobal />}\r\n\r\n        {!iconName && <IoIosWarning />}\r\n    </>\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../store/store'\r\n\r\nexport const Loader = () => {\r\n\r\n    const isLoader = useSelector((state: RootState) => state.appStateModule.loaderState)\r\n\r\n    return (\r\n        <div className=\"loader-container\" style={isLoader ? {opacity: '1', pointerEvents: 'visible'} : {}}>\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport { IAction, IDataObject } from '../interfaces/dataInterfaces'\r\nimport { RootState } from '../store/store'\r\nimport { GetIcon } from './GetIcon'\r\nimport { FaRegEdit } from 'react-icons/fa'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { setLoader, setSelectedAction } from '../store/actions/app-state.action'\r\nimport { deleteAction } from '../store/actions/user.action'\r\nimport { dateService } from '../services/date.service'\r\nimport { Loader } from './Loader'\r\n\r\n\r\ninterface IActionProps {\r\n    action: IAction;\r\n    setActionModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\n\r\nexport const ActionPreview = ({ action, setActionModalOpen }: IActionProps) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const selectedAction: IAction | null = useSelector((state: RootState) => state.appStateModule.selectedAction)\r\n\r\n    const findCategoryData = (category: string) => {\r\n        if (rawData) {\r\n            const currCat = rawData.categories.find(currCat => currCat.title === category)\r\n            return currCat\r\n        }\r\n    }\r\n\r\n    const onDelete = async (ev: React.MouseEvent<HTMLElement>) => {\r\n        ev.stopPropagation()\r\n        dispatch(setLoader(true))\r\n        await dispatch(deleteAction(action._id))\r\n        dispatch(setLoader(false))\r\n        dispatch(setSelectedAction(null))\r\n    }\r\n\r\n    const onEdit = (ev: React.MouseEvent<HTMLElement>) => {\r\n        ev.stopPropagation()\r\n        setActionModalOpen(true)\r\n    }\r\n\r\n    const handleActionClick = () => {\r\n        if (!selectedAction) {\r\n            dispatch(setSelectedAction(action))\r\n        } else {\r\n            if (selectedAction._id !== action._id) {\r\n                dispatch(setSelectedAction(action))\r\n            } else {\r\n                dispatch(setSelectedAction(null))\r\n            }\r\n        }\r\n    }\r\n\r\n    const categoryData = findCategoryData(action.category)\r\n\r\n    if (!categoryData) return <Loader />\r\n    return (\r\n        <div className={`action-preview ${selectedAction?._id === action._id ? 'selected-action' : ''}`} onClick={handleActionClick}>\r\n            <div className=\"left-side \">\r\n                <div className=\"action-details-icon\" style={{ backgroundColor: categoryData.bgColor }}>\r\n                    <GetIcon iconName={categoryData.icon} />\r\n                </div>\r\n                <div className=\"action-data \">\r\n                    <p className=\"action-date \">{dateService.getRelativeDate(action.createdAt)}</p>\r\n                    <h3>{action.description}</h3>\r\n                    <p className=\"action-labels \">{action.labels.map(label => {\r\n                        return <span key={`label-${action.createdAt}-${label}`}>{label}</span>\r\n                    })}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"right-side \">\r\n                <h3>{action.amount.toLocaleString()}{rawData.currency.sign}</h3>\r\n            </div>\r\n            <div className=\"action-preview-actions \" style={{ transform: selectedAction?._id === action._id ? 'translateX(0%)' : 'translateX(100%)' }}>\r\n                <button onClick={onEdit}><FaRegEdit /></button>\r\n                <button onClick={onDelete}><VscTrash /></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { IActionsData, IDataMap, IDataObject, IPieData } from '../../interfaces/dataInterfaces'\r\nimport { RootState } from '../../store/store'\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { ActionPreview } from '../ActionPreview';\r\nimport { utilService } from '../../services/util.service';\r\nimport { dateService } from '../../services/date.service';\r\nimport { Loader } from '../Loader';\r\n\r\ninterface ISummeryBlockProps {\r\n    type: string;\r\n    setActionModalOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst options = {\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n        legend: {\r\n            display: false\r\n        }\r\n    },\r\n    scale: {\r\n        ticks: {\r\n            precision: 0\r\n        },\r\n    },\r\n    aspectRatio: 1,\r\n}\r\n\r\nexport const SummeryBlock = ({ type, setActionModalOpen }: ISummeryBlockProps) => {\r\n\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const currentViewMode = useSelector((state: RootState) => state.appStateModule.currentViewMode)\r\n    const filterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const [dataMap, setDataMap] = useState<IDataMap | null>(null)\r\n    const [pieData, setPieData] = useState<IPieData | null>(null)\r\n    const [actionsData, setActionsData] = useState<IActionsData | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (rawData) {\r\n            let acc: IDataMap = {}\r\n\r\n            setDataMap(rawData.actions.reduce((dataMap, action) => {\r\n                if (action.type !== type) return dataMap\r\n                if (filterBy.category && action.category !== filterBy.category) return dataMap\r\n                if (filterBy.label && !action.labels.includes(filterBy.label)) return dataMap\r\n                if (!action.description.includes(filterBy.searchTxt)) return dataMap\r\n\r\n                if (dataMap[action.category]) {\r\n                    dataMap[action.category].sum += +action.amount\r\n                } else {\r\n                    dataMap[action.category] = {\r\n                        sum: +action.amount,\r\n                        color: rawData.categories.find(category => category.title === action.category)?.bgColor || \"#white\"\r\n                    }\r\n                }\r\n\r\n                return dataMap\r\n            }, acc))\r\n\r\n\r\n            const actionsObj: any = {}\r\n\r\n            rawData.actions.filter(action => {\r\n                if (action.type !== type) return false\r\n                if (filterBy.category && action.category !== filterBy.category) return false\r\n                if (filterBy.label && !action.labels.includes(filterBy.label)) return false\r\n                if (!action.description.includes(filterBy.searchTxt)) return false\r\n                return true\r\n            }).sort((a, b) => b.createdAt - a.createdAt).forEach(action => {\r\n                const date = new Date(action.createdAt)\r\n                const dateStr = `${utilService.getFormatedDigits(date.getMonth() + 1)}/${dateService.getShortYear(date.getFullYear())}`\r\n                if (actionsObj[dateStr]) actionsObj[dateStr].push(action)\r\n                else {\r\n                    actionsObj[dateStr] = [action]\r\n                }\r\n            })\r\n            setActionsData(actionsObj)\r\n        }\r\n    }, [rawData, filterBy, type])\r\n\r\n    useEffect(() => {\r\n        if (dataMap) {\r\n            setPieData({\r\n                labels: Object.keys(dataMap),\r\n                datasets: [\r\n                    {\r\n                        label: '',\r\n                        data: Object.values(dataMap).map((action: any) => action.sum),\r\n                        backgroundColor: Object.values(dataMap).map((action: any) => action.color),\r\n                        borderColor: Object.values(dataMap).map(() => 'rgba(0, 0, 0, 1)'),\r\n                        borderWidth: 1,\r\n                    },\r\n                ],\r\n            })\r\n        }\r\n    }, [dataMap])\r\n\r\n    if(!rawData) return <Loader />\r\n\r\n    return (\r\n        <div className=\"summery-blocks\">\r\n            {currentViewMode === 'Summery' &&\r\n                <div className=\"summery-block\">\r\n                    <h2 className=\"summery-block-title\">{type === 'expense' ? 'Expenses' : 'Incomes'}</h2>\r\n                    {(pieData && pieData.labels.length === 0) && <h2 className=\"no-data-title\">No data to display</h2>}\r\n                    {pieData && <Pie data={pieData} options={options} className=\"pie\" />}\r\n\r\n                    <div className=\"summery-block-details\">\r\n                        {dataMap && Object.entries(dataMap).map(action => {\r\n                            return <div key={action[0] + action[1].sum + Math.random()} className=\"action-details\">\r\n                                <div className=\"left-side\">\r\n                                    <div className=\"action-color-dot\" style={{ backgroundColor: action[1].color }}></div>\r\n                                    <h2>{action[0]}</h2>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <h2>{action[1].sum.toLocaleString()}{rawData.currency.sign}</h2>\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    {pieData && <h2 className=\"summery-block-total\" style={{ color: type === 'expense' ? '#8A0000' : '#00600F' }}>\r\n                        {pieData?.datasets[0].data.reduce((sum, expense) => {\r\n                            sum += expense\r\n                            return sum\r\n                        }, 0).toLocaleString()}{rawData.currency.sign}\r\n                    </h2>\r\n                    }\r\n                </div>\r\n            }\r\n            <div className=\"actions-block\">\r\n                {(actionsData && Object.entries(actionsData).length === 0) && <h2 className=\"no-data-title\">No data to display</h2>}\r\n                {actionsData && Object.entries(actionsData).map(month => {\r\n                    return (\r\n                        <React.Fragment key={`${month[0]}-${type}`}>\r\n                            <h3 className=\"actions-month\">{`${month[0]} - ${month[1].reduce((sum, action) => { sum += +action.amount; return sum }, 0).toLocaleString()}${rawData.currency.sign}`}</h3>\r\n                            {\r\n                                month[1].sort((a, b) => b.createdAt - a.createdAt).map(action => <ActionPreview key={action._id} action={action} setActionModalOpen={setActionModalOpen} />)\r\n                            }\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport { IDataObject, IFilterBy } from '../../interfaces/dataInterfaces';\r\nimport { dateService } from '../../services/date.service';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst options = {\r\n    responsive: true,\r\n    plugins: {\r\n        legend: {\r\n            display: false,\r\n        }\r\n    }\r\n};\r\n\r\nexport const GraphBlock = () => {\r\n\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const filterBy: IFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const [graphData, setGraphData] = useState<any>(null)\r\n\r\n    useEffect(() => {\r\n        if (!rawData) return\r\n\r\n        // Get the amount of days => endDate - startDate\r\n        const daysPeriod = dateService.calculatePeriodDays(filterBy.startDate, filterBy.endDate)\r\n\r\n        // Initializing the graph's Data\r\n        let expensesDataset: any = {\r\n            data: [],\r\n            borderColor: '#c41f02',\r\n            backgroundColor: '#eb2300',\r\n        }\r\n\r\n        let incomesDataset: any = {\r\n            data: [],\r\n            borderColor: '#18b50d',\r\n            backgroundColor: '#0ecf00',\r\n        }\r\n\r\n        let timePoints: string[] = []\r\n        let timeStamps: number[] = []\r\n\r\n        // Calculating the graph's timePoints (X axis) and timeStamps according to them\r\n        // For different days periods, the calculations and data is shown differently\r\n        if (daysPeriod <= 1) {\r\n            timePoints = ['00:00', '06:00', '12:00', '18:00', '23:59']\r\n            timeStamps = timePoints.map(timePoint => dateService.getDayTimestampByHour(filterBy.startDate, timePoint))\r\n\r\n        } else if (daysPeriod <= 31) {\r\n            const timeData = dateService.getDaysTimeData(daysPeriod, filterBy)\r\n            timePoints = timeData.timePoints\r\n            timeStamps = timeData.timeStamps\r\n\r\n        } else if (daysPeriod <= 365) {\r\n            const timeData = dateService.getMonthsTimeData(filterBy)\r\n            timePoints = timeData.timePoints\r\n            timeStamps = timeData.timeStamps\r\n\r\n        } else if (daysPeriod > 365) {\r\n            const timeData = dateService.getYearsTimeData(filterBy)\r\n            timePoints = timeData.timePoints\r\n            timeStamps = timeData.timeStamps\r\n\r\n        }\r\n\r\n        // No Data\r\n        if (timePoints.length === 0) {\r\n            setGraphData(null)\r\n        } else {\r\n            // Initialize with amounts of 0 for each time point in the graph\r\n            expensesDataset.data = timeStamps.map(timeStamp => 0)\r\n            incomesDataset.data = [...expensesDataset.data]\r\n\r\n            rawData.actions.filter(action => {\r\n                if (filterBy.category && action.category !== filterBy.category) return false\r\n                if (filterBy.label && !action.labels.includes(filterBy.label)) return false\r\n                if (!action.description.includes(filterBy.searchTxt)) return false\r\n                return true\r\n            }).forEach(action => {\r\n                timeStamps.forEach((timeStamp, idx, timeStamps) => {\r\n                    if (action.createdAt >= timeStamp) {\r\n                        if (idx === timeStamps.length - 1) {\r\n                            if (action.createdAt <= Date.now()) {\r\n                                if (action.type === 'expense') {\r\n                                    expensesDataset.data[idx] += +action.amount\r\n                                } else {\r\n                                    incomesDataset.data[idx] += +action.amount\r\n                                }\r\n                            }\r\n                        } else if (action.createdAt <= (timeStamps[idx + 1])) {\r\n                            if (action.type === 'expense') {\r\n                                expensesDataset.data[idx] += +action.amount\r\n                            } else {\r\n                                incomesDataset.data[idx] += +action.amount\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n\r\n            setGraphData({\r\n                labels: timePoints,\r\n                datasets: [expensesDataset, incomesDataset]\r\n            })\r\n        }\r\n\r\n    }, [rawData, filterBy])\r\n\r\n    return (\r\n        <div className=\"graph-block\" style={{ justifyContent: !graphData ? 'center' : '' }}>\r\n            {graphData && <Line redraw className=\"graph\" options={options} data={graphData} />}\r\n            {!graphData && <h2>No data to display</h2>}\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../store/store';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent } from '@mui/material';\r\nimport { IDataObject } from '../../interfaces/dataInterfaces';\r\nimport { setFilterBy as setGlobalFilterBy } from '../../store/actions/app-state.action'\r\nimport { setCurrentLabel } from '../../store/actions/app-state.action';\r\nimport { dateService } from '../../services/date.service';\r\n\r\ninterface IModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst emptyFilterBy = {\r\n    category: \"\",\r\n    startDate: dateService.getMonthStartTimeStamp(),\r\n    // startDate: new Date('01/01/2021').getTime(),\r\n    endDate: dateService.getDayMaxHour(Date.now()),\r\n    label: \"\",\r\n    searchTxt: \"\"\r\n}\r\n\r\nexport const SearchModal = ({ closeModal }: IModalProps) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const globalFilterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n\r\n    const [filterBy, setFilterBy] = useState(globalFilterBy)\r\n\r\n\r\n    const handleChange = (ev: SelectChangeEvent | any) => {\r\n        setFilterBy({ ...filterBy, [ev.target.name]: ev.target.value })\r\n    };\r\n\r\n    const handleDateChange = (date: number | null, field: string) => {\r\n        if (date) {\r\n            const timeStamp = new Date(date).getTime();\r\n            if (timeStamp > Date.now()) {\r\n                alert(\"Date cannot be greater than the current date\")\r\n                return\r\n            } else if (filterBy.startDate > filterBy.endDate) {\r\n                alert(\"Start date cannot be greater than end date\")\r\n                return\r\n            }\r\n            setFilterBy({ ...filterBy, [field]: field === 'endDate' ? dateService.getDayMaxHour(timeStamp) : timeStamp })\r\n        }\r\n    }\r\n\r\n    const handleApply = () => {\r\n        dispatch(setGlobalFilterBy(filterBy))\r\n        dispatch(setCurrentLabel(filterBy.label))\r\n        closeModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"modal search-modal\">\r\n            <div className=\"modal-header\">\r\n                <h3>Search</h3>\r\n                <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false) }} />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <TextField autoComplete=\"off\" className=\"txt-input\" value={filterBy.searchTxt} name=\"searchTxt\" onChange={handleChange} label=\"Search by text\" variant=\"outlined\" />\r\n                <Box className=\"modal-form\" component=\"form\" noValidate autoComplete=\"off\" onChange={handleChange}>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <Stack spacing={3} className=\"date-filters\">\r\n                            <MobileDatePicker label=\"Start date\" inputFormat=\"dd/MM/yyyy\" value={filterBy.startDate} onAccept={(date) => { handleDateChange(date, 'startDate') }} onChange={(date) => { }} renderInput={(params) => <TextField autoComplete=\"off\" className=\"input-field\" {...params} />} />\r\n                            <MobileDatePicker label=\"End date\" inputFormat=\"dd/MM/yyyy\" value={filterBy.endDate} onAccept={(date) => { handleDateChange(date, 'endDate') }} onChange={(date) => { }} renderInput={(params) => <TextField autoComplete=\"off\" className=\"input-field\" {...params} />} />\r\n                        </Stack>\r\n                    </LocalizationProvider>\r\n                    <div className=\"input-selectors\">\r\n                        <div className=\"input-select\">\r\n                            <FormControl className=\"input-field\" fullWidth>\r\n                                <InputLabel id=\"category\">Category</InputLabel>\r\n                                <Select fullWidth labelId=\"category\" id=\"category\" value={filterBy.category} label=\"Category\" name=\"category\" onChange={handleChange}>\r\n                                    {rawData && rawData.categories.map(category => <MenuItem key={`cat-filter-${category.title}`} value={category.title}>{category.title}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"input-select\">\r\n                            <FormControl className=\"input-field\" fullWidth>\r\n                                <InputLabel id=\"label\">Label</InputLabel>\r\n                                <Select fullWidth labelId=\"label\" id=\"label\" value={filterBy.label} label=\"Label\" name=\"label\" onChange={handleChange}>\r\n                                    {rawData && rawData.labels.map(label => <MenuItem key={`lab-filter-${label._id}`} value={label.labelName}>{label.title}</MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </Box>\r\n                <Stack className=\"form-buttons\" spacing={2} direction=\"row\">\r\n                    <Button variant=\"contained\" onClick={() => { setFilterBy(emptyFilterBy) }}>Clear</Button>\r\n                    <Button variant=\"contained\" onClick={() => { handleApply() }}>Apply</Button>\r\n                </Stack>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, Stack, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React, { useState } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { GetIcon } from '../GetIcon'\r\nimport { BsApp } from 'react-icons/bs'\r\nimport { Screen } from '../Screen'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addCategory } from '../../store/actions/user.action'\r\nimport { IAction, ICategory } from '../../interfaces/dataInterfaces'\r\nimport { utilService } from '../../services/util.service'\r\nimport { setLoader } from '../../store/actions/app-state.action'\r\n\r\ninterface IModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setFormData?: React.Dispatch<React.SetStateAction<IAction>>;\r\n    categoryToEdit?: ICategory | null;\r\n}\r\n\r\nconst colors = utilService.getColors()\r\nconst icons = utilService.getIcons()\r\n\r\nconst btnErrorStyle = {\r\n    border: '2px #E34C4C solid'\r\n}\r\n\r\nexport const CategoryModal = ({ closeModal, setFormData, categoryToEdit }: IModalProps) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [categoryName, setCategoryName] = useState(categoryToEdit?.title || '')\r\n    const [selectedIcon, setSelectedIcon] = useState(categoryToEdit?.icon || '')\r\n    const [selectedColor, setSelectedColor] = useState(categoryToEdit?.bgColor || 'gray')\r\n\r\n    const [isColorsModalOpen, setColorsModal] = useState(false)\r\n    const [isIconsModalOpen, setIconsModal] = useState(false)\r\n\r\n    const [errors, setErrors] = useState({\r\n        categoryName: false,\r\n        selectedIcon: false\r\n    })\r\n\r\n    const categoryNameChange = (ev: React.ChangeEvent<HTMLFormElement>) => {\r\n        setCategoryName(ev.target.value)\r\n    }\r\n\r\n    const selectColorHandle = (color: string) => {\r\n        setSelectedColor(color)\r\n        setColorsModal(false)\r\n    }\r\n\r\n    const selectIconHandle = (icon: string) => {\r\n        setSelectedIcon(icon)\r\n        setIconsModal(false)\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        const errorsCopy = { ...errors }\r\n\r\n        errorsCopy.categoryName = categoryName ? false : true\r\n        errorsCopy.selectedIcon = selectedIcon ? false : true\r\n\r\n\r\n        if (errorsCopy.categoryName || errorsCopy.selectedIcon) {\r\n            setErrors(errorsCopy)\r\n            return\r\n        } else {\r\n            const categoryFormatedName = categoryName[0].toUpperCase() + categoryName.substr(1)\r\n\r\n            const newCategory = {\r\n                _id: categoryToEdit?._id || '',\r\n                title: categoryFormatedName,\r\n                icon: selectedIcon,\r\n                bgColor: selectedColor\r\n            }\r\n            dispatch(setLoader(true))\r\n            await dispatch(addCategory(newCategory))\r\n            dispatch(setLoader(false))\r\n            if(!categoryToEdit && setFormData){\r\n                setFormData(formData => { return { ...formData, category: categoryFormatedName } })\r\n            }\r\n            closeModal(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"category-add-modal modal\">\r\n                <div className=\"modal-header\">\r\n                    <h3>{categoryToEdit ? 'Edit category' : 'Add new category'}</h3>\r\n                    <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false) }} />\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Box className=\"modal-form\" component=\"form\" noValidate autoComplete=\"off\" onChange={categoryNameChange}>\r\n                        <TextField autoComplete=\"off\" className=\"txt-input\" error={errors.categoryName} value={categoryName} name=\"category\" label=\"category name\" variant=\"outlined\" />\r\n                    </Box>\r\n                    <Button variant=\"contained\" style={errors.selectedIcon ? btnErrorStyle : {}} onClick={() => { setIconsModal(true) }}>Pick icon</Button>\r\n                    <Button variant=\"contained\" onClick={() => { setColorsModal(true) }}>Pick color</Button>\r\n                    <div className=\"icon-preview\" style={{ backgroundColor: selectedColor }}>\r\n                        {!selectedIcon && <BsApp />}\r\n                        {selectedIcon && <GetIcon iconName={selectedIcon} />}\r\n                    </div>\r\n                    <Stack className=\"form-buttons\" spacing={2} direction=\"row\">\r\n                        <Button variant=\"contained\" onClick={onSubmit}>{categoryToEdit ? 'submit' : 'Add'}</Button>\r\n                    </Stack>\r\n                </div>\r\n            </div>\r\n            <Screen isOpen={isColorsModalOpen} exitScreen={setColorsModal} zIndex=\"120\" />\r\n            <Screen isOpen={isIconsModalOpen} exitScreen={setIconsModal} zIndex=\"120\" />\r\n\r\n            {isColorsModalOpen && <div className=\"colors-pick-modal pick-modal\">\r\n                {colors.map(color => <div key={color} onClick={() => { selectColorHandle(color) }} className=\"color\" style={{ backgroundColor: color }}></div>)}\r\n            </div>}\r\n\r\n            {isIconsModalOpen && <div className=\"icon-pick-modal pick-modal\">\r\n                {icons.map(icon => <div key={`cat-pick-${icon}`} onClick={() => { selectIconHandle(icon) }}><GetIcon iconName={icon} /></div>)}\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { Button, Stack, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React, { useState } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { useDispatch } from 'react-redux'\r\nimport { IAction, ILabel } from '../../interfaces/dataInterfaces'\r\nimport { setLoader } from '../../store/actions/app-state.action'\r\nimport { addLabel } from '../../store/actions/user.action'\r\n\r\ninterface IModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n    setFormData?: React.Dispatch<React.SetStateAction<IAction>>;\r\n    labelToEdit?: ILabel | null;\r\n}\r\n\r\nexport const LabelModal = ({ closeModal, setFormData, labelToEdit }: IModalProps) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [label, setLabel] = useState(labelToEdit?.title || '')\r\n    const [error, setError] = useState(false)\r\n\r\n    const handleLabelChange = (ev: React.ChangeEvent<HTMLFormElement>) => {\r\n        setLabel(ev.target.value)\r\n    }\r\n\r\n    const onSubmitLabel = async () => {\r\n        if (!label) {\r\n            setError(true)\r\n            return\r\n        } else {\r\n            const formatedLabel = '#' + label.toLowerCase().split('').filter(char => char !== ' ').join('')\r\n\r\n            const newLabel = {\r\n                _id: labelToEdit?._id || '',\r\n                title: label,\r\n                labelName: formatedLabel\r\n            }\r\n            dispatch(setLoader(true))\r\n            const res = await dispatch(addLabel(newLabel))\r\n            dispatch(setLoader(false))\r\n            if(!labelToEdit && setFormData && res){\r\n                setFormData(formData => { return { ...formData, labels: [...formData.labels, formatedLabel] } })\r\n            }\r\n            closeModal(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"label-add-modal modal\">\r\n            <div className=\"modal-header\">\r\n                <h3>{labelToEdit ? 'Edit label' : 'Add new label'}</h3>\r\n                <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false) }} />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <Box className=\"modal-form\" component=\"form\" noValidate autoComplete=\"off\" onChange={handleLabelChange}>\r\n                    <TextField autoComplete=\"off\" className=\"txt-input\" error={error} value={label} name=\"label\" label=\"label name\" variant=\"outlined\" />\r\n                </Box>\r\n                <Stack className=\"form-buttons\" spacing={2} direction=\"row\">\r\n                    <Button variant=\"contained\" onClick={onSubmitLabel}>{labelToEdit ? 'Submit' : 'Add'}</Button>\r\n                </Stack>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Theme, useTheme } from '@mui/material/styles';\r\nimport { Button, Chip, FormControl, InputLabel, MenuItem, OutlinedInput, Select, Stack, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React, { useState } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { IAction, IDataObject } from '../../interfaces/dataInterfaces'\r\nimport { RootState } from '../../store/store'\r\nimport { addAction } from '../../store/actions/user.action';\r\nimport { Screen } from '../Screen';\r\nimport { CategoryModal } from './CategoryModal';\r\nimport { LabelModal } from './LabelModal';\r\nimport { MobileDateTimePicker, LocalizationProvider } from '@mui/lab';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport { setLoader } from '../../store/actions/app-state.action';\r\n\r\ninterface IActionModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\ninterface IErrors {\r\n    description: boolean,\r\n    category: boolean,\r\n    amount: boolean\r\n}\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction getStyles(title: string, labels: readonly string[], theme: Theme) {\r\n    return {\r\n        fontWeight:\r\n            labels.indexOf(title) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nexport const ActionModal = ({ closeModal }: IActionModalProps) => {\r\n\r\n    const selectedAction: IAction | null = useSelector((state: RootState) => state.appStateModule.selectedAction)\r\n    const data: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n    const dispatch = useDispatch()\r\n    const theme = useTheme();\r\n\r\n    const [formData, setFormData] = useState<IAction>(selectedAction || {\r\n        _id: '',\r\n        type: 'expense',\r\n        labels: [],\r\n        category: '',\r\n        description: '',\r\n        amount: 0,\r\n        createdAt: Date.now()\r\n    })\r\n\r\n    const [errors, setErrors] = useState({\r\n        description: false,\r\n        category: false,\r\n        amount: false\r\n    })\r\n\r\n    const [addCategoryModal, setAddCategoryModal] = useState(false)\r\n    const [addLabelModal, setAddLabelModal] = useState(false)\r\n\r\n    const handleChange = (ev: any) => {\r\n        setFormData({ ...formData, [ev.target.name]: ev.target.value })\r\n    }\r\n\r\n    const handleLabelsChange = (ev: any) => {\r\n        const labels = ev.target.value\r\n        const formDataCopy = { ...formData, labels: typeof labels === 'string' ? labels.split(',') : labels }\r\n        setFormData(formDataCopy)\r\n    }\r\n\r\n    const handleDateChange = (date: number | null) => {\r\n        if (date) {\r\n            const timeStamp = new Date(date).getTime();\r\n            if (timeStamp > Date.now()) {\r\n                alert(\"Date cannot be greater than the current date\")\r\n                return\r\n            } else{\r\n                setFormData({...formData, createdAt: timeStamp})\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmit = async () => {\r\n        let isValid = true\r\n\r\n        const errorsCopy = { ...errors }\r\n        for (const key in errors) {\r\n            if (!formData[key as keyof IAction]) {\r\n                isValid = false\r\n                errorsCopy[key as keyof IErrors] = true\r\n            } else if (key === 'amount' && formData.amount <= 0) {\r\n                isValid = false\r\n                errorsCopy.amount = true\r\n            } else {\r\n                errorsCopy[key as keyof IErrors] = false\r\n            }\r\n        }\r\n\r\n        if (!isValid) {\r\n            setErrors(errorsCopy)\r\n            return\r\n        } else {\r\n            dispatch(setLoader(true))\r\n            await dispatch(addAction(formData))\r\n            dispatch(setLoader(false))\r\n            closeModal(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"modal action-add-edit-modal\">\r\n                <div className=\"modal-header\">\r\n                    <h3>{selectedAction ? 'Edit action' : 'Add new action'}</h3>\r\n                    <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false) }} />\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <TextField autoComplete=\"off\" className=\"txt-input\" error={errors.description} value={formData.description} name=\"description\" onChange={handleChange} label=\"Description\" variant=\"outlined\" />\r\n                    <Box className=\"modal-form\" component=\"form\" noValidate autoComplete=\"off\" onChange={handleChange}>\r\n                        <div className=\"input-selectors\">\r\n                            <div className=\"input-select\">\r\n                                <FormControl className=\"input-field\" fullWidth>\r\n                                    <InputLabel id=\"type\">Type</InputLabel>\r\n                                    <Select fullWidth labelId=\"type\" id=\"type\" value={formData.type} label=\"Type\" name=\"type\" onChange={handleChange}>\r\n                                        <MenuItem key=\"type-expense\" value={'expense'}>Expense</MenuItem>\r\n                                        <MenuItem key=\"type-income\" value={'income'}>Income</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"input-select\">\r\n                                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                    <Stack spacing={3}>\r\n                                        <MobileDateTimePicker label=\"Date & Time\" ampm={false} inputFormat=\"dd/MM/yyyy HH:mm\" value={formData.createdAt} onAccept={(date) => {handleDateChange(date)}} onChange={(date) => { }} renderInput={(params) => <TextField autoComplete=\"off\" className=\"input-field\" {...params} />} />\r\n                                    </Stack>\r\n                                </LocalizationProvider>\r\n\r\n                            </div>\r\n                            <div className=\"inner-group\">\r\n                                <div className=\"input-select\">\r\n                                    <FormControl className=\"input-field\" fullWidth>\r\n                                        <InputLabel id=\"category\">Category</InputLabel>\r\n                                        <Select fullWidth labelId=\"category\" id=\"category\" error={errors.category} value={formData.category} label=\"Category\" name=\"category\" onChange={handleChange}>\r\n                                            {data && data.categories.map(category => <MenuItem key={category._id} value={category.title}>{category.title}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <Button variant=\"contained\" onClick={() => { setAddCategoryModal(true) }}>Add</Button>\r\n                                </div>\r\n                                <div className=\"input-select\">\r\n                                    <FormControl className=\"input-field\" fullWidth>\r\n                                        <InputLabel id=\"label\">Labels</InputLabel>\r\n                                        <Select id=\"multiple-labels\" multiple value={formData.labels} onChange={handleLabelsChange}\r\n                                            input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\r\n                                            renderValue={(selected) => (\r\n                                                <Box sx={{ display: 'flex', overflowX: 'auto', gap: 0.5 }}>\r\n                                                    {selected.map((value) => (\r\n                                                        <Chip key={value} label={value} />\r\n                                                    ))}\r\n                                                </Box>\r\n                                            )}\r\n                                            MenuProps={MenuProps}\r\n                                        >\r\n                                            {data.labels.map((label) => (\r\n                                                <MenuItem\r\n                                                    key={'options-' + label._id}\r\n                                                    value={label.labelName}\r\n                                                    style={getStyles(label.title, formData.labels, theme)}\r\n                                                >\r\n                                                    {label.title}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <Button variant=\"contained\" onClick={() => { setAddLabelModal(true) }}>Add</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <TextField autoComplete=\"off\" className=\"txt-input amount-input\" type=\"number\" error={errors.amount} value={formData.amount} name=\"amount\" label=\"Amount\" variant=\"outlined\" />\r\n                    </Box>\r\n                    <Stack className=\"form-buttons\" spacing={2} direction=\"row\">\r\n                        <Button variant=\"contained\" onClick={onSubmit}>{selectedAction ? 'Submit' : 'Add new action'}</Button>\r\n                    </Stack>\r\n                </div>\r\n            </div>\r\n\r\n            <Screen isOpen={addCategoryModal} exitScreen={setAddCategoryModal} zIndex=\"100\" />\r\n            <Screen isOpen={addLabelModal} exitScreen={setAddLabelModal} zIndex=\"100\" />\r\n            {addCategoryModal && <CategoryModal closeModal={setAddCategoryModal} setFormData={setFormData} />}\r\n            {addLabelModal && <LabelModal closeModal={setAddLabelModal} setFormData={setFormData} />}\r\n        </>\r\n    )\r\n}\r\n","import { Button } from '@mui/material'\r\nimport React, { ReactElement } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\n\r\ninterface IModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n    title: string;\r\n    message: ReactElement<HTMLDivElement>;\r\n    setAnswer: (answer: boolean) => void;\r\n}\r\n\r\nexport const ConfirmModal = ({ closeModal, title, message, setAnswer }: IModalProps) => {\r\n\r\n    return (\r\n        <div className=\"confirm-modal modal\">\r\n            <div className=\"modal-header\">\r\n                <h3>{title}</h3>\r\n                <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false); setAnswer(false)}} />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                {message}\r\n                <div className=\"buttons\">\r\n                    <Button onClick={() => {closeModal(false); setAnswer(true)}}>confirm</Button>\r\n                    <Button onClick={() => {closeModal(false); setAnswer(false)}}>cancel</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, FormControl, FormHelperText, MenuItem, Select, SelectChangeEvent, TextField } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { FaRegEdit } from 'react-icons/fa'\r\nimport { FiUpload } from 'react-icons/fi'\r\nimport { VscTrash } from 'react-icons/vsc'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { ICategory, IDataObject, IDataUpdateForm, ILabel } from '../../interfaces/dataInterfaces'\r\nimport { IUpdateForm } from '../../interfaces/userInterfaces'\r\nimport { alertMessage, alertTitleMessage } from '../../services/alert.service'\r\nimport { sessionStorageService } from '../../services/session-storage.service'\r\nimport { userService } from '../../services/user.service'\r\nimport { utilService } from '../../services/util.service'\r\nimport { setLoader } from '../../store/actions/app-state.action'\r\nimport { deleteCategory, deleteLabel, deleteUser, updateData, updateUser } from '../../store/actions/user.action'\r\nimport { RootState } from '../../store/store'\r\nimport { GetIcon } from '../GetIcon'\r\nimport { Loader } from '../Loader'\r\nimport { Screen } from '../Screen'\r\nimport { CategoryModal } from './CategoryModal'\r\nimport { ConfirmModal } from './ConfirmModal'\r\nimport { LabelModal } from './LabelModal'\r\n\r\ninterface IModalProps {\r\n    closeModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst tabs = ['Account', 'Preferences', 'Categories', 'Labels']\r\n\r\nexport const SettingsModal = ({ closeModal }: IModalProps) => {\r\n\r\n    const [currentTab, setCurrentTab] = useState('Account')\r\n\r\n    return (\r\n        <div className=\"settings-modal modal\">\r\n            <div className=\"modal-header\">\r\n                <h3>Settings</h3>\r\n                <AiOutlineClose className=\"exit-modal-btn\" onClick={() => { closeModal(false) }} />\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <div className=\"tabs\">\r\n                    {tabs.map(tab => <h2 key={tab} onClick={() => { setCurrentTab(tab) }} style={currentTab === tab ? { color: 'black', fontWeight: '600', borderBottom: '3px black solid' } : {}}>{tab}</h2>)}\r\n                </div>\r\n                <div className=\"settings-body\">\r\n                    {currentTab === 'Account' && <AccountSettings closeModal={closeModal} />}\r\n                    {currentTab === 'Preferences' && <PreferencesSettings closeModal={closeModal} />}\r\n                    {currentTab === 'Categories' && <CategoriesSettings />}\r\n                    {currentTab === 'Labels' && <LabelsSettings />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AccountSettings = ({ closeModal }: IModalProps) => {\r\n\r\n    interface IForm {\r\n        firstName: string,\r\n        lastName: string,\r\n        password1: string,\r\n        password2: string,\r\n        picture: string | null\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const user = useSelector((state: RootState) => state.userModule.loggedInUser) || sessionStorageService.load('loggedInUser')\r\n\r\n    const [formData, setFormData] = useState<IForm>({\r\n        firstName: user?.firstName || '',\r\n        lastName: user?.lastName || '',\r\n        password1: '',\r\n        password2: '',\r\n        picture: null\r\n    })\r\n\r\n    const [confirmModal, setConfirmModal] = useState(false)\r\n\r\n    const [errors, setErrors] = useState({\r\n        password: false\r\n    })\r\n\r\n    const pictureRef = useRef(null)\r\n\r\n    const handleChange = (ev: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setFormData({ ...formData, [ev.target.name]: ev.target.value })\r\n    }\r\n\r\n    const handleUploadClick = () => {\r\n        if (user.userName === 'DemoUser') {\r\n            alertTitleMessage('Opps...', 'Changes cannot be made on demo user', 'warning', 3500)\r\n            return\r\n        }\r\n        if (pictureRef.current) {\r\n            const element: HTMLInputElement = pictureRef.current\r\n            element.click()\r\n        }\r\n    }\r\n\r\n    const handlePictureUpload = async (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (ev.target.files && ev.target.files.length > 0) {\r\n            dispatch(setLoader(true))\r\n            alertMessage('Uploading image to cloud...', 'info', 3500)\r\n            const url = await userService.uploadImg(ev.target.files[0])\r\n            if (url) {\r\n                setFormData({ ...formData, picture: url })\r\n                alertMessage('Image uploaded to cloud...', 'success', 3500)\r\n            } else {\r\n                alertMessage('Something went wrong, try again later...', 'warning', 3500)\r\n            }\r\n            dispatch(setLoader(false))\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const formToSubmit: IUpdateForm = {}\r\n\r\n        if (formData.password1 || formData.password2) {\r\n            if (formData.password1 !== formData.password2) {\r\n                setErrors({ ...errors, password: true })\r\n                return\r\n            } else {\r\n                formToSubmit.password = formData.password1\r\n            }\r\n        }\r\n\r\n        if (formData.firstName && formData.firstName !== user.firstName) {\r\n            formToSubmit.firstName = formData.firstName\r\n        }\r\n\r\n        if (formData.lastName && formData.lastName !== user.lastName) {\r\n            formToSubmit.lastName = formData.lastName\r\n        }\r\n\r\n        if (formData.picture) {\r\n            formToSubmit.picture = formData.picture\r\n        }\r\n\r\n        dispatch(setLoader(true))\r\n        await dispatch(updateUser(formToSubmit))\r\n        dispatch(setLoader(false))\r\n        closeModal(false)\r\n    }\r\n\r\n    const handleConfirmModal = async () => {\r\n        setConfirmModal(true)\r\n    }\r\n\r\n    const modalMessage = (\r\n        <div>\r\n            <h3>This is irreversible.</h3>\r\n            <h3>Deleting your account will delete all of it's data forever.</h3>\r\n        </div>\r\n    )\r\n\r\n    const handleModalAnswer = async (answer: boolean) => {\r\n        if (answer) {\r\n            dispatch(setLoader(true))\r\n            const res = await dispatch(deleteUser())\r\n            dispatch(setLoader(false))\r\n            if(!res){\r\n                console.log('could not delete user')\r\n            } else {\r\n                navigate('/')\r\n            }\r\n        }\r\n    }\r\n\r\n    if(!user) return <Loader/>\r\n\r\n    return (\r\n        <>\r\n            <div className=\"account-settings\">\r\n                <div className=\"inputs\">\r\n                    <TextField autoComplete=\"off\" value={formData.firstName} name=\"firstName\" onChange={handleChange} label=\"first name\" variant=\"outlined\" />\r\n                    <TextField autoComplete=\"off\" value={formData.lastName} name=\"lastName\" onChange={handleChange} label=\"last name\" variant=\"outlined\" />\r\n                    {!user.isGoogle &&\r\n                        <>\r\n                            <TextField autoComplete=\"off\" value={formData.password1} name=\"password1\" onChange={handleChange} label=\"new password\" type=\"password\" error={errors.password} variant=\"outlined\" />\r\n                            <TextField autoComplete=\"off\" value={formData.password2} name=\"password2\" onChange={handleChange} label=\"verify password\" type=\"password\" error={errors.password} variant=\"outlined\" />\r\n                        </>\r\n                    }\r\n                    <Button onClick={handleUploadClick}>upload new picture<FiUpload /></Button>\r\n                    <input ref={pictureRef} type=\"file\" onChange={handlePictureUpload} style={{ display: 'none' }} />\r\n                    <p>*change only what's needed</p>\r\n                </div>\r\n                <Button onClick={handleSubmit}>submit</Button>\r\n                <Button className=\"delete-account-btn\" onClick={handleConfirmModal}>delete account</Button>\r\n            </div>\r\n            <Screen isOpen={confirmModal} exitScreen={setConfirmModal} zIndex=\"120\" />\r\n            {confirmModal && <ConfirmModal title=\"Warning\" message={modalMessage} setAnswer={handleModalAnswer} closeModal={setConfirmModal} />}\r\n        </>\r\n    )\r\n}\r\n\r\nconst PreferencesSettings = ({ closeModal }: IModalProps) => {\r\n\r\n    interface ICurrencyObj {\r\n        id: string,\r\n        currencySymbol?: string,\r\n        currencyName: string\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n\r\n    const [formData, setFormData] = useState<IDataUpdateForm>({\r\n        currency: rawData.currency\r\n    })\r\n    const [currencies, setCurrencies] = useState<ICurrencyObj[] | null>(null)\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const data = await utilService.getCurrencies()\r\n            const currencies = Object.entries(data).filter((currency: any) => { return currency[1].currencySymbol ? true : false }).map((currency: any) => currency[1])\r\n            setCurrencies(currencies)\r\n        })()\r\n    }, [])\r\n\r\n    const handleChange = (ev: SelectChangeEvent<string>) => {\r\n        if (ev.target.name === 'currency') {\r\n            const currency = {\r\n                code: ev.target.value,\r\n                sign: utilService.getSymbolFromCode(ev.target.value)\r\n            }\r\n            setFormData({ ...formData, [ev.target.name]: currency })\r\n        } else {\r\n            // If other fields come in the future...\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        dispatch(setLoader(true))\r\n        await dispatch(updateData(formData))\r\n        dispatch(setLoader(false))\r\n        closeModal(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"preferences-settings\">\r\n            <div className=\"inputs\">\r\n                {formData.currency &&\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <FormHelperText>Currency sign</FormHelperText>\r\n                            <Select value={formData.currency.code} name=\"currency\" onChange={handleChange}>\r\n                                {currencies && currencies.map((currency: ICurrencyObj) => <MenuItem key={currency.id} value={currency.id}>{currency.currencyName} {currency.currencySymbol}</MenuItem>)}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                }\r\n            </div>\r\n            <Button onClick={handleSubmit}>submit</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CategoriesSettings = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n\r\n    const [addCategoryModal, setAddCategoryModal] = useState(false)\r\n    const [selectedCategory, setSelectedCategory] = useState<ICategory | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (!addCategoryModal) {\r\n            setSelectedCategory(null)\r\n        }\r\n    }, [addCategoryModal])\r\n\r\n    const handleDelete = async (categoryId: string) => {\r\n        dispatch(setLoader(true))\r\n        const res = await dispatch(deleteCategory(categoryId))\r\n        dispatch(setLoader(false))\r\n        if (!res) {\r\n            alertMessage(\"Cannot delete a category while it's in use\", 'danger', 3500)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"categories-settings\">\r\n                <div className=\"select-modal\">\r\n                    {rawData.categories.length === 0 && <h2 className=\"empty-msg\">No categories to show</h2>}\r\n                    {rawData && rawData.categories.map((category: ICategory) => {\r\n                        return (\r\n                            <div key={category._id} className=\"category-preview\">\r\n                                <div className=\"left-side\">\r\n                                    <div className=\"icon\" style={{ backgroundColor: category.bgColor }}>\r\n                                        <GetIcon iconName={category.icon} />\r\n                                    </div>\r\n                                    {category.title}\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <div onClick={() => { setSelectedCategory(category); setAddCategoryModal(true) }}><FaRegEdit /></div>\r\n                                    <div className=\"delete-btn\" onClick={() => { handleDelete(category._id) }}><VscTrash /></div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <Button onClick={() => { setAddCategoryModal(true) }}>add new</Button>\r\n            </div>\r\n\r\n            {addCategoryModal &&\r\n                <>\r\n                    <Screen isOpen={addCategoryModal} exitScreen={setAddCategoryModal} zIndex=\"100\" />\r\n                    {addCategoryModal && <CategoryModal closeModal={setAddCategoryModal} categoryToEdit={selectedCategory} />}\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst LabelsSettings = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const rawData: IDataObject = useSelector((state: RootState) => state.userModule.data)\r\n\r\n    const [addLabelModal, setAddLabelModal] = useState(false)\r\n    const [selectedLabel, setSelectedLabel] = useState<ILabel | null>(null)\r\n\r\n    const [confirmModal, setConfirmModal] = useState(false)\r\n\r\n    const handleModalAnswer = async (answer: boolean) => {\r\n        if (answer && selectedLabel) {\r\n            dispatch(setLoader(true))\r\n            await dispatch(deleteLabel(selectedLabel._id))\r\n            dispatch(setLoader(false))\r\n        }\r\n        setSelectedLabel(null)\r\n    }\r\n\r\n    const handleConfirmModal = async (label: ILabel) => {\r\n        setSelectedLabel(label)\r\n        setConfirmModal(true)\r\n    }\r\n\r\n    const modalMessage = (\r\n        <div>\r\n            <h3>This is irreversible.</h3>\r\n            <h3>Deleting a label will remove it from all of it's occurrences forever.</h3>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div className=\"labels-settings\">\r\n                <div className=\"select-modal\">\r\n                    {rawData.labels.length === 0 && <h2 className=\"empty-msg\">No labels to show</h2>}\r\n                    {rawData && rawData.labels.map((label: ILabel) => {\r\n                        return (\r\n                            <div key={label._id} className=\"label-preview\">\r\n                                <div className=\"left-side\">\r\n                                    <h2 className=\"label\">{label.labelName}</h2>\r\n                                </div>\r\n                                <div className=\"right-side\">\r\n                                    <div onClick={() => { setSelectedLabel(label); setAddLabelModal(true) }}><FaRegEdit /></div>\r\n                                    <div className=\"delete-btn\" onClick={() => { handleConfirmModal(label) }}><VscTrash /></div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <Button onClick={() => { setAddLabelModal(true) }}>add new</Button>\r\n            </div>\r\n            {addLabelModal &&\r\n                <>\r\n                    <Screen isOpen={addLabelModal} exitScreen={setAddLabelModal} zIndex=\"100\" />\r\n                    {addLabelModal && <LabelModal closeModal={setAddLabelModal} labelToEdit={selectedLabel} />}\r\n                </>\r\n            }\r\n            <Screen isOpen={confirmModal} exitScreen={setConfirmModal} zIndex=\"120\" />\r\n            {confirmModal && <ConfirmModal title=\"Warning\" message={modalMessage} setAnswer={handleModalAnswer} closeModal={setConfirmModal} />}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { MainAppMenu } from '../components/MainAppMenu'\r\nimport { MobileMenu } from '../components/MobileMenu'\r\nimport { Screen } from '../components/Screen'\r\nimport { HeaderBlock } from '../components/blocks/HeaderBlock'\r\nimport { getData, getUser } from '../store/actions/user.action'\r\nimport { BalanceBlock } from '../components/blocks/BalanceBlock'\r\n// import { GoPrimitiveDot as MobileIdx } from 'react-icons/go'\r\nimport { SummeryBlock } from '../components/blocks/SummeryBlock'\r\nimport { RootState } from '../store/store'\r\nimport { GraphBlock } from '../components/blocks/GraphBlock'\r\nimport { SearchModal } from '../components/modals/SearchModal'\r\nimport { ActionModal } from '../components/modals/ActionModal'\r\nimport { setLoader, setSelectedAction } from '../store/actions/app-state.action'\r\nimport { sessionStorageService } from '../services/session-storage.service'\r\nimport { dateService } from '../services/date.service'\r\nimport { SettingsModal } from '../components/modals/SettingsModal'\r\nimport { useNavigate } from 'react-router'\r\n\r\n\r\nexport const MainApp = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const currentViewMode = useSelector((state: RootState) => state.appStateModule.currentViewMode)\r\n    const user = useSelector((state: RootState) => state.userModule.loggedInUser) || sessionStorageService.load('loggedInUser')\r\n    const filterBy = useSelector((state: RootState) => state.appStateModule.filterBy)\r\n\r\n    const [isMenuOpen, setMenuOpen] = useState(false)\r\n    const [isSearchModalOpen, setSearchModalOpen] = useState(false)\r\n    const [isSettingsModalOpen, setSettingsModalOpen] = useState(false)\r\n    const [isActionModalOpen, setActionModalOpen] = useState(false)\r\n    // const [currentBlock, setCurrentBlock] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const _getData = async () => {\r\n            dispatch(setLoader(true))\r\n            await dispatch(getData(dateService.getDateFilterBy(filterBy)))\r\n            dispatch(setLoader(false))\r\n        }\r\n\r\n        const _getUser = async () => {\r\n            return await dispatch(getUser())\r\n        }\r\n\r\n        if(user){\r\n            _getData()\r\n        } else {\r\n            const fetchedUser = _getUser()\r\n            if(!fetchedUser){\r\n                navigate('/')\r\n            }\r\n        }\r\n    }, [dispatch, user, filterBy, navigate])\r\n\r\n    useEffect(() => {\r\n        if (!isActionModalOpen || isMenuOpen || isSettingsModalOpen) dispatch(setSelectedAction(null))\r\n    }, [dispatch, isActionModalOpen, isMenuOpen, isSettingsModalOpen])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-app\">\r\n                <MainAppMenu isMenuOpen={isMenuOpen} setMenuOpen={setMenuOpen} setActionModalOpen={setActionModalOpen} setSettingsModalOpen={setSettingsModalOpen} />\r\n                <div className=\"app-content\">\r\n                    <div className=\"full-screen-content\">\r\n                        <MobileMenu setMenuOpen={setMenuOpen} setActionModalOpen={setActionModalOpen} />\r\n                        <HeaderBlock setSearchModalOpen={setSearchModalOpen} />\r\n                        <BalanceBlock />\r\n                        {currentViewMode === 'Graph' && <GraphBlock />}\r\n                        <div className=\"main-content-blocks\">\r\n                            <SummeryBlock type=\"expense\" setActionModalOpen={setActionModalOpen} />\r\n                            <SummeryBlock type=\"income\" setActionModalOpen={setActionModalOpen} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className=\"pagination-dots mobile-only\">\r\n                <MobileIdx className={`${currentBlock ? 'fade-dot' : ''}`} />\r\n                <MobileIdx className={`${!currentBlock ? 'fade-dot' : ''}`} />\r\n            </div> */}\r\n\r\n            <Screen isOpen={isMenuOpen} exitScreen={setMenuOpen} />\r\n            <Screen isOpen={isSearchModalOpen} exitScreen={setSearchModalOpen} />\r\n            <Screen isOpen={isActionModalOpen} exitScreen={setActionModalOpen} />\r\n            <Screen isOpen={isSettingsModalOpen} exitScreen={setSettingsModalOpen} />\r\n\r\n            {isSearchModalOpen && <SearchModal closeModal={setSearchModalOpen} />}\r\n            {isActionModalOpen && <ActionModal closeModal={setActionModalOpen} />}\r\n            {isSettingsModalOpen && <SettingsModal closeModal={setSettingsModalOpen} />}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Route, Routes } from 'react-router'\nimport { HomePage } from './pages/HomePage';\nimport { MainApp } from './pages/MainApp';\nimport { Loader } from './components/Loader';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Loader/>\n      <Routes>\n        <Route path='/mydata' element={<MainApp/>}/>\n        <Route path='/' element={<HomePage/>}/>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import { IDataObject } from \"../../interfaces/dataInterfaces\"\r\nimport { IUser } from \"../../interfaces/userInterfaces\"\r\n\r\ninterface IState {\r\n    loggedInUser: IUser | null,\r\n    currentViewMode: string\r\n    currentLabel: string | null\r\n    data: IDataObject | null\r\n}\r\n\r\ninterface IReducerAction {\r\n    type: string,\r\n    [key: string]: any\r\n}\r\n\r\nconst initialState: IState = {\r\n    loggedInUser: null,\r\n    currentViewMode: 'Summery',\r\n    currentLabel: null,\r\n    data: null\r\n}\r\n\r\nexport const userReducer = (state = initialState, action: IReducerAction) => {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return state = { ...state, loggedInUser: action.user }\r\n        case 'SET_DATA':\r\n            return state = { ...state, data: action.data }\r\n        default:\r\n            return state\r\n    }\r\n}","import { IAction, IFilterBy } from \"../../interfaces/dataInterfaces\"\r\nimport { dateService } from \"../../services/date.service\"\r\n\r\ninterface IState {\r\n    loaderState: boolean;\r\n    currentViewMode: string;\r\n    currentLabel: string | null;\r\n    selectedAction: IAction | null;\r\n    filterBy: IFilterBy;\r\n}\r\n\r\ninterface IReducerAction {\r\n    type: string;\r\n    [key: string]: any;\r\n}\r\n\r\nconst initialState: IState = {\r\n    loaderState: false,\r\n    currentViewMode: 'Summery',\r\n    currentLabel: null,\r\n    selectedAction: null,\r\n    filterBy: {\r\n        searchTxt: '',\r\n        startDate: dateService.getMonthStartTimeStamp(),\r\n        endDate: dateService.getDayMaxHour(Date.now()),\r\n        label: '',\r\n        category: ''\r\n    }\r\n}\r\n\r\nexport const appStateReducer = (state = initialState, action: IReducerAction) => {\r\n    switch (action.type) {\r\n        case 'SET_LOADER':\r\n            return state = { ...state, loaderState: action.loaderState }\r\n        case 'SET_VIEWMODE':\r\n            return state = { ...state, currentViewMode: action.viewMode }\r\n        case 'SET_LABEL':\r\n            return state = { ...state, currentLabel: action.label }\r\n        case 'SET_SELECTED_ACTION':\r\n            return state = { ...state, selectedAction: action.action }\r\n        case 'SET_FILTERBY':\r\n            return state = { ...state, filterBy: action.filterBy }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { userReducer } from './reducers/user.reducer'\r\nimport { appStateReducer } from './reducers/app-state.reducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    userModule: userReducer,\r\n    appStateModule: appStateReducer\r\n})\r\n\r\n\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__();\r\n// Lets wire up thunk and also redux-dev-tools:\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// export const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n// Store types\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type RootState = ReturnType<typeof store.getState>\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  type Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n  };\r\n  \r\n  export function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './store/store';\r\nimport './styles/style.scss'\r\n\r\nimport ReactNotification from 'react-notifications-component'\r\nimport \"animate.css\"\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ReactNotification />\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();"],"sourceRoot":""}